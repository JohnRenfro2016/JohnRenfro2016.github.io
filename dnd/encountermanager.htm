<!DOCTYPE html>
<html lang="en-US">
<head>
<meta content="text/html" charset="utf-8" http-equiv="content-type">
<meta content="utf-8" http-equiv="encoding">
<meta name="description" content="2022 Dungeons & Dragons 5th Edition Tabletop Roleplaying Game Manager">
<meta name="keywords" content="DnD, Dungeons and Dragons, D&D, Dungeons & Dragons, Fantasy RPG, tabletop roleplaying game, TTRPG, RPG">
<title>The Dungeons & Dragons 5th Edition Tabletop Fantasy Roleplaying Game Single Encounter Manager 2022(Wizards of the Coast, Asmor, Zorn, Ren)</title>
//<script src="Scripts/WZDragdrop.js"></script>
//<script src="Scripts/jquery-3.6.0.js"></script>
<script src="Scripts/jquery-ui-1.13.1.js"></script>
<script src="Scripts/draggable-div-with-touch.js"></script>
<script>

$('.DraggableDiv').draggableTouch()

</script>
</head>

<style>

@font-face
{font-family: MyKidsHandwritten;
src: url("Decorations/MyKidsHandwritten.ttf");
}

body
{background-color:#013220;
z-index:0;
}

table,tr,td,button,input,option,radio,select,textarea
{background-color:inherit;
border:1px;
border-color:#333b2f;
border-style:solid;
border-radius:4px;
font-family: 'MyKidsHandwritten';
font-size:18px;
margin:1px;
outline:1px solid transparent;
overflow-wrap:anywhere;
padding:1px;
text-decoration:#22271f;
text-decoration-thickness:2px;
vertical-align:top;
word-break:break-word;
}

.piece
{background-color:inherit;
border:1px;
border-color:#333b2f;
border-style:solid;
border-radius:4px;
font-family: 'MyKidsHandwritten';
font-size:75%;
margin:1px;
max-width:100px;
min-width:100px;
outline:1px solid transparent;
padding:1px;
text-decoration:#22271f;
text-decoration-thickness:2px;
vertical-align:top;
z-index:1;
}

table
{background-image:url("Decorations/Panel.png");
}

.tablesTogether{display:inline-block;}

td,tr
{word-wrap: normal;
}

tr:nth-child(even){background:rgba(0,0,0, 0.1)}tr:nth-child(odd){background:rgba(0,0,0, 0.2)}
td:nth-child(even){background:rgba(0,0,0, 0.1)}td:nth-child(odd){background:rgba(0,0,0, 0.2)}
a:active{color:#f13a37
}a:link{color:#8e060f
}a:hover{color:#c4141b
}a:selected{color:#b92429
}a:visited{color:#fb8684
}h1{color:#871604
}h2{color:#5c0904
}h3{color:#6c0b04
}

.MapSelection
{ height:auto;
 width:900px;
}

.die20
{ height: 100px;
 width: 100px;
 object-fit: none;
 object-position: 98% 100%;
}

.die12
{ height: 100px;
 width: 100px;
 object-fit: none;
 object-position: 72% 100%;
}

.die10
{ height: 100px;
 width: 100px;
 object-fit: none;
 object-position: 98% 100%;
}
.die8
{ height: 100px;
 width: 100px;
 object-fit: none;
 object-position: 48% 100%;
}
.die6
{ height: 100px;
 width: 100px;
 object-fit: none;
 object-position: 25% 100%;
}
.die4
{ height: 100px;
 width: 100px;
 object-fit: none;
 object-position: 0% 100%;
}

mark
{background-color:#f8ecdd;
}

</style>

<body>

<table><tr><td>
<table><tr><td>
<input type='button' value='Roll all initiatives?' onClick='rollInitiatives()'>
</td></tr><tr><td>
<input type='button' value='Save all characters?' onClick='saveAll()'>
</td></tr><tr><td>
<input type='button' value='Target then Clone a character?' onClick='cloneIt(type)'>
</td></tr><tr><td>
<input type='button' value='Create a new character?' onClick='newCharacter(PC)'>
</td></tr><tr><td>
</td></tr><tr><td><a href='https://imgur.com/a/IXjjg' target='_blank'>Ozuro's Dungeon Master Screen</a>
</td></tr><tr><td>
<a href='https://fastcharacter.com/' target='_blank'>FastCharacter.Com</a>
</td></tr><tr><td>
Target then paste stats?
<textArea cols='40' rows='5' onChange='stats=this.value;setStats()'></textarea><b id='statsDisplay'></b>
</td></tr><tr><td>
To save your characters, play off-line. <a href="dnd.zip">dnd.zip</a>
</td></tr><tr><td>
Encounter Notes,XP totals(not saved after shift reload of webpage):
<textArea cols='40' rows='4'></textarea>
</td></tr><tr><td>
Condition Durations:
<input type='field' size='40'><br>10/<input id='1stDuration' type='field' size='2' value='10'>turns.
<script>
function reduceByOne(){document.getElementById('1stDuration').value=(document.getElementById('1stDuration').value-1)}
</script>
<input type='button' onclick='reduceByOne()' value='end turn?'>
</td></tr><tr><td>
Condition Durations:
<input type='field' size='40'><br>10/<input id='2ndDuration' type='field' size='2' value='10'>turns.
<script>
function reduceByOne2(){document.getElementById('2ndDuration').value=(document.getElementById('2ndDuration').value-1)}
</script>
<input type='button' onclick='reduceByOne2()' value='end turn?'>
</td></tr><tr><td>
Condition Durations:
<input type='field' size='40'><br>10/<input id='3rdDuration' type='field' size='2' value='10'>turns.
<script>
function reduceByOne3(){document.getElementById('3rdDuration').value=(document.getElementById('3rdDuration').value-1)}
</script>
<input type='button' onclick='reduceByOne3()' value='end turn?'>
</td></tr><tr><td>
Condition Durations:
<input type='field' size='40'><br>10/<input id='4thDuration' type='field' size='2' value='10'>turns.
<script>
function reduceByOne4(){document.getElementById('4thDuration').value=(document.getElementById('4thDuration').value-1)}
</script>
<input type='button' onclick='reduceByOne4()' value='end turn?'>
</td></tr><tr><td>
<input onMouseOut="rollOne=parseInt(rollDForm(this.value));document.getElementById('rollOneDisplay').innerHTML='('+naturalRoll+roll+')='+rollOne" maxLength='8' size='8' placeHolder='XdY+Z' type='text'><b id='rollOneDisplay'></b>
</td></tr><tr><td>
<input onMouseOut="rollTwo=parseInt(rollDForm(this.value));document.getElementById('rollTwoDisplay').innerHTML='('+naturalRoll+roll+')='+rollTwo" maxLength='8' size='8' placeHolder='XdY+Z' type='text'><b id='rollTwoDisplay'></b>
</td></tr><tr><td>
<input onMouseOut="rollThree=parseInt(rollDForm(this.value));document.getElementById('rollThreeDisplay').innerHTML='('+naturalRoll+roll+')='+rollThree" maxLength='8' size='8' placeHolder='XdY+Z' type='text'><b id='rollThreeDisplay'></b>
</td></tr><tr><td>
<input onMouseOut="rollFour=parseInt(rollDForm(this.value));document.getElementById('rollFourDisplay').innerHTML='('+naturalRoll+roll+')='+rollFour" maxLength='8' size='8' placeHolder='XdY+Z' type='text'><b id='rollFourDisplay'></b>
</td></tr><tr><td>
<input onMouseOut="rollFive=parseInt(rollDForm(this.value));document.getElementById('rollFiveDisplay').innerHTML='('+naturalRoll+roll+')='+rollFive" maxLength='8' size='8' placeHolder='XdY+Z' type='text'><b id='rollFiveDisplay'></b>
</td></tr><tr><td>
<input onMouseOut="rollSix=parseInt(rollDForm(this.value));document.getElementById('rollSixDisplay').innerHTML='('+naturalRoll+roll+')='+rollSix" maxLength='8' size='8' placeHolder='XdY+Z' type='text'><b id='rollSixDisplay'></b>
</td></tr><tr><td>
<img class='die20' src='Decorations/DiceSprite.jpeg'><br>
<input onClick="d20roll=d(20);document.getElementById('d20result').innerHTML=d20roll" type='button' value='Roll a 1d20?'><b id='d20result'></b>
</td></tr><tr><td>
<img class='die12' src='Decorations/DiceSprite.jpeg'><br>
<input onClick="d12roll=d(12);document.getElementById('d12result').innerHTML=d12roll" type='button' value='Roll a 1d12?'><b id='d12result'></b>
</td></tr><tr><td>
<img class='die10' src='Decorations/DiceSprite.jpeg'><br>
<input onClick="d10roll=d(10);document.getElementById('d10result').innerHTML=d10roll" type='button' value='Roll a 1d10?'><b id='d10result'></b>
</td></tr><tr><td>
<img class='die8' src='Decorations/DiceSprite.jpeg'><br>
<input onClick="d8roll=d(8);document.getElementById('d8result').innerHTML=d8roll" type='button' value='Roll a 1d8?'><b id='d8result'></b>
</td></tr><tr><td>
<img class='die6' src='Decorations/DiceSprite.jpeg'><br>
<input onClick="d6roll=d(6);document.getElementById('d6result').innerHTML=d6roll" type='button' value='Roll a 1d6?'><b id='d6result'></b>
</td></tr><tr><td>
<img class='die4' src='Decorations/DiceSprite.jpeg'><br>
<input onClick="d4roll=d(4);document.getElementById('d4result').innerHTML=d4roll" type='button' value='Roll a 1d4?'><b id='d4result'></b>
</td></tr><tr><td>
Random Skills:<br><span id='displayRandomSkills'></span>
</td></tr><tr><td>
Random Languages:<br><span id='displayRandomLanguages'></span>
</td></tr><tr><td>
Random Musical Instruments:<br><span id='displayRandomMusicalInstruments'></span>
</td></tr><tr><td>
Random Tools:<br><span id='displayRandomTools'></span>
</td></tr><tr><td>
Random Gambling Sets:<span id='displayRandomGamblingSets'></span>
</td></tr></table>
</td><td>
<table width='900px'><tr><td rowSpan='30'><img class='MapSelection' src='Maps/Map.png'>
</td></tr></table>
</td><td>
<table><tr><td>
37. BED of XILONEN (KseH5n'-an) '
In the center of this room is a withered tree, that looks like
a leaHess willow. rooted in a stepped depression. The
bottom of this hollow is filled with brackish, oily water,only a few inches deep. Across the room. beyond the
dead tree, is another door. Around the sides olthe room
is a 5' wide ledge encircling the tree. The walls of this
room are beaded with condensation.
SHOW THE PLAYERS ILLUSTRATION #11 . This "tree" is a semi-
sentient. gigontic variety of polyP. similar to a sea anemone,once worshipped as Xilonen, the hairy mother goddess of
corn. The polyp (AC 6; HD 7; HP 31 ; .#AT2-8; 0: 1-2 per tentacle
and save vs paralyzation at +2; spines do 1-4 paints if a
character is dragged across them) is very hungry.Once it has
paralyzed a victim it will draw him or her into its mouth which is
concealed among the nest of flailing tentacles and
protected by sharp spines. in 2 rounds. At anyone time only 3
tentacles may be employed against a single choracter; the
polyp has 24 such tentacles. A character which is swallowed
by the "mother-goddess" will be beyond recovery in 5
rounds.
Xilonen can not be killed from damage inHicted on its
tentacles. it will only take damage from ottacks directed at its
trunk. Each tentacle can take 4 points of damage before
being severed. Severed tentacles will regenerate in 2-12 days.
To reach Xilonen's trunk characters must wade through the
slimy water. If a character attacks while standing in the water
he or she must check for slipping at -1 (stip on a 5 or less on
2d6) . Fire attocks on Xilonen add +2 to each die of damage.
should attempt to climb out here, they will discover that the
dirt embankments will only hold 50# (500 g.p.) of weight.
More than 50# will couse lurther collapse, bu/)'ing the c limber
and innicting 3-12 paints of damage.
</td></tr></table>
<br>
<script>

const shuffleSkillsArray = (array) => {  for (let i = array.length - 1; i > 0; i--) {    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}
skillsArray=["Acrobatics(Dex)","AnimalHandling(Wis)","Arcana(Int)","Athletics(Str)","Deception(Cha)","History(Int)","Insight(Wis)","Intimidation(Cha)","Investigation(Int)","Medicine(Wis)","Nature(Int)","Perception(Wis)","Performance(Cha)","Persuasion(Cha)","Religion(Int)","SleightOfHand(Dex)","Stealth(Dex)","Survival(Wis)"];
shuffleSkillsArray(skillsArray);
document.getElementById("displayRandomSkills").innerHTML=(skillsArray);

const shuffleLanguagesArray = (array) => {  for (let i = array.length - 1; i > 0; i--) {    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}
languagesArray=["Common","Dwarvish","Elvish","Giant","Gnomish","Goblin","Halfling","Orc","Abyssal","Celestial","DeepSpeech","Draconic","Infernal","Primordial","Sylvan","Undercommon"];
shuffleLanguagesArray(languagesArray);
document.getElementById("displayRandomLanguages").innerHTML =(languagesArray);

const shuffleToolsArray = (array) => {  for (let i = array.length - 1; i > 0; i--) {    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}
toolsArray=["AlchemistSupplies","BrewerSupplies","CalligrapherSupplies","ThievesTools","CarpenterTools","CartographerTools","CobblerTools","CookUtensils","DisguiseKit","ForgeryKit","GlassblowerTools","HerbalismKit","JewelerTools","LeatherworkerTools","MasonTools","NavigatorTools","PainterSupplies","PotterTools","SmithTools","TinkerTools","WeaverTools","WoodcarverTools"];
shuffleToolsArray(toolsArray)
document.getElementById("displayRandomTools").innerHTML=(toolsArray);

const shuffleMusicalInstrumentsArray = (array) => {  for (let i = array.length - 1; i > 0; i--) {    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}
musicalInstrumentsArray=["Bagpipes","Drum","Dulcimer","Flute","Lute","Lyre","Horn","PanFlute","Shawm","Viol"];
shuffleMusicalInstrumentsArray(musicalInstrumentsArray);
document.getElementById("displayRandomMusicalInstruments").innerHTML =(musicalInstrumentsArray);

const gamblingSetsArray = (arr) => arr.sort(() => 0.5 - Math.random());

document.getElementById("displayRandomGamblingSets").innerHTML =(gamblingSetsArray(["DartsSet","DragonDiceSet","PlayingCardSet"]));

function AGEBox(color, code, textColorCode)
{this.borderX=10;
this.borderY=10;
this.code=code;
this.textColorCode=textColorCode;
}
function AGEElement(){this.elementId="AGE"+currentElementId;
currentElementId++;
this.x=0;
this.y=0;
this.contents="";
this.hide=_hide;
this.putAt=_putAt;
this.refresh=_refresh;
this.setContents=_setContents;
this.setStyle=_setStyle;
this.setX=_setX;
this.setY=_setY;
this.show=_show;
var newDiv=document.createElement('div');
newDiv.setAttribute('id', this.elementId);
//newDiv.className="ui-widget-content";
newDiv.className="DraggableDiv";
newDiv.style.position="absolute";
newDiv.style.top=this.y;
newDiv.style.left=this.x;
document.body.appendChild(newDiv);
newDiv.innerHTML="<div>";
this.hide();
$('.DraggableDiv').draggableTouch()}
function rollDForm(dForm){dForm=dForm.toLowerCase();
dIndex=dForm.indexOf("d");
signIndex=dForm.indexOf("+");
sign=true;
positive=true;
if(signIndex===-1){positive=false;
signIndex=dForm.indexOf("-")}
if(signIndex===-1){signIndex=dForm.length;
sign=false
}dice=0;
sides=0;
addOn=0;
if(dIndex===0){dice=1
}
else
{dice=dForm.substring(0, dIndex)}sides=dForm.substring(dIndex+1, signIndex);
if(sign){addOn=dForm.substring(signIndex+1);
if(!positive){addOn*=-1
}
}naturalRoll=XdY(dice, sides);
roll=(addOn / 1);
result=naturalRoll+roll;
if(roll> -1){roll="+"+roll
}return naturalRoll, roll, result
}
function d(sides){return Math.ceil(Math.random()*sides)}
function deleteRollPrompt(x, i){characters[x].deleteRoll(i)}
function dFormParse(toCheck){match=toCheck.match(diceRegex);
if(match !=null){return match[0]
}
else
{return null
}
}

function listStats(Name, Class)
{return Name, Class}

function cloneIt(PC)
{x=characters.length;
newChar=new Character();
newChar.setIndex(x);
newChar.refresh();
newChar.show();
characters[x]=newChar;
ADD_DHTML(newChar.box.elementId);
characters[x].setAC(characters[targeted].ac);
characters[x].setAbility(characters[targeted].ability);
characters[x].setAcrobatics(characters[targeted].acrobatics);
characters[x].setActionNotes(characters[targeted].actionNotes);
characters[x].setAlignment(characters[targeted].alignment);
characters[x].setAnimal(characters[targeted].animal);
characters[x].setArcana(characters[targeted].arcana);
characters[x].setArmor(characters[targeted].armor);
characters[x].setAthletics(characters[targeted].athletics);
characters[x].setBackF(characters[targeted].backF);
characters[x].setBackL(characters[targeted].backL);
characters[x].setBackS(characters[targeted].backS);
characters[x].setBackT(characters[targeted].backT);
characters[x].setBackground(characters[targeted].background);
characters[x].setBonds(characters[targeted].bonds);
characters[x].setCha(characters[targeted].cha);
characters[x].setChaPro(characters[targeted].chaPro);
characters[x].setClass(characters[targeted].class);
characters[x].setCon(characters[targeted].con);
characters[x].setConPro(characters[targeted].conPro);
characters[x].setCurHp(characters[targeted].curHP);
characters[x].setCurHp(characters[targeted].curHp);
characters[x].setDamageConditions(characters[targeted]. dmgConditions);
characters[x].setDeception(characters[targeted].deception);
characters[x].setDex(characters[targeted].dex);
characters[x].setDexPro(characters[targeted].dexPro);
characters[x].setEquipment(characters[targeted].equipment);
characters[x].setExperience(characters[targeted].experience);
characters[x].setFeats(characters[targeted].feats);
characters[x].setFeatureNotes(characters[targeted].featureNotes);
characters[x].setFeatures(characters[targeted].features);
characters[x].setFigure(characters[targeted].figure);
characters[x].setFlaws(characters[targeted].flaws);
characters[x].setHistory(characters[targeted].history);
characters[x].setHitDice(characters[targeted].hitDice);
characters[x].setIdeals(characters[targeted].ideals);
characters[x].setImmunity(characters[targeted].immunity);
characters[x].setInit(characters[targeted].init);
characters[x].setInitBonus(characters[targeted].initBonus);
characters[x].setInsight(characters[targeted].insight);
characters[x].setInt(characters[targeted].inte);
characters[x].setIntPro(characters[targeted].intPro);
characters[x].setIntimidation(characters[targeted].intimidation);
characters[x].setInvestigation(characters[targeted].investigation);
characters[x].setLanguages(characters[targeted].language);
characters[x].setLvl(characters[targeted].lvl);
characters[x].setMaxHp(characters[targeted].maxHp);
characters[x].setMedicine(characters[targeted].medicine);
characters[x].setName(characters[targeted].name+" "+[x]);
characters[x].setNature(characters[targeted].nature);
characters[x].setPerception(characters[targeted].perception);
characters[x].setPerformance(characters[targeted].performance);
characters[x].setPersuasion(characters[targeted].persuasion);
characters[x].setPro(characters[targeted].pro);
characters[x].setProficiencies(characters[targeted].proficiencies);
characters[x].setProficienciesRace(characters[targeted].proficienciesRace);
characters[x].setRace(characters[targeted].race);
characters[x].setReligion(characters[targeted].religion);
characters[x].setResistance(characters[targeted].resistance);
characters[x].setSaving(characters[targeted].saving);
characters[x].setSenses(characters[targeted].senses);
characters[x].setShield(characters[targeted].shield);
characters[x].setSize(characters[targeted].size);
characters[x].setSkills(characters[targeted].skills);
characters[x].setSleight(characters[targeted].sleight);
characters[x].setSpeed(characters[targeted].speed);
characters[x].setSpellAbility(characters[targeted].spellAbility);
characters[x].setSpellAbilityNumber(characters[targeted].spellAbilityNumber);
characters[x].setStealth(characters[targeted].stealth);
characters[x].setStr(characters[targeted].str);
characters[x].setStrPro(characters[targeted].strPro);
characters[x].setSurvival(characters[targeted].survival);
characters[x].setTrait(characters[targeted].trait);
characters[x].setVulnerability(characters[targeted].vulnerability);
characters[x].setWis(characters[targeted].wis);
characters[x].setWisPro(characters[targeted].wisPro);
for(var i=x; i< characters.length; i++){for(var j=0; j< characters[targeted].rolls.length; j++){characters[i].addRoll(characters[targeted].rollNames[j], characters[targeted].rolls[j], characters[targeted].rollNames2[j], characters[targeted].rolls2[j])}
}
}

t1="a, b, c, dmgDice"

function Abate(){a='(Abate)DC8+'+characters[targeted].spellAbility+'+pro vsWis 30ft 1tgt',b='0d0+0',c='can not take reacts utteo your nt',dmgDice='1d6+0',getAction(t1)}
function AbiDalzimsHorridWilting(){a='8th(Abi-Dalzim s Horrid Wilting)1act,tgts 30ft-cube vsCon or take 12d8 necrotic dmg. Plants wither and die.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function AbiDsHorridWilting(){a='8th Abi-D s Horrid Wilting)30ft-cube 10d8 Necrotic dmg; save halves; plants/water elem. dis. const/undead immune DC8+'+characters[targeted].spellAbility+'+pro vsCon 150ft',b='0d0+0',c='necro',dmgDice='10d8+0',getAction(t1)}
function AbsorbElements(){a='11th(Absorb Elements)reaction, The caster has resistance to the dmg received and deals 1d6 xtra dmg of the same type on his next atk',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function AcidSplash(){a='Cantrip(Acid Splash)DC8+'+characters[targeted].spellAbility+'+pro vsDex 60ft 2 adjac tgts',b='0d0+0',c='acid+1d6@5, 11, 17th lvl',dmgDice='1d6+0',getAction(t1)}
function AcidStream(){a='1st(Acid Stream)1act,30ft-line,5ft-w,conce,1min',b='0d0+0',c='acid,3d4dmg atso tgts 10/10turns,+1d4dmg/higherSlot',dmgDice='3d4+0',getAction(t1)}
function AganazzarsScorcher(){a='2nd(Aganazzar s Scorcher)1act,tgts on a 30ft-l, 5ft-w lineDC8+'+characters[targeted].spellAbility+'+pro vsDex or taker 3d8 fire dmg',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Aid(){a='2nd(Aid)3 tgts gain 5+5/slot lvl curHP and maxHP for the duration 30ft 8hrs',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Alarm(){a='1st(Alarm)10/10turns ritual 30ft 8hrs 20ft-cube point designate who does not set off mental or 10sec 60ft-radi audible waking alarm',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function AlchemicalAcid(){a='(Alchemical Acid)DC8+'+characters[targeted].spellAbility+'+pro vsDex 30ft 1tgt',b='0d0+0',c='acid+dex, 2d6,@3rd, 3d6@5th, 4d6@7th, 5d6@9th, 6d6@11th, 7d6@13th, 8d6@15th, 9d6@17th, 10d6@19th',dmgDice='1d6+0',getAction(t1)}
function AlchemicalFire(){a='(Alchemical Fire)DC8+'+characters[targeted].spellAbility+'+pro vsDex 30ft 5ft rad',b='0d0+0',c='fire+dex, 2d6@4th, 3d6@7th, 4d6@10th, 5d6@13th, 6d6@16th, 7d6@19th',dmgDice='1d6+0',getAction(t1)}
function AlterSelf(){a='2nd(Alter Self)self conce,1hr',b='0d0+0',c='change options as bonus gills, webbing, breathe underwater, swim speed is walk speed*or change height, weight, face, voice, hair, color, race but not size or number of limbs*or atk+1 with claws, fangs, spines, horns and deal 1d6 bludg slash, pierc',dmgDice='0d0+0',getAction(t1)}
function AnimalFriendship(){a='1st(Animal Friendship)1+1/slot beast Int4+)DC8+'+characters[targeted].spellAbility+'+pro vsWis 30ft 24hrs',b='0d0+0',c='charmed',dmgDice='0d0+0',getAction(t1)}
function AnimalMessenger(){a='2nd(Animal Messenger)30ft',b='0d0+0',c='tiny beast delivers 25 word message up to 25mi flyer 50mi 24+48hrs/slot',dmgDice='0d0+0',getAction(t1)}
function AnimalShapes(){a='8th(Animal Shapes)Any willing tgts transform into up to Large CR4 beasts retain Wis, Int, Cha, but nothing else 30ft conce,24hrs',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function AnimateDead(){a='3rd(Animate Dead)10/10turns 10ft Create 1 medium or 1 small skeleton or zombie+2/slot 60ft bonus command',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function AnimateObjects(){a='5th(Animate Objects)10+2/slot lvl nonmagical objects not worn or carried; bns a command within 500ft; 120ft conce,10/10turns',b='0d0+0',c='Tiny 20hp ac18 atk+8 dmg1d4+4 str4 dex18|Small 25hp ac16 atk+6 dmg1d8+2 str6 dex14|Medium(counts as 2 objects)40hp ac13 atk+5 dmg2d6+1 str10 dex12|Large(counts as 4 objects)50hp ac10 atk+6 dmg2d10+2 str14	dex10|Huge(counts as 8 objectss)80hp ac10	atk+8 dmg2d12+4 str18 dex6',dmgDice='0d0+0',getAction(t1)}
function AntilifeShell(){a='5th(Antilife Shell)Only undead and constructs can come within 10ft; if forced upon living Creature the spell ends 10ft-radi conce,1hr',b='0d0+0',c='',dmgDice='5d10+0',getAction(t1)}
function AntimagicField(){a='8th(Antimagic Field)No magical effectsfunction in area except those Created by an artefact or a deity 10ft-radi conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function AntipathySympathy(){a='8th AntipathySympathy)Object or area up to 200ft-cube attracts or repels specific type of intelligent tgts; save DC8+'+characters[targeted].spellAbility+'+pro vsWis 1hr 60ft 10 days',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ArcaneEye(){a='4th(Arcane Eye)30ft conce,1hr visual sensor darkvision 30ft move 30ft through 1in diame on same plane',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ArcaneGate(){a='6th(Arcane Gate)Two portals, up to 500ft apart, teleport any to other side; portals are filled with opaque mist 500ft conce,10min P 214',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ArcaneLock(){a='2nd(Arcane Lock)touch til dispelled',b='0d0+0',c='locked to all but you and allies password Knock spell suppresses 10min DC+10 to break or pick lock',dmgDice='0d0+0',getAction(t1)}
function ArcaneWeapon(){a='1st(Arcane Weapon)bonus,self,conce,1hr',b='0d0+0',c='wpn dmg+1d6 magical, acid, cold, fire, lighting, poison or thunder,8hrs 3rdSlot or higher',dmgDice='1d6+0',getAction(t1)}
function ArmorOfAgathys(){a='1st(Armor of Agathys)5+5/slot temp HP self 1hr',b='0d0+0',c='melee atkers take cold+5/slot as long as temp HP',dmgDice='0d0+5',getAction(t1)}
function ArmsOfHadar(){a='1st(Arms of Hadar)DC8+'+characters[targeted].spellAbility+'+pro vsStr 1/2dmg,on failed save no reacts until tgt next turn 10ft-radi s',b='0d0+0',c='necro+1d6/slot',dmgDice='2d6+0',getAction(t1)}
function AstralProjection(){a='9th(Astral Projection)You+8 ally projected to Astral Plane with identical statistics(per tgts 1100gp cons.)1hr 10ft Special',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Atlatl(){a='Atlatl Simple Ranged Varies, Varied lbs Varies, Varied Exotic, Ammunition, Range, Range (2x/3x), Special',b='1d20+0',c='Piercing',dmgDice='0d0+0   ',getAction(t1)}
function Augury(){a='2nd(Augury)Omen about specific course of action you plan to take in the next 30 min(25gp)Div 10/10turns Self m',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function AuraOfLife(){a='4th(Aura of Life)',b='0d0+0',c='resist heals all 0hp within 30ft-radi to 1hp',dmgDice='0d0+1',getAction(t1)}
function AuraOfVitality(){a='3rd(Aura of Vitality)1 ally within 30ft-radi 10/10turns',b='0d0+0',c='heal',dmgDice='2d6+0',getAction(t1)}
function Awaken(){a='5th(Awaken)Give beast or plant Int 10 and ability to move. Follows commands for 30 days(1000gp cons.)8hrs touch m',b='0d0+0',c='',dmgDice='5d10+0',getAction(t1)}
function Bane(){a='1st(Bane)30ft.DC8+'+characters[targeted].spellAbility+'+pro vsCha',b='0d0+0',c='3 tgts+1/slot roll atk or save -1d4.conce,or 10/10turns',dmgDice='1d4+0',getAction(t1)}
function BanishingSmite(){a='5th(Banishing Smite)Next melee hit bonus self conce,1min',b='0d0+0',c='force+less than 50hp banished til spell ends',dmgDice='5d10+0',getAction(t1)}
function Banishment(){a='4th(Banishment)60ft conce,10/10turns 1tgt+1/slot DC8+'+characters[targeted].spellAbility+'+pro vsCha',b='0d0+0',c='tgts sent to harmless demiplane, tgts reappear if conce,ntration lost',dmgDice='0d0+0',getAction(t1)}
function Barkskin(){a='2nd(Barkskin)1 ally AC cannot be reduced below 16, regardless of armor it is wearing touch conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Battleaxe(){a='Battleaxe Martial Melee 10 gp 4 lbs Versatile(1d10) SRD5',b='1d20+0',c='Slashing',dmgDice='1d8+0',getAction(t1)}
function BeaconOfHope(){a='3rd(Beacon of Hope)Any tgts in range adv. on Wis/Death saves and gains max hp from any healing 30ft conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function BeastBond(){a='1st(Beast Bond)divination, 1act,conce,Create a telepathic link with one beast to communicate with it.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function BeastSense(){a='2nd(Beast Sense)Use 1 willing beast s senses; you are blinded and deafened while doing so touch s conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function BeckonFamiliar(){a='(Beckon Familiar)1hr ritual, telepathic communication, see and hear through 1 familiar @a time, summon or dismiss, or permanently dismiss the familiar as 1act,cast touch spells through familiar within 100ft as its react, no spell slot cost',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function BestowCurse(){a='3rd(Bestow Curse)touch conce,10/10turns)DC8+'+characters[targeted].spellAbility+'+pro vsWis or tgt no action this turn or',b='0d0+0',c='1tgt abi @DisAdv,or tgt atks you @DisAdv,or wpn dmg+1d8 necro to tgt,4thSlot or higher,10min,9thSlot till Dispelled',dmgDice='1d8+0',getAction(t1)}
function BigbysHand(){a='5th(Bigby s Hand)Large hand atks, pushes 60ft or grapples or shields AC20, your max hp; bns move 60 to 120ft conce,10/10turns',b='0d0+0',c='restrained, ejected on save',dmgDice='0d0+0',getAction(t1)}
function BladeBarrier(){a='6th(Blade Barrier)100×20×5ft(l×w×h)wall or 30 radius 20x5ft(w×h)ring; 6d10 slash dmg; save halves; 3/4 cover Dex 90ft conce,10min P 218',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function BladeOfDisaster(){a='9th(Blade of Disaster)move blade 30ft through anything,bonus,conce,2 spell atks',b='1d20+0',c='force,nat18-20 12d12',dmgDice='4d12+0',getAction(t1)}
function BladeWard(){a='Cantrip(Blade Ward)self 10/10turns',b='0d0+0',c='resist bludg slash pierc till t e o y n turn',dmgDice='0d0+0',getAction(t1)}
function BlastWave(){a='(Blast Wave)DC8+'+characters[targeted].spellAbility+'+pro vsStr, 2h, 150/500ft, 15ft-cone, 1act',b='1d20+0',c='force+dex and pushed 10ft 3d6@13th, 4d6@17th',dmgDice='2d6+0',getAction(t1)}
function Bleeding(){a='(Bleeding)DC8+'+characters[targeted].spellAbility+'+pro vsCon, 1act,1tgt, 60ft, conce,10/10turns',b='0d0+0',c='when tgt takes dmg+1d8 uteo '+characters[x].name+'s nt',dmgDice='1d8+0',getAction(t1)}
function Bless(){a='1st(Bless)3tgts,30ft,conce',b='0d0+0',c='Blessed,atk or save+1d4,10/10turns',dmgDice='1d4+0',getAction(t1)}
function Blight(){a='4th(Blight)30ft 1tgt.DC8+'+characters[targeted].spellAbility+'+pro vsCon for half, plants save @DisAdv, constructs undead immune',b='0d0+0',c='necro+1d8/slot',dmgDice='8d8+0',getAction(t1)}
function BlindingSmite(){a='3rd(Blinding Smite)DC8+'+characters[targeted].spellAbility+'+pro vsCon',b='0d0+0',c='weapon+xtra dmg+blinded 10/10turns or save @the end of your turn',dmgDice='3d8+0',getAction(t1)}
function BlindnessDeafness(){a='2nd(Blindness Deafness)DC8+'+characters[targeted].spellAbility+'+pro vsCon 1tgt+1/slot 30ft',b='0d0+0',c='blinded or deafened 10/10turns or vsCon ateoet',dmgDice='0d0+0',getAction(t1)}
function Blink(){a='3rd(Blink)self 10/10turns roll d20 11+enter the Ethereal Plane ateoet and reappear 10ft @the start of each turn',b='1d20+0',c='',dmgDice='0d0+0',getAction(t1)}
function Blowgun(){a='Blowgun Martial Ranged 10 gp 1 lbs Ammunition, Loading, Range (25/100) SRD5',b='1d20+0',c='Piercing',dmgDice='1+0',getAction(t1)}
function Blur(){a='2nd(Blur)self',b='0d0+0',c='atkd @DisAdv conce,or 10/10turns.blindsight or truesight immune',dmgDice='0d0+0',getAction(t1)}
function Bola(){a='Bola Simple Ranged 5 gp 3 lbs Range (20/60), Special, Thrown Rlyehable',b='1d20+0',c='Bludgeoning',dmgDice='1d4+0',getAction(t1)}
function BonesOfEarth(){a='6th(Bones of the Earth)1act,Create up to 6 vertical 5 x 30ft pillars of stone (+2 pillars/lvl). Possibility of crushing creatures to the ceiling.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function BoomingBlade(){a='Cantrip(Booming Blade)1act,if tgt mvs dmg=lvl',b='1d20+0',c='thunder',dmgDice='1d8+0',getAction(t1)}
function BrandingSmite(){a='2nd(Branding Smite)bonus self conce,1min',b='0d0+0',c='weapon+xtra radia+1d6/slot and invisible becomes visible for conce,10/10turns',dmgDice='1d6+0',getAction(t1)}
function BrokenLongsword(){a='Broken Longsword Martial Melee 1gp 1 lbs Finesse, Light, Range (1/60), Versatile(1d8) JustaPC',b='1d20+0',c='Slashing  ',dmgDice='1d8+0',getAction(t1)}
function BurningHands(){a='1st(Burning Hands)DC8+'+characters[targeted].spellAbility+'+pro vsDex 1/2dmg,self 15ft-cone',b='0d0+0',c='fire+1d6/slot',dmgDice='3d6+0',getAction(t1)}
function CallLightning(){a='3rd(Call Lightning)60ft-radi 10ft tall cloud 100ft above 1tgt)DC8+'+characters[targeted].spellAbility+'+pro vsDex 1/2dmg,120ft conce,10min',b='0d0+0',c='lightning+1d10/slot',dmgDice='3d10+0',getAction(t1)}
function CalmEmotions(){a='2nd(Calm Emotions)20ft-radi all humanoids save or you suppress either charm/fear effects or hostility)DC8+'+characters[targeted].spellAbility+'+pro vsCha 60ft conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function CatONineTails(){a='Cat-o\'-Nine-Tails Simple Melee 1 sp 1 lbs Finesse, Light Rlyehable',b='1d20+0',c='Slashing',dmgDice='1d4+0',getAction(t1)}
function Catapult(){a='1st(Catapult)1act,The tgt must succeed onDC8+'+characters[targeted].spellAbility+'+pro vsDex or take 3d8 bludg dmg of an object up to 5 pounds (+5 pounds and +1d8/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Catnap(){a='3rd(Catnap)1act,3 willing creatures fall unconscious and gain the benefice of a short rest (+1 creature/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function CauseFear(){a='1st(Cause Fear Necromancy 1act 60ft V, S conce,to 1min)DC8+'+characters[targeted].spellAbility+'+pro vsWis tgt 25hp or less @@DisAdv constructs, undead immune',b='0d0+0',c='frightened',dmgDice='0d0+0',getAction(t1)}
function Ceremony(){a='1st(Ceremony)1hr, Ritual, Perform a religious ceremony (bless water, give bonus to AC, ability check, saving throw, etc).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Cestus(){a='Cestus Simple Melee 5 gp 1 lbs Light Ghostwheel',b='1d20+0',c='Bludgeoning',dmgDice='1d4+0',getAction(t1)}
function ChainLightning(){a='6th(Chain Lightning)Lightning bolt 1tgt and 3+1/slot lvl tgts within 30ft;DC8+'+characters[targeted].spellAbility+'+pro vsDex halves 150ft',b='0d0+0',c='lightning',dmgDice='10d8+0',getAction(t1)}
function ChaosBolt(){a='1st(Chaos Bolt)1act,If the atk hits, deals 2d8 + 1d6 dmg of a random type (damage/lvl). Rebound if double 8.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function CharmMonster(){a='1st(Charm Monster)1act,The tgt vsWis or be charmed by the caster (duration/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function CharmPerson(){a='1st(Charm Person)DC8+'+characters[targeted].spellAbility+'+pro vsWis@Adv if fighting 30ft 1tgt+1/slot 1hr',b='0d0+0',c='cha@Adv vs tgt doing reasonable commands',dmgDice='0d0+0',getAction(t1)}
function Chatkcha(){a='Chatkcha Martial Ranged — — lbs Light, Range (30/120), Thrown, Exotic Monster Manual(5e)',b='1d20+0',c='Slashing',dmgDice='1d6+0',getAction(t1)}
function ChillTouch(){a='Cantrip(Chill Touch)+'+characters[targeted].spellAbility+'+pro touch',b='1d20+0',c='necro+1d8@5, 11, 17th lvl',dmgDice='1d8+0',getAction(t1)}
function ChromaticOrb(){a='1st(Chromatic Orb)+'+characters[targeted].spellAbility+'+pro 90ft 4in diame',b='1d20+0',c='acid, cold, fire, lightning, poison, or thunder+1d8/slot',dmgDice='3d8+0',getAction(t1)}
function CircleOfDeath(){a='6th(Circle of Death)60ft-radi all 8d6+2d6/slot lvl Necrotic dmg;)DC8+'+characters[targeted].spellAbility+'+pro vsCon halves(500gp)150ft P 221',b='0d0+0',c='',dmgDice='8d6+0',getAction(t1)}
function CircleOfPower(){a='5th(Circle of Power)all in 30ft-radi v',b='0d0+0',c='save for 0hp when saving 1/2dmg,conce,10min',dmgDice='0d0+0',getAction(t1)}
function Clairvoyance(){a='3rd(Clairvoyance)1mi conce,10min',b='0d0+0',c='invisible sensor toggle see or hear in familiar location or behind a door, around a corner, in a grove of trees See Invisibility detects it',dmgDice='0d0+0',getAction(t1)}
function CloneIt(){a='8th Clone)Create a clone of a living tgts; after death its soul can move to the clone(1K gp cons.; 2K gp)1hr touch',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function CloudOfDaggers(){a='2nd(Cloud of Daggers)60ft conce,10/10turns',b='0d0+0',c='all take slash dmg+2d4/slot entering or starting turn in 5ft-cube area',dmgDice='4d4+0',getAction(t1)}
function Cloudkill(){a='5th(Cloudkill)20ft-radi 5d8+1d8/slot lvl Poison dmg;)DC8+'+characters[targeted].spellAbility+'+pro vsCon halves; move 10ft/rnd; heavily obscured, difficult terrain 120ft conce,10min P 222',b='0d0+0',c='',dmgDice='5d8+0',getAction(t1)}
function Club(){a='Club Simple Melee 1 sp 2 lbs Light SRD5',b='1d20+0',c='bludgeoning',dmgDice='1d4+0',getAction(t1)}
function ClubPoleArm(){a="(ClubPoleArm)+dex",b='1d20+1',c='bludgeoning+dex',dmgDice='1d6+0',getAction(t1)}
function ClubQuarterstaff(){a="(ClubQuarterstaff)+dex",b='1d20+0',c='bludgeoning+dex',dmgDice='1d8+0',getAction(t1)}
function ClubSap(){a="(ClubSap)+dex",b='1d20+2',c='bludgeoning+dex',dmgDice='1d4+0',getAction(t1)}
function ColorSpray(){a='1st(Color Spray)self 15ft-cone, 10/10turns',b='0d0+0',c='6d10 lowest curHP tgts are blinded',dmgDice='6d10+0',getAction(t1)}
function Command(){a='1st(Command)60ft 10/10turns 1tgt+1/slot DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='0d0+0',c='tgt obeys Approach, Drop, Flee, Grovel, or Halt',dmgDice='0d0+0',getAction(t1)}
function Commune(){a='5th(Commune Ask up to three yes/no questions to your deity or a divine proxy(25gp)Div 10/10turns Self 10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function CommuneWithNature(){a='5th(Commune with Nature)Know 3 facts about natural features within 3mi radius(300ft-radi underground)10/10turns self s',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function CompelledDuel(){a='1st(Compelled Duel)1tgt)DC8+'+characters[targeted].spellAbility+'+pro vsWis or atk@DisAdv tgts other than you save if you move more than 30ft away bonus 30ft conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ComprehendLanguages(){a='1st(Comprehend Languages)ritual self 1hr understand any spoken touch writing 10/10turns and understand',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Compulsion(){a='4th(Compulsion)bonus 1tgt)DC8+'+characters[targeted].spellAbility+'+pro vsWis or uses all movement in your chosen direction 30ft conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ConeOfCold(){a='5th(Cone of Cold)8d8+1d8/slot lvl Cold dmg;)DC8+'+characters[targeted].spellAbility+'+pro vsCon halves; tgts killed become frozen statues til thawed 60ft-cone P 224',b='0d0+0',c='',dmgDice='8d8+0',getAction(t1)}
function Confusion(){a='4th(Confusion)90ft conce,10/10turns 10ft-radi tgts)DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='0d0+0',c='d10 1 moves d8 direction no actions, 2-6 no movement no actions, 7-8 melee atk random in or no actions, 9-10 normal actions and movement',dmgDice='0d0+0',getAction(t1)}
function ConjCelestial(){a='7th(Conjure Celestial)CR 4+1/2SL celestial that obeys your verbal commands if they do not go against its alignment 10/10turns 90ft conce,1hr p225',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ConjureAnimals(){a='3rd(Conjure Animals)Summon 2+2/2SL CR of beasts that obey your verbal commands 60ft conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ConjureBarrage(){a='3rd(Conjure Barrage)Throw weapon or ammo; copies rain down)DC8+'+characters[targeted].spellAbility+'+pro vsDex halves conj 60ft-cone m',b='0d0+0',c='weapon type',dmgDice='3d6+0',getAction(t1)}
function ConjureCelestial(){a='@7th(ConjureCelestial)1min,90ft,unoccupied space,conce,1hr duration',b='0d0+0',c='Summon CR4> Celestial,obeys within its alignment,@9thSlot CR5',dmgDice='1d6+0',getAction(t1)}
function ConjureElemental(){a='5th(Conjure Elemental)CR5 elementals+1/slot that obey your verbal commands; on broken conc. elemental breaks free 10/10turns 90ft conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ConjureFey(){a='6th(Conjure Fey)CR6+1/slot Fey that obeys your verbal commands not against its align on broken conce,fey breaks free 10/10turns 90ft conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ConjureMinorElementals(){a='4th(Conjure Minor Elementals)10/10turns 90ft, conce,1hr',b='0d0+0',c='1 CR2 or 2 CR1 or 4 CR1/2 or 8 CR1/4 x2,@6thSlot x3,@8th Slot',dmgDice='0d0+0',getAction(t1)}
function ConjureVolley(){a='5th(Conjure Volley)ammo thrown weapon becomes a volley 40ft-radi 20ft-h)DC8+'+characters[targeted].spellAbility+'+pro vsDex 150ft m',b='0d0+0',c='weapon type',dmgDice='8d8+0',getAction(t1)}
function ConjureWoodlandBeings(){a='4th(Conjure Woodland Beings)Summon 2+2/slot CR of Fey that obey your verbal commands 60ft conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ContactOtherPlane(){a='5th(Contact Other Plane)You make DC 15 save Vs Int to ask xtraplanar entity 5 questions with one word answers; insane on fail Div 10/10turns Self 10/10turns P 226',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Contagion(){a='5th(Contagion Melee spell atk to infect tgts with chosen disease; saves each rnd on 3 successes spell ends, touch 7 days',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Contingency(){a='6th(Contingency)Prepare another SL less than 6th lvl spell you can cast to activate when some condition is met 1500gp 10min Self 10 days',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ContinualFlame(){a='2nd(Continual Flame)touch m',b='0d0+0',c='light no he@or need of oxygen is covered but not smothered or quenched til dispelled',dmgDice='0d0+0',getAction(t1)}
function ControlFlames(){a='Cantrip(Control Flames)1act,Control nonmagical fires to expand, extinguish, enlarge, shape simple forms, etc.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function ControlUndead(){a='(Control Undead)costs 1CD, 1 act, 30ft, 1 undead tgt <= your lvl, DC8+wis+pro vsWis',b='0d0+0',c='undead tgt obeys 24hrs',dmgDice='0d0+0',getAction(t1)}
function ControlWater(){a='4th(Control Water)300ft conce,10min 100ft-cube of water rise 20ft',b='0d0+0',c='huge or less swept boats 25 % capsize*or Part Water Create trench*or Redirect Flow*or Whirlpool 50ft sq x 25ft deep pulled down spell vs Athletics to escape or bludg entering or starting turn',dmgDice='2d8+0',getAction(t1)}
function ControlWeather(){a='8th(Control Weather)Change current weather; changes take 1d4×10min; change precipitation, temperature, wind, 10min 5-mile radius conce,8hrs',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ControlWinds(){a='5th(Control Winds)100ft-cube of air either gusts, downdraft, or updraft; affects flying/jump/ranged; change; 300ft conce,1hr E 16',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function CordonOfArrows(){a='2nd(Cordon of Arrows)4+2/slot arrows/bolts atk first tgts in 30ft one @a time)DC8+'+characters[targeted].spellAbility+'+pro vsDex 1/2dmg,5ft 8hrs',b='0d0+0',c='pierc',dmgDice='1d6+0',getAction(t1)}
function Counterspell(){a='3rd(Counterspell)DC8+'+characters[targeted].spellAbility+'+pro vs10+tgt spell lvl 1 react 60ft',b='0d0+0',c='3rd lvl spells+1 lvl/slot or lower fail',dmgDice='0d0+0',getAction(t1)}
function CreateBonfire(){a='Cantrip(Create Bonfire)1act,conce,tgts 5ft-cubeDC8+'+characters[targeted].spellAbility+'+pro vsDex or take 1d8 fire dmg',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function CreateFoodAndWater(){a='3rd(Create Food/Water)Create 45 pounds of food and 30 gallons of water; enough for 15 humanoids or 5 steeds for 24h 30ft',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function CreateHomunculus(){a='6th(Create Homunculus)1hr, Create one homunculus and the caster can transfer his hit points to it up to his next long rest.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function CreateOrDestroyWater(){a='1st(Create/Destroy Water)Create/destroy 10+2/slot lvl gal of water in open container; or Create rain/destroy fog in 30+5/slot lvlft-cube 30ft P 229',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function CreateUndead(){a='6th(Create Undead)Turn corpses into 3+1/slot lvl ghoul a.o., ; control 24h; bns a command 120ft(150gp/corpse cons.)10/10turns 10ft P 229',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Cripple(){a='(Cripple)DC8+'+characters[targeted].spellAbility+'+pro vsCon, 1act,60ft, 1tgt',b='0d0+0',c='tgt moves 10ft or half its speed whichever is less uteo'+characters[x].name+' s nt',dmgDice='0d0+0',getAction(t1)}
function CrownOfMadness(){a='2nd(Crown of Madness)DC8+'+characters[targeted].spellAbility+'+pro vsWis 1tgt 120ft conce,10/10turns',b='0d0+0',c='tgt melee atks your choice or acts normally vsWis ateoet',dmgDice='0d0+0',getAction(t1)}
function CrownOfStars(){a='7th(Crown of Stars)1act,If the spell atk hits, 7 motes deal 4d12 radiant dmg each (+1 mote/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function CrusadersMantle(){a='3rd(Crusader s Mantle)',b='0d0+0',c='10/10turns weapon+xtra dmg for you and allies within a 30ft radi',dmgDice='3d8+0',getAction(t1)}
function CureWounds(){a='1st(Cure Wounds)touch',b='0d0+0',c='heal 1d8+spellAbi+1d8/slot',dmgDice='1d8+0',getAction(t1)}
function Dagger(){a='Dagger Simple Melee 2 gp 1 lbs Finesse, Light, Range (20/60), Thrown SRD5',b='1d20+0',c='Piercing',dmgDice='1d4+0',getAction(t1)}
function DancingLights(){a='Cantrip(Dancing Lights)conce,1min',b='0d0+0',c='4 20ft linked 2.5x2.5ft or 1 5x5ft torch 10ft dim light radius bonus move lights 60ft within 120ft',dmgDice='0d0+0',getAction(t1)}
function DanseMacbre(){a='5th(Danse Macabre)1act,conce,Up to 5 Small or Medium corpses become zombie or skeleton under the caster control (+2 corpses/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Darkness(){a='2nd(Darkness)60ft conce,10min 15ft-radi area',b='0d0+0',c='darkvision is useless Light spells of 2nd(or less are dispelled',dmgDice='0d0+0',getAction(t1)}
function Darkvision(){a='2nd(Darkvision)touch 8hrs',b='0d0+0',c='you or ally darkvision 60ft',dmgDice='0d0+0',getAction(t1)}
function Dart(){a='Dart Simple Ranged 5 cp 1/4 lbs Finesse, Range (20/60), Thrown SRD5',b='1d20+0',c='Piercing',dmgDice='1d4+0',getAction(t1)}
function Dawn(){a='5th(Dawn)1act,conce,tgts 30ft-radi, 40ft-h cylinder vsCon or take 4d10 radiant dmg.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Daylight(){a='3rd(Daylight)60ft-radi bright light+60ft dim light on point or object; only magical darkness of higher SL works 60ft 1hr',b='0d0+0',c='invisible sensor toggle see or hear in familiar location or behind a door, around a corner, in a grove of trees See Invisibility detects it',dmgDice='0d0+0',getAction(t1)}
function DeathWard(){a='4th(Death Ward)touch 8hrs',b='0d0+0',c='negates first kill effect, 0hp becomes 1hp',dmgDice='0d0+0',getAction(t1)}
function Decompose(){a='1st(Decompose)1act,touch,1min,corpse turns into fungus, moss, oddly colored flowers,does not impede Resurrection',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DeflectMissile(){a='(Deflect Missile) dmg from ranged weapon is reduced',b='0d0+0',c='heal+dex, if dmg is reduced to 0, the missile is caught',dmgDice='1d10+0',getAction(t1)}
function DelayedBlastFireball(){a='7th(Delayed Blast Fireball)Create bead @chosen moment, or if conce,is broken 20ft-radi 150ft conce,10/10turns)DC8+'+characters[targeted].spellAbility+'+pro vsDex 1/2dmg,60ft-line conce,10/10turns P 279',b='0d0+0',c='fire+1d6/slot',dmgDice='12d6+0',getAction(t1)}
function Demilance(){a='Demilance Martial Melee 20gp 7 lbs Heavy, Versatile(2d6) Max7238',b='1d20+0',c='Piercing',dmgDice='1d12(2d6)+0',getAction(t1)}
function Demiplane(){a='8th(Demiplane)Create door to a demiplane of 30ft-cubebe; when spell ends, tgts inside remain trapped 60ft 1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DestructiveSmite(){a='5th(Destructive Smite)DC8+'+characters[targeted].spellAbility+'+pro vsvsCon 1/2dmg,30ft-radi v',b='0d0+0',c='5d6 thunder dmg+5d6 radiant or necrotic dmg+knocked prone',dmgDice='10d6+0',getAction(t1)}
function DetectEvilAndGood(){a='1st(Detect Evil/Good)Know if aberration, celestial, elemental, fey, fiend, undead, and des-/consecrated area within 30ft Div Self conce,10min P 231',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DetectMagic(){a='1st(Detect Magic)ritual self conce,10min',b='0d0+0',c='sense magic 30ft radi, see magic aura around object or being, know school',dmgDice='0d0+0',getAction(t1)}
function DetectPoisonAndDisease(){a='1st(Detect Poison and Disease)Know presence, location, and type of poisons, poisonous Creatures, and diseases within 30ft Self conce,10min P 231',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DetectThoughts(){a='2nd(Detect Thoughts)self conce,10/10turns 30ft 1tgt Int4 or more learn surface thoughts switch tgts)DC8+'+characters[targeted].spellAbility+'+pro vsWis learn reasoning, emotional state, worries, loves, hates',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DimensionDoor(){a='4th(Dimension Door)Teleport yourself and 1 ally,5-500ft,to a place you can see, specify, or describe',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DireFamiliar(){a='(Dire Familiar)1act',b='0d0+0',c='familiar temp hp+your witch lvl HP+'+characters[x]. lvl+', atks and dmg+your chaMod '+characters[x].chaMod+'',dmgDice='0d0+0',getAction(t1)}
function DireFlail(){a='Dire Flail Melee 800gp 45 lbs Heavy, Range (10) Oborosen',b='1d20+0',c='P,S',dmgDice='3d4+0',getAction(t1)}
function Disarmed(){a='(Disarmed)1 item, DC8+dex+pro vsStr',b='1d0+0',c='drops 1 item',dmgDice='0d0+0',getAction(t1)}
function Discord(){a='(Discord)1act,1tgt, 60ft, DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='0d0+0',c='tgt must atk an adjac being before moving tteo '+characters[x].name+' s nt',dmgDice='0d0+0',getAction(t1)}
function DisguiseSelf(){a='1st(Disguise Self)DC8+'+characters[targeted].spellAbility+'+pro vsInves self',b='0d0+0',c='1hr appearance changes but not body type',dmgDice='0d0+0',getAction(t1)}
function Disintegrate(){a='6th(Disintegrate)1tgt save or 10d6+3d6/slot lvl 40 Force dmg; or up to 10ft-cube nonmagical object is destroyed)DC8+'+characters[targeted].spellAbility+'+pro vsDex 60ft P 233',b='0d0+0',c='',dmgDice='10d6+0',getAction(t1)}
function Disorient(){a='(Disorient)1act,1tgt, 60ft, DC8+'+characters[targeted].spellAbility+'+pro vsCon',b='1d6+0',c='atk roll-1d6 before tteo '+characters[x].name+' s nt',dmgDice='0d0+0',getAction(t1)}
function DispelEvilAndGood(){a='5th(DispelEvilAndGood) Celestials, elementals, fey, fiends, undead dis. on atks vs. you; break charm/fright/possession; banish Self conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DispelMagic(){a='3rd(Dispel Magic)120ft 3rd lvl spells+1 lvl/slot or lower are dispeled on object or being)DC8+'+characters[targeted].spellAbility+'+pro vsDC10+spell lvl dispels',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DissonantWhispers(){a='1st(Dissonant Whispers)1tgt, DC8+'+characters[targeted].spellAbility+'+pro vsWis halves and no fleeing deaf immune 60ft',b='0d0+0',c='psych+1d6/slot and flee',dmgDice='3d6+0',getAction(t1)}
function Divination(){a='4th(Divination)Get answer to one question about a goal, event, or activity to occur within the next 7 days Self',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DivineFavor(){a='1st(Divine Favor)bonus self conce,10/10turns',b='0d0+0',c='xtra weapon radius dmg',dmgDice='1d4+0',getAction(t1)}
function DivineSmite(){a='Divine Smite xtra dmg',b='0d0+0',c='radiant dmg+1d8 if undead target',dmgDice='2d8+0',getAction(t1)}
function DivineWord(){a='7th(Divine Word)Any tgts save or deaf/blind/stunned/dead depending on curHP; banishes xtraplanar tgts Cha 30ft',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DominateBeast(){a='4th(Dominate Beast)1 beast save or charmed, follows telepathic commands, for complete control+SL)DC8+'+characters[targeted].spellAbility+'+pro vsWis 60ft conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DominateMonster(){a='8th(Dominate Monster)1tgt save or charmed, follows telepathic commands, for complete control; SL9:conc, 8h)DC8+'+characters[targeted].spellAbility+'+pro vsWis 60ft conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DominatePerson(){a='5th(Dominate Person)1 humanoid DC8+'+characters[targeted].spellAbility+'+pro vsCon or charmed, follows telepathic commands, for complete control;+SL for dur 60ft conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DoubleBladedScimitar(){a='Double-Bladed Scimitar Martial Melee 100gp 6 lbs Special, Two-Handed, Exotic Eberron Rising from the Last War',b='1d20+0',  c='slashing',dmgDice='2d4+0',getAction(t1)}
function DragonsBreath(){a='2nd(Dragon s Breath)conce,Spew a 15ft-cone that deals 3d6 acid, cold, fire, lightning, or poison dmg in case of failed vsDex',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function DrawmijsInstantSummons(){a='6th(Drawmij s Instant Summons)Link object to a sapphire 1000gp crush gem to summon the unattended object or learn of wielder 10/10turns touch Till dispelled',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DreadfulAspect(){a='(Dreadful Aspect)costs 1CD, 1 act, 30ft chosen tgts DC8+wis+pro vsWis',b='0d0+0',c='frightened of paladin for 1min, wisSave if ends turn 30ft+of paladin',dmgDice='0d0+0',getAction(t1)}
function Dream(){a='5th(Dream You or ally enters a tgt s dreams, manifesting as a messenger with whom it can communicate 10/10turns Special 8hrs',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DreamOfTheBlueVeil(){a='7th(Dream of the Blue Veil)10min,you+8tgs,teleported somewhere material plane',b='0d0+0',c='unconscious,teleported',dmgDice='0d0+0',getAction(t1)}
function DruidCraft(){a='Cantrip(DruidCraft)predict weather, expedite small plant growth, snuff light, harmless sensory effect 3ft s',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function DruidGrove(){a='6th(Druid Grove)10min, Protect a 30 x 30 x 30ft area with fog, vines, animated trees, or other effects.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Duplicity(){a='(Duplicity)1act,self, create shadowstuff self, atker rolls a die and odd number result atks your duplicate uteo '+characters[x].name+' s nt',b='0d0+0',c='psych+1d6/slot and flee',dmgDice='3d6+0',getAction(t1)}
function DustDevil(){a='2nd(Dust Devil)1act,conce,tgts within 5ft vsStr or take 1d8 bludg dmg',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function EarthTremor(){a='1st(Earth Tremor)1, 1act,tgts 10ft-radiDC8+'+characters[targeted].spellAbility+'+pro vsDex or take 1d6 bludg dmg and be knocked prone',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Earthbind(){a='2nd(Earthbind)1act,conce,tgt within 300ft vsStr or its flying speed is reduced to 0 (descends at 60ft/round).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Earthquake(){a='8th(Earthquake)Cause an earthquake in a 100ft rad, damaging structures and tgtsting dangerous fissures, 500ft conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function EldritchBlast(){a='Cantrip(Eldritch Blast)+'+characters[targeted].spellAbility+'+pro 120ft s',b='1d20+0',c='1 force beam+1 beam @5, 11, 17th lvl',dmgDice='1d10+0',getAction(t1)}
function ElementalBane(){a='4th(Elemental Bane)1+1/slot lvl tgts in 30ft)DC8+'+characters[targeted].spellAbility+'+pro vsCon or first atk each rnd of chosen energy does+2d6 dmg; no resistance 90ft conce,10/10turns E 17',b='0d0+0',c='',dmgDice='2d6+0',getAction(t1)}
function ElementalBane(){a='4th(Elemental Bane)1act,conce,The tgt vsCon or suffer an xtra 2d6 dmg of a specific type (+1 target/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function ElementalWeapon(){a='3rd(Elemental weapon)touch 1hr',b='0d0+0',c='your weapon is+1+2/slot2+3/slot3 magical and xtra+1d4+2d4/slot2+3d4/slot3 acid cold fire lightning or thunder dmg',dmgDice='1d4+0',getAction(t1)}
function EncodeThoughts(){a='Cantrip(Encode Thoughts)1act,self,8hrs,create a ribbon-line thought strand 5ft,allows allies to see your DetectThoughts, ModifyMemory',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function EnemiesAbound(){a='3rd(Enemies Abound)1act,conce,The tgt must succeed on anDC8+'+characters[targeted].spellAbility+'+pro vsInt or not be able to distinguish friend from foe ; all are ennemis for it.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Enervation(){a='5th(Enervation)1act,conce,The tgtDC8+'+characters[targeted].spellAbility+'+pro vsDex or take 4d8 necrotic dmg each turn (+1d8/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function EnhanceAbility(){a='2nd(Enhance Ability)1+1/slot lvl tgts adv. on checks with 1 stat; choosing Str, Dex, Con gives secondary benefits touch conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function EnlargeReduce(){a='2nd(EnlargeReduce)30ft conce,10/10turns unwilling target)DC8+'+characters[targeted].spellAbility+'+pro vsCon*Enlarge size x 2 weight x 8 str@Adv+1d4 weapon dmg*or Reduce size/2 weight/8 str @DisAdv -1d4 weapon dmg',b='0d0+0',c='',dmgDice='1d4+0',getAction(t1)}
function EnsnaringStrike(){a='3rd(Ensnaring Strike)DC8+'+characters[targeted].spellAbility+'+pro vsStr',b='0d0+0',c='10/10turns slash+1d6/slot+restrained',dmgDice='1d6+0',getAction(t1)}
function Entangle(){a='1st(Entangle)difficult terrain and 20ft sq area)DC8+'+characters[targeted].spellAbility+'+pro vsDex or restrained save ateo/tgt turn 90ft conce,1min',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Enthrall(){a='2nd(Enthrall)DC8+'+characters[targeted].spellAbility+'+pro vsWis 60ft 10/10turns',b='0d0+0',c='Perception @DisAdv for any other than you',dmgDice='0d0+0',getAction(t1)}
function EruptingEarth(){a='3rd(Erupting Earth)1act,tgts 20ft-cube (difficult terrain)DC8+'+characters[targeted].spellAbility+'+pro vsDex or take 3d12 bludg dmg',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Etherealness(){a='7th(Etherealness)1/slot lvl ally go to Ethereal Plane; move there, but able to perceive 60ft into the normal plane Self 8hrs',b='0d0+0',c='',dmgDice='12d6+0',getAction(t1)}
function EvardsBlackTentacles(){a='4th(Evard s Black Tentacles)All that enter 20ft radi)DC8+'+characters[targeted].spellAbility+'+pro vsDex or restrained and 3d6 bludg dmg/rnd; Str/Dex check to escape 90ft conce,10/10turns',b='0d0+0',c='',dmgDice='3d6+0',getAction(t1)}
function ExpeditiousRetreat(){a='1st(Expeditious Retreat)bonus self conce,10min',b='0d0+0',c='Dash as bonus',dmgDice='0d0+0',getAction(t1)}
function ExplosiveRound(){a='(Explosive Round)DC8+'+characters[targeted].spellAbility+'+pro vsDex, 2h, 1act,150/500ft 30ft rad',b='0d0+0',c='fire+dex',dmgDice='4d8+0',getAction(t1)}
function Eyebite(){a='6th(Eyebite)1tgt/rnd within 60ft)DC8+'+characters[targeted].spellAbility+'+pro vsWis or either fall asleep, panicked, or sickened, your choice Self conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Fabricate(){a='4th(Fabricate)Create simple object from raw materials; or complex object if proficient in the appropriate artisan s tools 10min 120ft',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function FaerieFire(){a='1st(Faerie Fire)60ft 20ft-cube DC8+'+characters[targeted].spellAbility+'+pro vsDex conce,10/10turns',b='0d0+0',c='outlined in 10ft dim light and atkd@Adv, even invisible',dmgDice='0d0+0',getAction(t1)}
function FalseLife(){a='1st(False Life)self 1hr',b='0d0+0',c='+5 temp hp/slot',dmgDice='1d4+4',getAction(t1)}
function FarStep(){a='5th(Far Step)bonus,conce,Teleport the caster up to 60ft on each round with a bonus ion.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Fear(){a='3rd(Fear)self,30ft-cone,conce,10/10turns)DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='0d0+0',c='drop items, frightened, Dash till out of your sight vsWis each turn',dmgDice='0d0+0',getAction(t1)}
function FeatherFall(){a='1st(Feather Fall)1 react 60ft 10/10turns',b='0d0+0',c='you and 4 allies slow to 60ft/rnd for 10rnds',dmgDice='0d0+0',getAction(t1)}
function Feeblemind(){a='8th(Feeblemind)1tgt 4d6 psych dmg and)DC8+'+characters[targeted].spellAbility+'+pro vsInt or Int and Cha become 1; xtra save every 30 days to end spell 150ft',b='0d0+0',c='',dmgDice='4d6+0',getAction(t1)}
function FeignDeath(){a='3rd(Feign Death)ritual touch 1hr',b='0d0+0',c='ally appears dead, blinded, incapacitated, speed 0, resists all but psychic, suspends disease poison',dmgDice='0d0+0',getAction(t1)}
function FindFamiliar(){a='1st(Find Familiar)1hr ritual 10ft',b='0d0+0',c='celestial, fey or fiend stats appears as bat, cat, or crab, etc 100ft telepathic link and share senses summon dismiss 1act',dmgDice='0d0+0',getAction(t1)}
function FindGreaterSteed(){a='4th(Find Greater Steed)10min, Summon a spirit that assumes the form a steed (griffon, pegasus, etc) telepathically linked to the caster.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function FindSteed(){a='2nd(Find Steed)summon a steed telepathy share spells 10min 30ft s',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function FindThePath(){a='6th(Find the Path Know the shortest route to a location you are familiar with and are on the same plane with(100gp)Div 10/10turns Self conce,1 day',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function FindTraps(){a='2nd(Find Traps)Sense presence of any trap within line of sight; not exact location, but general nature of trap Div 120ft',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function FingerOfDeath(){a='7th(Finger of Death)1tgt 7d8+30 Necrotic dmg;)DC8+'+characters[targeted].spellAbility+'+pro vsCon halves; tgts killed becomes zombie under your command 60ft',b='0d0+0',c='',dmgDice='12d6+0',getAction(t1)}
function FingerOfDeath(){a='7th(Finger of Death)1tgt,DC8+'+characters[targeted].spellAbility+'+pro vsCon halves; tgts killed become zombies under your command 60ft',b='0d0+0',c='necrotic',dmgDice='7d8+0',getAction(t1)}
function FireBolt(){a='Cantrip(Fire Bolt)+'+characters[targeted].spellAbility+'+pro 120ft',b='1d20+0',c='fire+1d10@5, 11, 17th lvl',dmgDice='1d10+0',getAction(t1)}
function FireShield(){a='4th(Fire Shield)+'+characters[targeted].spellAbility+'+pro dmg to melee atkers Self 10min',b='0d0+0',c='resist fire or cold',dmgDice='2d8+0',getAction(t1)}
function FireStorm(){a='7th(Fire Storm)DC8cha+proDC8+'+characters[targeted].spellAbility+'+pro vsDex 10 connected 10ft-cubebes 150ft s',b='0d0+0',c='save 1/2dmg,fire, flammables ignite',dmgDice='7d10+0',getAction(t1)}
function Fireball(){a='3rd(Fireball)DC8+'+characters[targeted].spellAbility+'+pro vsDex 1/2dmg,150ft 20ft radi',b='0d0+0',c='ignites flammables, fire+1d6/slot',dmgDice='8d6+0',getAction(t1)}
function Flail(){a='Flail Martial Melee 10 gp 2 lbs SRD5',b='1d20+0',c='Bludgeoning',dmgDice='1d8+0',getAction(t1)}
function FlameArrows(){a='3rd(Flame Arrows)1act,conce,12 arrows/bolts deal an xtra 1d6 fire dmg (+2 ammunition/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function FlameBlade(){a='2nd(Flame Blade)Summon a fiery blade 10ft light 1 bonus self conce,10min melee atk+'+characters[targeted].spellAbility+'+pro',b='0d0+0',c='fire+1d6/slot',dmgDice='3d6+0',getAction(t1)}
function FlameStrike(){a='5th(Flame Strike)DC8+'+characters[targeted].spellAbility+'+pro vsvsDex 1/2dmg,dmg 10ft-radi 40ft-h 60ft',b='0d0+0',c='fire and radiant+1d6/slot',dmgDice='8d6+0',getAction(t1)}
function FlamingSphere(){a='2nd(Flaming Sphere)60ft conce,10/10turns)DC8+'+characters[targeted].spellAbility+'+pro vsDex 1/2dmg,fire when turn ends in 5ft diame area bonus move sphere 30ft 5ft-h 10ft-w 20ft-radi light+20ft dim ignites flammables',b='0d0+0',c='fire+1d6/slot',dmgDice='2d6+0',getAction(t1)}
function FleshToStone(){a='6th(Flesh to Stone)1tgt)DC8+'+characters[targeted].spellAbility+'+pro vsCon or restrained; save @end of turn, 3 consecutive fail:petrified, 3 consecutive succes:free 60ft conce,10/10turns P 243',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function FloatingDisk(){a='1st(FloatingDisk)30ft,unoccupied space,1hr,3ft-diam 1in-thick,float 3ft-h,flows you,carries 500lbs',b='1d20+0',c='slash+str',dmgDice='2d4+0',getAction(t1)}
function Fly(){a='3rd(Fly)touch,self or ally+1/slot conce,10min',b='0d0+0',c='fly speed 60ft',dmgDice='0d0+0',getAction(t1)}
function FogCloud(){a='1st(Fog Cloud)120ft conce,1hr',b='0d0+0',c='20ft rad+20ft/slot cloud obscures area',dmgDice='0d0+0',getAction(t1)}
function Forbiddance(){a='6th(Forbiddance 40K sqft 30ft-h no xtraplanar travel; 1tgt type 5d10 radi/Necrotic dmg/rnd(1000gp)10min touch 1 day',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Forcecage(){a='7th(Forcecage)20ft-cube cage, or 10ft-cube solid; blocks all spells; xtraplanar travel in/out on save(1500gp)Cha,100ft,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Foresight(){a='9th(Foresight)1 ally can t be surprised; adv. on atks, ability checks, and saves; dis. on atks vs. tgt Div 10/10turns touch 8hrs',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Fortune(){a='(Fortune)1act,1tgt, 60ft',b='0d0+0',c='ability checks and saving throws@Adv uteo '+characters[x].name+' s nt',dmgDice='0d0+0',getAction(t1)}
function FreedomOfMovement(){a='4th(Freedom of Movement 1 willing tgts; magic cannot reduce speed, paralyze, restrain; use 5ft to escape nonmagica/long restrains touch 1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Friends(){a='Cantrip(Friends)DC8+'+characters[targeted].spellAbility+'+pro vsWis self s, m conce,10/10turns',b='0d0+0',c='cha@Adv vs tgt doing reasonable commands',dmgDice='0d0+0',getAction(t1)}
function FrostFingers(){a='1st(FrostFingers)1act,15ft-cone,insta,DC8+'+characters[targeted].spellAbility+'+pro vsCon for 1/2dmg',b='0d0+0',c='cold,freezes uncarried liquids in 15ft-cone,+1d8/higherSlot',dmgDice='2d8+0',getAction(t1)}
function Frostbite(){a='Cantrip(Frostbite)1act,The tgt vsCon or take 1d6 cold dmg and have disadvantage on next atk roll',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function GaseousForm(){a='3rd(Gaseous Form)touch conce,1hr self or ally and gear',b='0d0+0',c='fly speed 10ft resists nonmagic',dmgDice='0d0+0',getAction(t1)}
function Gate(){a='9th(Gate)Create a portal to a precise location on a different plane; can transport named tgts to you(5000gp)60ft conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Geas(){a='5th(Geas)1tgt)DC8+'+characters[targeted].spellAbility+'+pro vsWis or charmed; it must obeys commands or 5d10 psych dmg; SL7:1 year, SL9:til disp. 10/10turns 60ft 30 days',b='0d0+0',c='',dmgDice='5d10+0',getAction(t1)}
function GentleRepose(){a='2nd(Gentle Repose)touch 10 days',b='0d0+0',c='corpse can not decay or become undead extends Raise Dead time limit',dmgDice='0d0+0',getAction(t1)}
function GiantInsect(){a='4th(Giant Insect)10 centipedes or 3 spiders or 5 wasps, or 1 scorpion into giant versions that obey your verbal commands 30ft conce,10min',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Glaive(){a='Glaive Martial Melee 20 gp 6 lbs Heavy, Reach, Two-Handed SRD5',b='1d20+0',c='Slashing',dmgDice='1d10+0',getAction(t1)}
function Glibness(){a='8th(Glibness)You can choose to roll a 15 on any Charisma check magic cannot detect if you are lying self 1hr',dmgDice='0d0+0',getAction(t1)}
function GlobeOfInvulnerability(){a='6th(Globe of Invulnerability)SL less than(6+1/slot lvl)cast outside area cannot effect inside area; casting with a higher spell slot does not help 10ft-radi conce,10/10turns P 245',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function GlyphOfWarding(){a='3rd(Glyph of Warding)1hr touch til dispelled or triggered on 10ft diame of stationary object',b='0d0+0',c='*Explosive Runes 20ft-radi 5d8+1d8/slot acid, cold, fire, lightning or thunder*Spell Glyph triggers a 3rd lvl+1/slot or lower spell you know',dmgDice='5d8+0',getAction(t1)}
function GoUnseen(){a='(Go Unseen)1act,you and your familiar become invisible',b='0d0+0',c='invisible utteo your nt or you or your familiar atk',dmgDice='0d0+0',getAction(t1)}
function Goodberry(){a='1st(Goodberry)Create 10 berries to e@1 berry for 1 hp and nourishment for 1 day; berries lose potency after 24h touch m',b='0d0+0',c='heal',dmgDice='0d0+1',getAction(t1)}
function GraspingVine(){a='4th(Grasping Vine)Conjure vine with 30ft bonus direct)DC8+'+characters[targeted].spellAbility+'+pro vsDex or 1tgt pulled 20ft to vine conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Grease(){a='1st(Grease)DC8+'+characters[targeted].spellAbility+'+pro vsDex 60ft 10/10turns',b='0d0+0',c='Prone all tgts who enter or finish a turn in the area vsDex',dmgDice='0d0+0',getAction(t1)}
function Greataxe(){a='Greataxe Martial Melee 30 gp 7 lbs Heavy, Two-Handed SRD5',b='1d20+0',c='Slashing',dmgDice='1d12+0',getAction(t1)}
function Greatclub(){a='Greatclub Simple Melee 2 sp 10 lbs Two-Handed SRD5',b='1d20+0',c='Bludgeoning',dmgDice='1d8+0',getAction(t1)}
function GreaterInvisibility(){a='4th(Greater Invisibility)touch 1tgt conce,10/10turns',b='0d0+0',c='tgt and its items are invisible and atks@Adv, atkd @DisAdv',dmgDice='0d0+0',getAction(t1)}
function GreaterRestoration(){a='5th(Greater Restoration Reduce exhaustion or end charm, petrify, curse, st@or max hp reduction(100gp cons.)touch',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Greatstaff(){a='Greatstaff Martial Melee 15 8 lbs Heavy, Versatile(1d8) Ghostwheel',b='1d20+0',c='Bludgeoning',dmgDice='1d6+0',getAction(t1)}
function Greatsword(){a='Greatsword Martial Melee 50 gp 6 lbs Heavy, Two-Handed SRD5',b='1d20+0',c='Slashing',dmgDice='2d6+0',getAction(t1)}
function GreenFlameBlade(){a='Cantrip(GreenFlame Blade)1act, equal to abiMod to another adjac tgt (damage/lvl) within 5ft.',b='1d20+0',c='fire,spellAbi dmg another tgt,@5th +1d8,@11th +2d8,@17th +3d8 to both tgts',dmgDice='1d8+0',getAction(t1)}
function GuardianOfFaith(){a='4th(Guardian of Faith)DC8+'+characters[targeted].spellAbility+'+pro vsDex 30ft 8hrs',b='0d0+0',c='stationary spectre deals radius dmg up to 60 then disappears',dmgDice='0d0+20',getAction(t1)}
function GuardianOfNature(){a='4th(Guardian of Nature)bonus,conce,Transform the caster into a Primal Beast (+10ft, darkvision, ...) or a Great Tree (+10 hp,@Adv to some rolls, ...).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function GuardsAndWards(){a='6th(Guards and Wards)Protect an area with an assortment of effects including fog, web, illusions and locks(10gp)10min touch 24hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Guidance(){a='Cantrip(Guidance)touch conce,10/10turns',b='0d0+0',c='1tgt abi checks+1d4',dmgDice='1d4+0',getAction(t1)}
function GuidingBolt(){a='1st(Guiding Bolt)+'+characters[targeted].spellAbility+'+pro 120ft 10/10turns',b='1d20+0',c='radiant+1d6/slot and tgt atkd@Adv next turn',dmgDice='4d6+0',getAction(t1)}
function Gust(){a='Cantrip(Gust)1act,Control air to move objects or creatures (Medium or smaller) or create harmless sensory effects.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function GustOfWind(){a='2nd(Gust of Wind)DC8+'+characters[targeted].spellAbility+'+pro vsStr conce,10/10turns 60ft-line 10ft wide',b='0d0+0',c='pushed 15ft move 2ft speed halved moving toward you extinguishes flames bonus change line direction',dmgDice='0d0+0',getAction(t1)}
function Gythka(){a='Gythka Martial Melee — — lbs Two-Handed Monster Manual(5e)',b='1d20+0',c='Slashing',dmgDice='1d8+0',getAction(t1)}
function HailOfThorns(){a='1st(Hail of Thorns)DC8+'+characters[targeted].spellAbility+'+pro vsDex 1/2dmg,next ranged weapon atk, all within 5ft of tgt bonus self conce,10/10turns',b='0d0+0',c='pierc+1d10/slot',dmgDice='1d10+0',getAction(t1)}
function Halberd(){a='Halberd Martial Melee 20 gp 6 lbs Heavy, Reach, Two-Handed SRD5',b='1d20+0',c='Slashing',dmgDice='1d10+0',getAction(t1)}
function Hallow(){a='5th(Hallow)30ft-radi protected against celestials, elementals, fey, fiend, and undead; add additional effects; 24hrs touch Till dispelled',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function HallucinatoryTerrain(){a='4th(Hallucinatory Terrain)150ft-cube of terrain resembles some other sort of terrain;)DC8+'+characters[targeted].spellAbility+'+pro vsInves 10min 300ft 24hrs',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Hammer(){a="(Hammer)+str",b='1d20+0',c='bludgeoning+str',dmgDice='1d12+0',getAction(t1)}
function HandCrossbow(){a='Hand Crossbow Martial Ranged 75 gp 3 lbs Ammunition, Light, Loading, Range (30/120) SRD5',b='1d20+0',c='Piercing',dmgDice='1d6+0',getAction(t1)}
function HandOfRadiance(){a='Cantrip(Hand of Radiance)1act,all tgts 5ft,instant,DC8+'+characters[targeted].spellAbility+'+pro vsCon',b='0d0+0',c='radiant,@5th 2d6,@11th 3d6,@17th 4d6',dmgDice='1d6+0',getAction(t1)}
function Handaxe(){a='Handaxe Simple Melee 5 gp 2 lbs Light, Range (20/60), Thrown SRD5',b='1d20+0',c='Slashing',dmgDice='1d6+0',getAction(t1)}
function Handwraps(){a='Handwraps Simple Melee 1 sp 0.5 lbs Light Zhenra-Khal',b='1d20+0',c='Bludgeoning',dmgDice='0+0',getAction(t1)}
function Harm(){a='6th(Harm)1tgt,60ft,reduce max hp by same dmg; not<1 hp; save halves and no max hp reduction,DC8+'+characters[targeted].spellAbility+'+pro vsCon halves dmg',b='0d0+0',c='necrotic',dmgDice='14d6+0',getAction(t1)}
function Harpoon(){a='Harpoon Simple Ranged 10 gp 6 lbs Range (15/45), Special, Thrown Rlyehable',b='1d20+0',c='Piercing',dmgDice='1d6+0',getAction(t1)}
function Haste(){a='3rd(Haste)30ft conce,10/10turns',b='0d0+0',c='you or ally speed x 2 AC+2 dex@Adv+1 Dash, Disengage, Hide or Use Object action spell ends no actions or movement till after its next turn',dmgDice='0d0+0',getAction(t1)}
function Heal(){a='6th(Heal)60ft 1tgt',b='0d0+0',c='heal 70+10/slot lvl hp and is cured of blindness, deafness, and all diseases',dmgDice='0d0+70',getAction(t1)}
function HealingSpirit(){a='2nd(Healing Spirit)bonus,conce,tgts in touch with the spirit gain 1d6 hp (+1d6 hp/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function HealingWord(){a='1st(Healing Word)heal, 1tgt, 1d4+1d4/slot lvl+spellAbi, 60ft',b='0d0+0',c='heal+'+characters[targeted].spellAbility+'',dmgDice='1d4+0',getAction(t1)}
function HeatMetal(){a='2nd(HeatMetal)1 metal obj)DC8+'+characters[targeted].spellAbility+'+pro vsCon 60ft conce,10/10turns',b='0d0+0',c='fire+1d8/slot and drop obj or atk@DisAdv',dmgDice='2d8+0',getAction(t1)}
function HeavyCrossbow(){a='Heavy Crossbow Martial Ranged 50 gp 18 lbs Ammunition, Heavy, Loading, Range (100/400), Two-Handed SRD5',b='1d20+0',c='Piercing ',dmgDice='1d10+0',getAction(t1)}
function HellishRebuke(){a='1st(Hellish Rebuke)react when hit, DC8+'+characters[targeted].spellAbility+'+pro vsDex 1/2dmg,60ft',b='0d0+0',c='fire+1d10/slot',dmgDice='2d10+0',getAction(t1)}
function HeroesFeast(){a='6th(Heroes Feast)you+12 tgts; to consume; for 24h:disease/poison immune, +2d10 max hp, (1000gp cons)10min,30ft',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Heroism(){a='1st(Heroism)1tgt+1/slot touch conce,1min',b='0d0+0',c='immune fear gains your spell abi mod temp hp each turn conce,1min 10/10',dmgDice='0d0+0',getAction(t1)}
function Hesitate(){a='(Hesitate)1act,1tgt, 60ft, DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='0d0+0',c='tgt can move or atk but not both during its turn uteo '+characters[x].name+' s nt',dmgDice='2d10+0',getAction(t1)}
function Hex(){a='1st(Hex)tgt 1abi @DisAdv slot3 conce,8hrs slot5 conce,24hrs bonus 90ft conce,1hr',b='0d0+0',c='xtra dmg necro',dmgDice='1d6+0',getAction(t1)}
function HiddenBlade(){a='Hidden Blade Exotic Melee 20 gp 2 lbs Finesse, Light, Exotic Ghostwheel',b='1d20+0',c='Piercing',dmgDice='1d4+0',getAction(t1)}
function HoldMonster(){a='5th(Hold Monster)1+1/slot lvl tgts within 30ft of each other)DC8+'+characters[targeted].spellAbility+'+pro vsWis 90ft conce,10/10turns',b='0d0+0',c='paralyzed;saves @the end of each of its turns',dmgDice='5d10+0',getAction(t1)}
function HoldPerson(){a='2nd(Hold Person)60ft conce,10/10turns 1tgt+1/slot DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='0d0+0',c='paralyzed reroll vsWis ateoet',dmgDice='0d0+0',getAction(t1)}
function HolyAura(){a='8th(Holy Aura)Any in area adv. on saves; dis. atks vs. tgts; fiend/undead atk a tgt save or blinded(1000gp)Con 30ft conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function HolyWeapon(){a='5th(Holy Weapon)bonus,conce,The touched weapon shines, deals an xtra 2d8 radiant damage, and can burst on a 30ft-radi (Save or 4d8 radiant).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function HookedShortspear(){a='Hooked Shortspear Martial Melee — 2 lbs Light, Special, Exotic Out of the Abyss',b='1d20+0',c='Piercing',dmgDice='1d4+0',getAction(t1)}
function HungerOfHadar(){a='3rd(Hunger of Hadar)20ft-radi blinds all while in)DC8+'+characters[targeted].spellAbility+'+pro vsDex 150ft conce,1min',b='0d0+0',c='start turn auto cold dmg end turn save or acid',dmgDice='2d6+0',getAction(t1)}
function HuntersMark(){a='1st(Hunter s Mark)Perception/Survival@Adv vs tgt slot3 8hrs slot5 24hrs bonus 90ft conce,1hr',b='0d0+0',c='weapon+xtra 1d6 transfer mark after tgt dies',dmgDice='1d6+0',getAction(t1)}
function HypnoticPattern(){a='3rd(Hypnotic Pattern)120ft s, m conce,10/10turns 30ft-cube tgts who see)DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='0d0+0',c='charmed speed 0 til slapped or dmg',dmgDice='0d0+0',getAction(t1)}
function IceKnife(){a='1st(Ice Knife)1act,If the spell atk hits, deals 1d10 pierc dmg +DC8+'+characters[targeted].spellAbility+'+pro vsDex or 2d6 cold dmg (damage/lvl) within 5ft.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function IceStorm(){a='4th(Ice Storm)20ft-radi 40ft-h 1 rnd difficult terrain)DC8+'+characters[targeted].spellAbility+'+pro vsDex 1/2dmg,300ft',b='2d8+0',c='bludg and cold+1d8bludge/slot',dmgDice='4d6+0',getAction(t1)}
function Identify(){a='1st(Identify)DC8+'+characters[targeted].spellAbility+'+pro vsDex 10/10turns ritual touch',b='0d0+0',c='learn magic item or affected being s properties, attunement, charges, conditions',dmgDice='0d0+0',getAction(t1)}
function IllusoryDragon(){a='8th(Illusory Dragon)illusion, 1act,conce,tgts that see this illusory Huge dragon must succedd on a vsWis or be frightened for 1 min.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function IllusoryScript(){a='1st(Illusory Script)10/10turns ritual touch s, m 10 days',b='0d0+0',c='illusion hides script from all except who you will to read Truesight can read',dmgDice='0d0+0',getAction(t1)}
function Immolation(){a='5th(Immolation)1act,conce,The tgt within 90ftDC8+'+characters[targeted].spellAbility+'+pro vsDex or take 8d6 fire dmg and 4d6 fire dmg thereafter.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Imprisonment(){a='9th(Imprisonment)1tgt save or trapped in chosen way with no means of escape;(500gp/HD cons.)DC8+'+characters[targeted].spellAbility+'+pro vsWis 10/10turns 30ft Till dispelled P 252',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function IncendiaryCloud(){a='8th(Incendiary Cloud)20ft-radi all 10d8 fire dmg; save halves; heavily obscures; move 10ft/rnd in chosen direction)DC8+'+characters[targeted].spellAbility+'+pro vsDex 150ft conce,10/10turns',b='0d0+0',c='fire',dmgDice='10d8+0',getAction(t1)}
function InfernalCalling(){a='5th(Infernal Calling)1min, conce,Summon 1 devil CR 6 unfriendly (CR +1/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Infestation(){a='Cantrip(Infestation)1act,The tgt vsCon or take 1d6 poison dmg and move 5ft in a random direction',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function InflictWounds(){a='1st(Inflict Wounds)+'+characters[targeted].spellAbility+'+pro touch',b='1d20+0',c='necro+1d10/slot',dmgDice='1d10+0',getAction(t1)}
function InsectPlague(){a='5th(Insect Plague 20ft-radi all 4d10+1d10/slot lvl pierc dmg; save halves; ignores cover; lightly obscures; difficult terrain Con 300ft conce,10min',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function IntellectFortress(){a='3rd(Intellect Fortress)1act,conce,1tgt',b='0d0+0',c='resist psychic,@Adv on int,wis,cha saves,+1 to save/lvl',dmgDice='0d0+0',getAction(t1)}
function InvestitureOfFlame(){a='6th Investiture of Flame)Fire immune; Cold resist.; 1d10 Fire dmg in 5ft; 15ft-l 5ft-w 4d8 Fire dmg, DC8+'+characters[targeted].spellAbility+'+pro vsDex halves Self conce,10min E 19',b='0d0+0',c='',dmgDice='4d6+0',getAction(t1)}
function InvestitureOfIce(){a='6th Investiture of Ice)Cold immune; Fire resist.; 10ft-radi dif. ter.; 15ft-cone 4d6 Cold dmg, half speed, save halves Con Self conce,10min E 19',b='0d0+0',c='',dmgDice='4d6+0',getAction(t1)}
function InvestitureOfStone(){a='6th Investiture of Stone)Nonmagical Bludg/Pierc/Slash resist.; 15ft-radi DC8+'+characters[targeted].spellAbility+'+pro vsDex or prone; move through earth/stone Self conce,10min E 19',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function InvestitureOfWind(){a='6th Investiture of Wind)Ranged wea atks dis. vs. you; fly 60ft; 15ft-cube in 60ft all 2d10 bludg dmg, push 10ft, DC8+'+characters[targeted].spellAbility+'+pro vsCon halves Con Self conce,10min E 20',b='0d0+0',c='',dmgDice='2d10+0',getAction(t1)}
function Invisibility(){a='2nd(Invisibility)touch conce,1hr',b='0d0+0',c='you or ally+1/slot and gear becomes invisible til atk or cast',dmgDice='0d0+0',getAction(t1)}
function Invulnerability(){a='9th(Invulnerability)1act,conce,The caster gains immunity to all dmg.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Javelin(){a='Javelin Simple Melee 5 sp 2 lbs Range (30/120), Thrown SRD5',b='1d20+0',c='Piercing',dmgDice='1d6+0',getAction(t1)}
function Jump(){a='1st(Jump)touch 10/10turns',b='0d0+0',c='you or ally jump distance x 3',dmgDice='0d0+0',getAction(t1)}
function Kasa(){a='Kasa Martial Melee 1 gp 1/2 lbs Finesse, Light, Exotic Rlyehable',b='1d20+0',c='Slashing',dmgDice='1d6+0',getAction(t1)}
function Knock(){a='2nd(Knock)60ft',b='0d0+0',c='300ft loud knock sound as magical and nonmagical locks are unlocked',dmgDice='0d0+0',getAction(t1)}
function KnockedProne(){a='(Knock Prone)DC8+dex+proDC8+'+characters[targeted].spellAbility+'+pro vsDex @DisAdv if held with 2 hands or large',b='1d0+0',c='movement halved, 5ft atks@Adv, ranged atks @DisAdv, 1act to stand',dmgDice='0d0+0',getAction(t1)}
function Kopis(){a='Kopis {{{mr,getAction(t1)},getAction(t1)},getAction(t1)} 25 gp 3 lbs Finesse, Light Godlikescoke',b='1d20+0',c='Slashing',dmgDice='1d6+0',getAction(t1)}
function Kusarigama(){a='Kusarigama Exotic Melee 35 gp 8 lbs Finesse, Special, two-handed,getAction(t1)},getAction(t1)} Ghostwheel',b='1d20+0',c='bludgeoning or slashing',dmgDice='1d6+0',getAction(t1)}
function Lance(){a='Lance Martial Melee 10 gp 6 lbs Reach, Special SRD5',b='1d20+0',c='Piercing',dmgDice='1d12+0',getAction(t1)}
function LayOnHands(){a='Lay On Hands)(6/6/long rest)touch less undead and constructs',b='0d0+0',c='heal 5x lvl in hp and cure 1 disease or poison',dmgDice='0d0+0',getAction(t1)}
function LegendLore(){a='5th(Legend Lore)Learn summary of lore involved with named or described person, place, or object(200gp; 250gp cons.)Div 10min Self',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function LeomundsSecretChest(){a='4th(Leomund s Secret Chest)Hide chest with content in Ethereal Plane for 60 days, after that chance of loss; reappear(5050gp)touch',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function LeomundsTinyHut(){a='3rd(Leomund s Tiny Hut)ritual 10/10turns self 10ft-radi 8hrs you and 8 allies have dry place to rest immune spells',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function LesserRestoration(){a='2nd(Lesser Restoration)1tgt cured of 1 disease, or 1 condition:blinded, deafened, paralyzed, or poisoned touch',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Levitate(){a='2nd(Levitate)1tgt)DC8+'+characters[targeted].spellAbility+'+pro vsCon or obj up to 500lbs rise vertically up to 20ft move up/down 20ft 60ft conce,10min',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function LifeTransference(){a='3rd(Life Transference)1act,The caster takes 4d8 necrotic dmg and another tgt gains twice the amount (+1d8 hp/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Light(){a='Cantrip(Light)DC8+'+characters[targeted].spellAbility+'+pro vsDex on tgt touch m',b='0d0+0',c='1hr 20ft-radi light+20ft-radi dim light from 10ft or less cu point',dmgDice='0d0+0',getAction(t1)}
function LightCrossbow(){a='Light Crossbow Simple Ranged 25 gp 5 lbs Ammunition, Loading, Range (80/320), Two-Handed SRD5',b='1d20+0',c='Piercing ',dmgDice='1d8+0',getAction(t1)}
function LightHammer(){a='Light Hammer Simple Melee 2 gp 2 lbs Light, Range (20/60), Thrown SRD5',b='1d20+0',c='Bludgeoning',dmgDice='1d4+0',getAction(t1)}
function LightRepeatingCrossbow(){a='Light Repeating Crossbow Simple Ranged — 5 lbs Ammunition, Light, Special, Two-Handed, Exotic, Range (40/160) Out of the A',b='1d20+0',  c='Piercing ',dmgDice='1d8+0',getAction(t1)}
function LightningArrow(){a='3rd(Lightning Arrow)Next ranged weapon atk 10ft)DC8+'+characters[targeted].spellAbility+'+pro vsDex halves bonus self conce,10/10turns',b='0d0+0',c='lightning+1d8/slot',dmgDice='2d8+0',getAction(t1)}
function LightningBolt(){a='3rd(Lightning Bolt)DC8+'+characters[targeted].spellAbility+'+pro vsDex 1/2dmg,100ft-line',b='0d0+0',c='lightning+1d6/slot',dmgDice='8d6+0',getAction(t1)}
function LightningLure(){a='Cantrip(Lightning Lure)DC8+'+characters[targeted].spellAbility+'+pro vsStr,1act,1tgt,15ft-rad or take 1d8 lightning dmg and be pulled up to 10ft.',b='0d0+0',c='pulled 10ft,lighting if <15ft of caster,@5th 2d8,@11th 3d8,@17th 4d8',dmgDice='1d8+0',getAction(t1)}
function LocateAnimals(){a='2nd(Locate Animals or Plants)closest named or described kind of beast or plant within 5mi self m',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function LocateCreature(){a='4th(Locate Creature)Learn direction to closest named or described kind or specific Creature within 1000ft Self conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function LocateObject(){a='2nd(Locate Object)self conce,10min know the moving direction of a familiar object or similar objects',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Longbow(){a='Longbow Martial Ranged 50 gp 2 lbs Ammunition, Heavy, Range (150/600), Two-Handed SRD5',b='1d20+0',c='Piercing',dmgDice='1d8+0',getAction(t1)}
function Longspear(){a='Longspear Martial Melee 1 gp 4 lbs Finesse, Reach, Two-Handed, Exotic Rlyehable',b='1d20+0',c='Piercing',dmgDice='1d10+0',getAction(t1)}
function Longstrider(){a='1st(Longstrider)touch 1hr',b='0d0+0',c='you or ally+1 ally/slot speed+10ft',dmgDice='0d0+0',getAction(t1)}
function Longsword(){a='Longsword Martial Melee 15 gp 3 lbs Versatile(1d10) SRD5',b='1d20+0',c='Slashing',dmgDice='1d8+0',getAction(t1)}
function Mace(){a='Mace Simple Melee 5 gp 4 lbs SRD5',b='1d20+0',c='Bludgeoning',dmgDice='1d6+0',getAction(t1)}
function MaddeningDarkness(){a='8th(Maddening Darkness)1act,conce,tgts 60ft-radi sphere of darkness vsWis or take 8d8 psychic dmg.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Maelstrom(){a='5th(Maelstrom)1act,conce,tgts 30ft-radi vsStr or take 6d6 bludg dmg and be pulled towards the center.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function MageArmor(){a='1st(Mage Armor)touch 8hrs',b='0d0+0',c='self or 1 ally unarmored, ac13+dexMod',dmgDice='0d0+0',getAction(t1)}
function MageHand(){a='Cantrip(Mage Hand)30ft 10/10turns',b='0d0+0',c='open, stow, retrieve, pour, carry up to 10lbs',dmgDice='0d0+0',getAction(t1)}
function MagicCircle(){a='3rd(Magic Circle)10/10turns 10ft 1hr 10ft-radi 20ft tall cylinder allies immune charm fear, possession atkd @DisAdv select celestials, elementals, etc can not enter unless)DC8+'+characters[targeted].spellAbility+'+pro vsCha to Teleport or Interplanar Travel in',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function MagicJar(){a='6th Magic Jar)Transport your soul into container from which you can attempt to possess humanoids;(500gp)10/10turns Self Till dispelled P 257',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function MagicMissile(){a='1st(Magic Missile)120ft',b='1d20+99',c='3 glowing darts+1/slot force',dmgDice='1d4+1',getAction(t1)}
function MagicMouth(){a='2nd(Magic Mouth ritual 10/10turns 30ft til dispelled',b='0d0+0',c='object speaks 25 word message triggered by beings you specify',dmgDice='0d0+0',getAction(t1)}
function MagicStone(){a='Cantrip(Magic Stone)bonus,Up to 3 pebbles deal 1d6 + abiMod bludg dmg if the spell atk hits.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function MagicWeapon(){a='2nd(Magic Weapon)bonus touch conce,1hr',b='0d0+0',c='weapon becomes+1/+1 more@4th/+1 more,@6th atk and dmg magical',dmgDice='0d0+0',getAction(t1)}
function MajorImage(){a='3rd(Major Image 120ft conce,10min 20ft-cube image to move image)DC8+'+characters[targeted].spellAbility+'+pro vsInves to detect',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Mancatcher(){a='Mancatcher Martial Melee 30 gp 6 lbs Reach, Special, Two-Handed, Exotic Monster Manual(5e)',b='1d20+0',c='Piercing',dmgDice='1d6+0',getAction(t1)}
function MassCureWounds(){a='5th(Mass Cure Wounds)30ft-radi 6 allies heal',b='0d0+0',c='heal 3d8+1d8/slot lvl'+characters[targeted].spellAbility+'hp',dmgDice='3d8+0',getAction(t1)}
function MassHeal(){a='9th(Mass Heal)Heal up to 700 hp to any tgts in range; also cured of all diseases, blindness and deafness 60ft',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function MassHealingWord(){a='3rd(Mass Healing Word)6 tgts heal 1d4+1d4/slot lvl'+characters[targeted].spellAbility+'in hp 60ft',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function MassPolymorph(){a='9th(Mass Polymorph)unwilling,Shapeshifters immune, DC8+'+characters[targeted].spellAbility+'+pro vsWis,1act,concen,<=10tgts forms CR/lvl=<tgt s CR/lvl,tgts HP+tmp HP beast HP',b='0d0+0',c='transformed into Beast CR',dmgDice='0d0+0',getAction(t1)}
function MassSuggestion(){a='6th Mass Suggestion)12 tgts save or follow stated course of action; SL7:10 day; SL8:30 days; SL9:366 days; DC8+'+characters[targeted].spellAbility+'+pro vsWis 60ft 24hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Maul(){a='Maul Martial Melee 10 gp 10 lbs Heavy, Two-Handed SRD5',b='1d20+0',c='Bludgeoning',dmgDice='2d6+0',getAction(t1)}
function MaximilliansEarthenGrasp(){a="2nd(Maximilian s Earthen Grasp)DC8+"+characters[targeted].spellAbility+"+pro vsStr,1act,concen,1tgt",b='0d0+0',c='bludg,restrained',dmgDice='2d6+0',getAction(t1)}
function MeldIntoStone(){a='3rd(Meld into Stone)You merge into a stone object large enough to contain you; can t see through the stone; touch 8hrs',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function MelfsAcidArrow(){a='2nd(Melf s Acid Arrow)90ft'+characters[targeted].spellAbility+'+pro',b='1d20+0',c='on miss half dmg acid+1d4/slot+2d4+1d4/slot ateofin turn',dmgDice='4d4+0',getAction(t1)}
function MelfsMinuteMeteors(){a='3rd(Melf s Minute Meteors)1act,conce,tgts within 5ftDC8+'+characters[targeted].spellAbility+'+pro vsDex or take 2d6 fire dmg for each of the 6 meteors (+2 meteors/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Mending(){a='Cantrip(Mending)touch repair 1ft-cube single break or tear in magical or non-magical object but not restore magic',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function MentalPrison(){a='6th(Mental Prison)illusion, 1act,conce,The tgt must succeed on anDC8+'+characters[targeted].spellAbility+'+pro vsInt or take 5d10 psychic dmg and believe to be surrounded by fire or other hazard.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Message(){a='Cantrip(Message)120ft 10/10turns 1tgt hears Silence dispels',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function MeteorSwarm(){a='9th(Meteor Swarm)4× 40ft-radi all 20d6 bludg dmg and 20d6 Fire dmg; save halves; areas do not stack)DC8+'+characters[targeted].spellAbility+'+pro vsDex 1 mile P 259',b='0d0+0',c='bludg fire',dmgDice='40d6+0',getAction(t1)}
function MightyFortress(){a='8th(Mighty Fortress)1min, Let erupt a forteresse of stone on a 120 x 120ft area for 7 days.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function MindBlank(){a='8th(Mind Blank)1tgt immune to charms, psychic dmg, divination, mind reading, and any mind altering effects touch 24hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function MindSliver(){a='Cantrip(Mind Sliver)1act,1tgt,DC8+'+characters[targeted].spellAbility+'+pro vsInt',b='0d0+0',c='psychic,subtract 1d4 from next save',dmgDice='1d6+0',getAction(t1)}
function MindSpike(){a='2nd(Mind Spike)divination, 1act,conce,The tgt vsWis or take 3d8 psychic dmg',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function MinorIllusion(){a='Cantrip(Minor Illusion)DC8+'+characters[targeted].spellAbility+'+pro vsInves 30ft 10/10turns',b='0d0+0',c='creates a sound or up to a 5ft-cube image. 1act Inves vs spell dc to discern',dmgDice='0d0+0',getAction(t1)}
function MirageArcane(){a='7th(Mirage Arcane)1 sq mile alter terrain illusion includes visible, audible, olfactory, tactile; can make difficult ter; 10min Sight 10 days',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Mire(){a='(Mire)1act,30ft, ground becomes swamp difficult terrain 1/2 speed, you move without penalty',b='0d0+0',c='fire+1d10/slot',dmgDice='2d10+0',getAction(t1)}
function MirrorImage(){a='2nd(Mirror Image)self 10/10turns 3 clones d20 6+1 clone AC10+dex destroyed 8+another clone 10; the last clone blindsight truesight immune',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Misfortune(){a='(Misfortune)1act,1tgt, 60ft, DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='1d6+0',c='ability checks and saving throws-1d6 uteo '+characters[x].name+' s nt',dmgDice='0d0+0',getAction(t1)}
function Mislead(){a='5th(Mislead)You invisible and illusionary duplicate of you; move it; bns a switch between its senses and yours Self S conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function MistyStep(){a='2nd(Misty Step)teleport 30ft bonus self v',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ModifyMemory(){a='5th(Modify Memory)1tgt)DC8+'+characters[targeted].spellAbility+'+pro vsWis or charmed, alter 1 memory of last(SL6:7, SL7:30, SL8:365)day; SL:9 any memory 30ft conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function MoldEarth(){a='Cantrip(Mold Earth)1act,Control dirt or stone to excavate, shape, turn it into difficult terrain, etc.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Moonbeam(){a='2nd(Moonbeam)5ft-radi 40ft-h dim light area moveable up to 60ft/turn)DC8+'+characters[targeted].spellAbility+'+pro vsCon 120ft conce,1min',b='0d0+0',c='radiant+1d10/slot',dmgDice='2d10+0',getAction(t1)}
function MorPrivateSanctum(){a='4th(Mor. Private Sanctum)Up to 100+100/slot lvlft-cube is magically secured in chosen way; 10min 120ft 24hrs',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function MordenkainensFaithfulHound(){a='4th(Mor. Faithful Hound)Invisible, immobile dog melee atks as spell atk+'+characters[targeted].spellAbility+'+pro for 4d8 pierc dmg; sees invisible/ethereal; 30ft 8hrs',b='1d20+0',c='',dmgDice='4d8+0',getAction(t1)}
function MordenkainensMagnificentMansion(){a='7th(Mordenkainens Magnificent Mansion)Create xtradimensional mansion with rooms, food and servants to serve 100 people;(15gp)10/10turns 300ft 24hrs',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function MordenkainensSword(){a='7th(Mordenkainens Sword)Hovering sword makes melee spell atks for 3d10 Force dmg; bns a to move 20ft and/or atk 60ft conce,10/10turns',b='1d20+0',c='force',dmgDice='3d10+0',getAction(t1)}
function Morningstar(){a='Morningstar Martial Melee 15 gp 4 lbs SRD5',b='1d20+0',c='Piercing',dmgDice='1d8+0',getAction(t1)}
function MoveEarth(){a='6th(Move Earth)Every 10min of conce,ntration, gradually reshape 40 cuft of dirt, sand, or clay; 120ft conce,2hr P 263',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Nails(){a='(Nails)1 atk and 1 bonus atk, unarmed strikes+1d4 magical dmg',b='0d0+0',c='',dmgDice='1d4+0',getAction(t1)}
function NegativeEnergyFlood(){a='5th(Negative Energy Flood)1act,The tgt vsCon or take 5d12 necrotic dmg. Killed that way, tgt rises as a zombi.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Net(){a='Net Martial Ranged 1 gp 3 lbs Range (5/15), Special, Thrown SRD5',b='1d20+0',c=' ',dmgDice='—+0',getAction(t1)}
function Nondetection(){a='3rd(Nondetection)touch 8hrs',b='0d0+0',c='up to 10ft-cube being is hidden from divination magic',dmgDice='0d0+0',getAction(t1)}
function NystulsMagicAura(){a='2nd(Nystul s Magic Aura)touch 24hrs recast 30days til dispelled',b='0d0+0',c='False Aura object or being magic appears nonmagic vs versa change school appearance*or Mask being appears as different alignment or racial type',dmgDice='0d0+0',getAction(t1)}
function Obfuscate(){a='(Obfuscate)1act,20ft-radi sphere cloud, self',b='0d0+0',c='obscured terrain utteo your nt or 10mi>wind',dmgDice='0d0+0',getAction(t1)}
function OtilukesFreezingSphere(){a='6th Oti. Freezing Sphere)60ft-radi all 10d6+1d6/slot lvl Cold dmg; save halves; freezes water; can save up to 10/10turns before using DC8+'+characters[targeted].spellAbility+'+pro vsDex 300ft P 263',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function OtilukesResilientSphere(){a='4th(Otiluke s Resilient Sphere)1tgt/obj up to Large)DC8+'+characters[targeted].spellAbility+'+pro vsDex or enclosed in impenetrable sphere; can be moved as hamsterball 30ft conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function OttsIrreDance(){a='6th(Otto s Irre. Dance)1tgt dances in place, can not move, dis. on atks/saves, adv. on atks vs. target;)DC8+'+characters[targeted].spellAbility+'+pro vsvsWis each rnd 30ft conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function PassWithoutTrace(){a='2nd(Pass without Trace)Any within 30ft-radi+10 Dex(Stealth)checks, leave no tracks, can t be tracked by nonmagical means self conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Passwall(){a='5th(Passwall)Create a passage max 5ft wide, 8ft tall, 20ft deep in a wooden, plaster or stone surface duration 1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Pestilence(){a='(Pestilence)1act,5ft-radi sphere poison cloud around you that follows you, all tgts that enter or start turn in cloud, DC8+'+characters[targeted].spellAbility+'+pro vsCon',b='0d0+0',c='poisoned uteo '+characters[x].name+' s nt',dmgDice='0d0+0',getAction(t1)}
function PhantasmalForce(){a='2nd(Phantasmal Force)60ft conce,10/10turns)DC8+'+characters[targeted].spellAbility+'+pro vsInt or Create 10ft-cube illusory being',b='0d0+0',c='*False Aura object or being magic appears nonmagic vs versa change school appearance*or Mask being appears as different alignment or racial type',dmgDice='0d0+0',getAction(t1)}
function PhantasmalKiller(){a='4th(Phantasmal Killer)1tgt DC8+'+characters[targeted].spellAbility+'+pro vsWis, 120ft, conce,10/10turns',b='0d0+0',c='frightened+psychic+4d10+1d10/slot',dmgDice='4d10+0',getAction(t1)}
function PhantomSteed(){a='3rd(Phantom Steed)ritual 10/10turns 30ft 1hr a horseline being is summoned for you and an ally to ride speed 100ft 10mi/hr 13mi/hr @fast pace',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Pike(){a='Pike Martial Melee 5 gp 18 lbs Heavy, Reach, Two-Handed SRD5',b='1d20+0',c='Piercing',dmgDice='1d10+0',getAction(t1)}
function PlanarAlly(){a='6th(Planar Ally)otherwordly entity sends celestial, elemental or fiend to a location near you; 10min 60ft',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function PlanarBinding(){a='5th(Planar Binding)1 celestial/elem/fey/fiend save or bound; SL6:10, SL7:30, SL8:180, SL9:366 days(1000gp cons.)Cha 1hr 60ft 24hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function PlaneShift(){a='7th(Plane Shift)DC8+cha+pro vsCon You+8 allies teleport to a different plane; or roll a spell atk to teleport 1 enemy to a random plane touch m',b='1d20+0',c='teleported',dmgDice='0d0+0',getAction(t1)}
function PlantGrowth(){a='3rd(Plant Growth)1act 100ft-radi plants overgrow and slow speed by 1/4th 8hrs 1 mi diame plants yield double food @harvest 150ft s',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function PoisonSpray(){a='Cantrip(Poison Spray)DC8+'+characters[targeted].spellAbility+'+pro vsCon 10ft',b='0d0+0',c='poison+1d12@5, 11, 17th lvl',dmgDice='1d12+0',getAction(t1)}
function Polymorph(){a='4th(Polymorph)conce,60ft on 1tgt with>0 hp)DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='0d0+0',c='transformed into beast of choice of same CR or lower for 1hr',dmgDice='0d0+0',getAction(t1)}
function PowerWordHeal(){a='9th(Power Word Heal)1tgt heals all hp and stops being charmed, frightened, paralyzed, stunned; it can use rea to stand up 1 act touch s',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function PowerWordKill(){a='9th(Power Word Kill)1tgt with 100 curHP or less dies 60ft',b='0d0+0',c='',dmgDice='0d0+100',getAction(t1)}
function PowerWordPain(){a='7th(Power Word Pain)1act,The tgt (100 maxHP) has its speed reduced to 10ft, disadvantage to d20 rolls and has to make a vsCon to cast spells.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function PowerWordStun(){a='8th(Power Word Stun)1tgt with 150 curHP or less is stunned; save ateoet to end spell)DC8+'+characters[targeted].spellAbility+'+pro vsCon 60ft',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function PrayerOfHealing(){a='2nd(Prayer of Healing)6 tgts, 10min, 30ft',b='0d0+0',c='heal '+characters[targeted].spellAbility+' 1d8/slot',dmgDice='2d8+0',getAction(t1)}
function Prestidigitation(){a='Cantrip(Prestidigitation 10ft 1hr shower sparks, puff of wind, faint musical notes, odd oder light or snuff torch clean soil 1ft-cube chill warm flavor food Create 1 mark 1hr illusory trinket till t e o y n turn',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function PrimalSavagery(){a='Cantrip(Primal Savagery)1act,If the melee spell atk hits, deals 1d10 acid dmg',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function PrimordialWard(){a='6th(Primordial Ward)1act,conce,The caster gets resistance to acid, cold, fire, lightning, and thunder dmg or immunity to a single type.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function PrismaticSpray(){a='7th(Prismatic Spray)All random effect, :either 10d6 dmg, restrained, or blinded; save halves/negates)DC8+'+characters[targeted].spellAbility+'+pro vsDex 60ft-cone',b='0d0+0',c='',dmgDice='10d6+0',getAction(t1)}
function PrismaticWall(){a='9th Prismatic Wall)Up to 90ft-l 30ft-h 5 inch thick; all in 20ft save or blinded; 7 layers with effects, DC8+'+characters[targeted].spellAbility+'+pro vsCon 60ft 10min',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ProduceFlame(){a='Cantrip(Produce Flame)30ft ranged atk+'+characters[targeted].spellAbility+'+pro and 10ft light from self 10min',b='1d20+0',c='fire+1d8@5, 11, 17',dmgDice='1d8+0',getAction(t1)}
function ProgrammedIllusion(){a='6th(Programmed Illusion)30ft-cube illusion includes visible, audible; triggers on set condition;(25gp)120ft Till dispelled',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ProjectImage(){a='7th(Project Image)Project image of you to familiar place; manipulate it; bns a switch between its senses and yours(5gp)500 mi conce,1 day',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ProtectionFromEnergy(){a='3rd(Protection from Energy)touch self or 1 ally conce,1hr',b='0d0+0',c='resist acid, cold, fire, lightning or thunder',dmgDice='0d0+0',getAction(t1)}
function ProtectionFromEvilAndGood(){a='1st(Protection from Evil or Good)abjur',b='0d0+0',c='immune to fear charm posse and attac @DisAdv by abber celes eleme fey fiend undea characters[targeted].name conce,10min',dmgDice='0d0+0',getAction(t1)}
function ProtectionFromPoison(){a='2nd(Protection from Poison)touch 1tgt 1hr',b='0d0+0',c='cured of 1 poison, resists poison dmg, saves vs poison@Adv',dmgDice='0d0+0',getAction(t1)}
function PsychicScream(){a='9th(Psychic Scream)1act,Up to 10 creatures must succeed on anDC8+'+characters[targeted].spellAbility+'+pro vsInt or take 14d6 psychic dmg.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Puppet(){a='1st(Puppet)1act,120ft, S, instantaneous, 1tgt, )DC8+'+characters[targeted].spellAbility+'+pro vsCon',b='0d0+0',c='tgt drops everything and runs max speed in direction caster chooses',dmgDice='0d0+0',getAction(t1)}
function PurifyFoodAndDrink(){a='1st(Purify Food and Drink)5ft-radi food and drink free of poison disease 10ft',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Pyrotechnics(){a='2nd(Pyrotechnics)1act 60ft instant 5ft x 5ft fire cube fireworks DC8+'+characters[targeted].spellAbility+'+pro vsCon or smoke',b='0d0+0',c='10ft fireworks blinded or full cover smoke 20ft radi',dmgDice='0d0+0',getAction(t1)}
function Quarterstaff(){a='Quarterstaff Simple Melee 2 sp 4 lbs Versatile(1d8) SRD5',b='1d20+0',c='Bludgeoning',dmgDice='1d6+0',getAction(t1)}
function RaiseDead(){a='5th(Raise Dead Restores a Creature s body that has died in the last 10 days to life with 1 hp;(500gp cons.)1hr touch',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function RaiseDead(){a='5th(Raise Dead)Restores a Creature s body that has died in the last 10 days to life with 1 hp costs 500gp, 1hr, touch',b='0d0+0',c='heal',dmgDice='0d0+1',getAction(t1)}
function Rapier(){a='Rapier Martial Melee 25 gp 2 lbs Finesse SRD5',b='1d20+0',c='Piercing',dmgDice='1d8+0',getAction(t1)}
function RarysTelepathicBond(){a='5th(Rary s Telepathic Bond )8 allies with intelligence more than 2 gain a telepathic bond that works for any distance on the same plane 30ft 1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function RayOfEnfeeblement(){a='2nd(Ray of Enfeeblement)+'+characters[targeted].spellAbility+'+pro 60ft conce,',b='1d20+0',c='str atks do 1/2 dmg.10/10turns or vsCon ateoet',dmgDice='0d0+0',getAction(t1)}
function RayOfFrost(){a='Cantrip(RayOfFrost)+'+characters[targeted].spellAbility+'+pro,60ft',b='1d20+0',c='cold+1d8,@5th,@11th,@17th,tgt speed-10ft',dmgDice='1d8+0',getAction(t1)}
function RayOfSickness(){a='1st(Ray of Sickness)60ft',b='1d20+0',c='poison and con sav or poisoned condition',dmgDice='2d8+0',getAction(t1)}
function Regenerate(){a='7th(Regenerate)1tgt heals 4d8+15 hp and 1 hp/rnd for rest of duration; restores lost body parts in 2 min 10/10turns touch 1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Reincarnate(){a='5th(Reincarnate)dead within the last 10 days humanoid is back to life in a new random adult humanoid body(1000gp cons.)1hr touch m',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function RemoveCurse(){a='3rd(Remove Curse)touch self or 1 ally or 1 object',b='0d0+0',c='curses on the being end, cursed attunement to an object ends',dmgDice='0d0+0',getAction(t1)}
function Resistance(){a='Cantrip(Resistance)touch conce,10/10turns',b='0d0+0',c='1tgt saves+1d4',dmgDice='1d4+0',getAction(t1)}
function Resurrection(){a='7th(Resurrection)1tgt that has died in the last century, with whole body;(1000gp cons.)1hr touch',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ReverseGravity(){a='7th(Reverse Gravity)50ft-radi 100ft-h everything falls upward; save to grab hold onto something solid)DC8+'+characters[targeted].spellAbility+'+pro vsDex 100ft conce,10/10turns',b='0d0+0',c='fall dmg',dmgDice='0d0+0',getAction(t1)}
function Revivify(){a='3rd(Revivify)touch',b='0d0+0',c='restores a Creature s body that has died in the last min to life with 1 hp',dmgDice='0d0+0',getAction(t1)}
function RopeTrick(){a='2nd(Rope Trick)touch 1hr',b='0d0+0',c='60ft rope rises up to xtradimensional space for you and 7 allies you can see out 3x5ft window',dmgDice='0d0+0',getAction(t1)}
function Ruin(){a='(Ruin)1act,1tgt, 60ft, DC8+'+characters[targeted].spellAbility+'+pro vsCon',b='0d0+0',c='AC-4 to a max of 10 uteo '+characters[x].name+' s nt',dmgDice='0d0+0',getAction(t1)}
function Saber(){a='Saber Martial Melee 30 gp 3 lbs Finesse, Light Oakes',b='1d20+0',c='Slashing',dmgDice='1d8+0',getAction(t1)}
function SacredFlame(){a='Cantrip(Sacred Flame)60ft DC8+'+characters[targeted].spellAbility+'+pro vsDex',b='0d0+0',c='radiant+1d8@5, 11, 17th lvl',dmgDice='1d8+0',getAction(t1)}
function Sanctuary(){a='1st(Sanctuary)1tgt warded; any who want to atk/tgt must first make save; does not protect vs. area spells)DC8+'+characters[targeted].spellAbility+'+pro vsWis 30ft 10/10turns P 272',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SappingSting(){a='Cantrip(Sapping Sting)1act,30ft,instant,1tgt,DC8+'+characters[targeted].spellAbility+'+pro vsCon',b='0d0+0',c='necrotic,prone,@5th 2d4,@11th 3d4,@17th 4d4',dmgDice='1d4+0',getAction(t1)}
function Scatter(){a='6th(Scatter)1act,Up to 5 creatures are teleported (vsWis if unwilling) within 120ft.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Scimitar(){a='Scimitar Martial Melee 25 gp 3 lbs Finesse, Light SRD5',b='1d20+0',c='Slashing',dmgDice='1d6+0',getAction(t1)}
function ScorchingRay(){a='2nd(Scorching Ray)+'+characters[targeted].spellAbility+'+pro 120ft',b='1d20+0',c='3 rays+1/slot fire',dmgDice='2d6+0',getAction(t1)}
function Scrying(){a='5th(Scrying 1tgt save or sensor follows it around; or Create sensor in familiar location;(1000gp)Wis Div 10min Self conce,10min',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SearingSmite(){a='1st(Searing Smite))DC8+'+characters[targeted].spellAbility+'+pro vsCon bonus self conce,10/10turns',b='0d0+0',c='fire+1d6slot and tgt ignites vsCon ateoet or+1d6 fire',dmgDice='1d6+0',getAction(t1)}
function SeeInvisibility(){a='2nd(See Invisibility)self 1hr',b='0d0+0',c='see invisible beings and Ethereal Plane',dmgDice='0d0+0',getAction(t1)}
function Seeming(){a='5th(Seeming)Any tgts)DC8+'+characters[targeted].spellAbility+'+pro vsCha or disguised by changing physical appearance; Int(Investigation)check vs. spell DC to detect 30ft 8hrs',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Sending(){a='3rd(Sending)1act,unlim range,1knownTgt,10/10turns',b='0d0+0',c='25 word telepathic message to an int1+ally that knows it is you and replies 5% message does not arrive on alternate plane',dmgDice='0d0+0',getAction(t1)}
function Sequester(){a='7th(Sequester)1 willing tgts/obj suspended, invisible, hidden from divination magic;(5000gp cons.)touch Till dispelled',b='0d0+0',c='tgts hit by wall save 1/2dmg,cold dmg',dmgDice='10d6+0',getAction(t1)}
function ShadowBlade(){a='2nd(Shadow Blade)+cha+pro, 1min, illusion, bonus,conce,shadow weapon with finesse, light, and thrown',b='1d20+0',c='psychic+1d8,@3rdSlot, @5thSlot, 7thSlot',dmgDice='2d8+0',getAction(t1)}
function ShadowOfMoil(){a='4th(Shadow of Moil)1act,conce,Tha caster gains resistance to radiant dmg and deals 2d8 necrotic dmg to creatures that hit him with an atk.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function ShapeWater(){a='Cantrip(Shape Water)1act,Control water to obtain various minor effects such as changing color, freezing, changing the flow, etc.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Shapechange(){a='9th Shapechange)Take form of Creature with CR of CL or lower; keep Int, Wis, Cha and alignment;(1500gp)Self conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Shatter(){a='2nd(Shatter)DC8+'+characters[targeted].spellAbility+'+pro vsCon 1/2dmg,60ft 10ft-radi metal, crystal, stone beings save @DisAdv',b='0d0+0',c='thunder+1d8/slot',dmgDice='3d8+0',getAction(t1)}
function Shield(){a='1st(Shield)1 react self 10/10turns',b='0d0+0',c='Shield spell ac+5 immune Magic Missile',dmgDice='0d0+0',getAction(t1)}
function ShieldOfFaith(){a='1st(Shield of Faith)1tgt gains+2 AC for the duration 60ft conce,10min',b='0d0+0',c='Shield of Faith AC+2 for encounter duration',dmgDice='0d0+0',getAction(t1)}
function Shillelagh(){a='Cantrip(Shillelagh)club or quarterstaff atk+'+characters[targeted].spellAbility+'+pro 1 bonus touch 1min',b='1d20+0',c='quarterstaff bludg+spell dmg',dmgDice='2d8+0',getAction(t1)}
function ShockingGrasp(){a='Cantrip(Shocking Grasp)+'+characters[targeted].spellAbility+'+pro touch',b='1d20+0',c='vs unarmored@Adv lightning+1d8@5, 11, 17th lvl and tgt speed-10ft',dmgDice='1d8+0',getAction(t1)}
function Shortbow(){a='Shortbow Simple Ranged 25 gp 2 lbs Ammunition, Range (80/320), Two-Handed SRD5',b='1d20+0',c='Piercing',dmgDice='1d6+0',getAction(t1)}
function Shortsword(){a='Shortsword Martial Melee 10 gp 2 lbs Finesse, Light SRD5',b='1d20+0',c='Piercing',dmgDice='1d6+0',getAction(t1)}
function Shuriken(){a='Shuriken Martial Ranged 2 cp 1/10 lbs Light, Range (20/60), Finesse, Thrown Rlyehable',b='1d20+0',c='Piercing',dmgDice='1d4+0',getAction(t1)}
function SickeningRadiance(){a='4th(Sickening Radiance)1act,conce,tgts 30ft-radi vsCon or take 4d10 radiant dmg and one level of exhaustion.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Sickle(){a='Sickle Simple Melee 1 gp 2 lbs Light SRD5',b='1d20+0',c='Slashing',dmgDice='1d4+0',getAction(t1)}
function Silence(){a='2nd(Silence)20ft-radi no sound can propagate; all within deafened, immune to Thunder dmg, can t use verbal comp. 120ft conce,10min',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SilentImage(){a='1st(Silent Image)DC8+'+characters[targeted].spellAbility+'+pro vsInves 60ft conce,10min',b='0d0+0',c='create 15ft-cube image you can move within range',dmgDice='0d0+0',getAction(t1)}
function Simulacrum(){a='7th(Simulacrum)Create snow/ice duplicate of humanoid/beast; follows your verbal commands;(1500gp cons.)12hr touch Till dispelled',b='0d0+0',c='tgts hit by wall save 1/2dmg,cold dmg',dmgDice='10d6+0',getAction(t1)}
function SkillEmpowerment(){a='5th(Skill Empowerment)1act,conce,The tgt doubles its proficiency bonus for one skill.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Skywrite(){a='2nd(Skywrite)1act,conce,Ritual, Create up to 10 words in the clouds.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Skywrite(){a='2nd(Skywrite)transmu 1act range sight conce,',b='0d0+0',c='10 cloud words appear in the sky 1hr or strong wind',dmgDice='0d0+0',getAction(t1)}
function Sleep(){a='1st(Sleep)1act,90ft-dist,20ft-radi,10/10turns',b='0d0+0',c='5d8+2d8/slot lowest hp tgts sleep til slapped or dmg(auto crit hit) less undead and immune charmed',dmgDice='0d0+0',getAction(t1)}
function SleetStorm(){a='3rd(Sleet Storm)150ft conce,10/10turns 40ft-radi 20ft tall cylinder)DC8+'+characters[targeted].spellAbility+'+pro vsDex',b='0d0+0',c='enter or start turn obscured difficult terrain, flames doused, prone, conce,ntration vs spell DC',dmgDice='0d0+0',getAction(t1)}
function Sling(){a='Sling Simple Ranged 1 sp — lbs Ammunition, Range (30/120) SRD5',b='1d20+0',c='Bludgeoning',dmgDice='1d4+0',getAction(t1)}
function Slow(){a='3rd(Slow)120ft conce,10/10turns 6 tgts 40ft-cube)DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='1d20+0',c='ac-2, dex-4, no reacts, 1 act or 1 atk, or 1 bonus,d20 11+caster spell works on next turn or spell wasted vsWis eoiturn',dmgDice='0d0+0',getAction(t1)}
function Slumber(){a='(Slumber)1act,1tgt, 60ft, DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='0d0+0',c='tgt sleeps until slapped or dmgd or uteo '+characters[x].name+' s nt',dmgDice='0d0+0',getAction(t1)}
function SmokeStick(){a='(Smoke Stick)1act,30ft 10ft rad',b='0d0+0',c='blocks vision and darkvision 1min, recharge 1min',dmgDice='0d0+0',getAction(t1)}
function Snare(){a='1st(Snare)1min, Create a magic trap (vsDex or the Small to Large size tgt is hoisted into the air).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Snilloc(){a='2nd(Snilloc s Snowball Swarm)1act,tgts 5ft-radi sphere,DC8+'+characters[targeted].spellAbility+'+pro vsDex or take 3d6 cold dmg',b='0d0+0',c='cold',dmgDice='3d6+0',getAction(t1)}
function SongOfRest(){a='(Song of Rest)everyone heals during short 4hr or/long rest',b='0d0+0',c='heal',dmgDice='1d6+0',getAction(t1)}
function SoulCage(){a='6th(Soul Cage)reaction, Snatch a soul to regain hp, ask it a question, get@Adv to a roll, or see a place it saw in life.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function SpareTheDying(){a='Cantrip(Spare the Dying)touch',b='0d0+0',c='being with 0hp becomes stable less undead and constructs',dmgDice='0d0+0',getAction(t1)}
function SpeakWithAnimals(){a='1st(Speak with Animals)self s',b='0d0+0',c='you communicate with beasts according to their Int for 10min',dmgDice='0d0+0',getAction(t1)}
function SpeakWithDead(){a='3rd(Speak with Dead)1 corpse with mouth answers 5 questions with knowledge it had in life; can cast on same every 10 days 10ft 10min',b='0d0+0',c='25 word telepathic message to an int1+ally that knows it is you and replies 5 % message does not arrive on alternate plane',dmgDice='0d0+0',getAction(t1)}
function SpeakWithPlants(){a='3rd(Speak with Plants)ask about last 24hrs events turn difficult plant terrain to normal or vice versa 30ft-radi 10min',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Spear(){a='Spear Simple Melee 1 gp 3 lbs Range (20/60), Thrown, Versatile(1d8) SRD5',b='1d20+0',c='Piercing',dmgDice='1d6+0',getAction(t1)}
function SpiderClimb(){a='2nd(Spider Climb)touch conce,1hr',b='0d0+0',c='climb speed is walk speed',dmgDice='0d0+0',getAction(t1)}
function SpikeGrowth(){a='2nd(Spike Growth)20ft-radi difficult terrain all take dmg every 5ft moved 150ft conce,10min',b='0d0+0',c='',dmgDice='1d4+0',getAction(t1)}
function SpiritGuardians(){a='@3rd(Spirit Guardians)1act,self,15ft-radi,conce,10min,DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='0d0+0',c='your spirit guardians halve the spd of enemies,15ft save vsWis for 1/2 radiant or necrotic dmg',dmgDice='3d8+0',getAction(t1)}
function SpiritShroud(){a='3rd(Spirit Shroud)bonus,conce,atk xtra dmg',b='0d0+0',c='atk dmg+radiant or necro or cold,no regeneration 1turn, speed-10ft utso your nt,+1d8 every 2 slots above 3rd',dmgDice='1d8+0',getAction(t1)}
function SpiritualWeapon(){a='2nd(Spiritual Weapon)+wis+pro move weapon 20ft and bonus atk 60ft (10/10)turns',b='1d20+0',c='force+1d8/slot',dmgDice='0d0+0',getAction(t1)}
function StaggeringSmite(){a='4th(Staggering Smite)DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='0d0+0',c='psych+roll @DisAdv+no reacts til eoynt',dmgDice='4d6+0',getAction(t1)}
function SteelWind(){a='5th(Steel Wind Strike)1act,If the spell atk hits, deals 6d10 force dmg to 5 creatures, then the caster teleports.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function StinkingCloud(){a='3rd(Stinking Cloud)90ft conce,10/10turns 20ft radi)DC8+'+characters[targeted].spellAbility+'+pro vsCon',b='0d0+0',c='obscured terrain, poison retching reeling',dmgDice='0d0+0',getAction(t1)}
function StoneShape(){a='4th(Stone Shape Form 5 cuft of stone into any shape; can have up to two hinges and a latch, but no finer mechanisms touch',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Stoneskin(){a='4th(Stoneskin)1 ally resist nonmagical bludg, pierc, and slash dmg touch conce,1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function StormOfVengence(){a='9th(Storm of Vengeance)360ft radi)DC8+'+characters[targeted].spellAbility+'+pro vsCon; intensifies every rnd sight conce,10/10turns',c='thunder and deafened 5min',dmgDice='2d6+0',getAction(t1)}
function StormSphere(){a='4th(Storm Sphere)20ft-radi difficult terrain, )DC8+'+characters[targeted].spellAbility+'+pro vsStr',b='0d0+0',c='2d6+1d6/slot lvl bludg; bns a 60ft ranged atk 4d6 Lightning 150ft conce,10/10turns',dmgDice='4d6+0',getAction(t1)}
function Stunned(){a='(Stun)DC8+dex+pro vsCon',b='0d0+0',c='stunned, atkd@Adv, str and vsDexs @DisAdv, miss 1 turn, DM rule no crit dmg',dmgDice='0d0+0',getAction(t1)}
function Suggestion(){a='2nd(Suggestion)DC8+'+characters[targeted].spellAbility+'+pro vsWis 30ft conce,8hrs',b='0d0+0',c='2 reasonable suggestion phrases triggered by events spell ends if you or allies harm',dmgDice='0d0+0',getAction(t1)}
function SummonAberration(){a='4th(Summon Aberration)1act,conce,summon Beholderkin, Slaad, or Star Spawn),friendly,stats=your lvl',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SummonBeast(){a='2nd(Summon Beast)1act,conce,Summon 1 bestial spirit (air, land, or water), friendly,stats=your lvl',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SummonCelestial(){a='5th(Summon Celestial)1act,conce,Summon 1 celestial spirit (avenger or defender), friendly (stat block/your lvl).',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SummonConstruct(){a='4th(Summon Construct)1act,conce,Summon 1 spirit of a construct (clay, metal, or stone), friendly (stat block/your lvl).',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SummonElemental(){a='4th(Summon Elemental)1act,conce,Summon 1 elemental spirit (air, earth, fire, or water), friendly (stat block/your lvl).',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SummonFey(){a='3rd(Summon Fey)1act,90ft, conce,1hr',b='0d0+0',c='1 Fey Spirit ally is summoned. See Tasha page 112',dmgDice='0d0+0',getAction(t1)}
function SummonFey(){a='3rd(Summon Fey)1act,conce,Summon 1 fey spirit (fuming, mirthful, or tricksy), friendly (stat block/your lvl).',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SummonFiend(){a='6th(Summon Fiend)1act,conce,Summon 1 fiendish spirit (demon, devil, or yugoloth), friendly (stat block/your lvl).',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SummonGreaterDemon(){a='4th(Summon Greater Demon)1act,conce,Summon 1 demon of CR 5, friendly (CR +1/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function SummonLesserDemons(){a='3rd(Summon Lesser Demons)1act,conce,Summon 2 demons of CR 1 to 8 demons of CR 1/4, unfriendly (nbr of creatures/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function SummonShadowspawn(){a='3rd(Summon Shadowspawn)1act,conce,Summon 1 shadowy spirit (fury, despair, or fear), friendly (stat block/your lvl).',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SummonUndead(){a='3rd(Summon Undead)1act,conce,Summon 1 undead spirit (ghostly, putrid, or skeletal), friendly (stat block/your lvl)',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Sunbeam(){a='6th(Sunbeam)60ft-l 5ft-w all 6d8 radius dmg, 1 rnd blind; save halves and not blinded; for new line)DC8+'+characters[targeted].spellAbility+'+pro vsCon 60ft-line conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Sunburst(){a='8th(Sunburst)60ft-radi all 12d6 radius dmg, 10/10turns blind; save halves and not blinded; save ateoet)DC8+'+characters[targeted].spellAbility+'+pro vsCon 150ft',b='0d0+0',c='radia',dmgDice='12d6+0',getAction(t1)}
function SwiftQuiver(){a='5th(Swift Quiver)Quiver gives nonmagical ammo; bns act to make 2 atks with weapon that uses ammo from that quiver bonus touch conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SwiftStepDraught(){a='(Swift Step Draught)1act,30ft 5ft rad',b='0d0+0',c='speed+20ft 1min, recharge 1min',dmgDice='0d0+0',getAction(t1)}
function Sword(){a="(Sword)+str",b='1d20+0',c='slashing+str',dmgDice='1d12+0',getAction(t1)}
function SwordBurst(){a='Cantrip(Sword Burst)1act,tgts 5ft-radi,DC8+'+characters[targeted].spellAbility+'+pro vsDex',b='0d0+0',c='force',dmgDice='1d6+0',getAction(t1)}
function SwordLong(){a="(SwordLong)+str",b='1d20+1',c='slashing+str',dmgDice='1d10+0',getAction(t1)}
function SwordRapier(){a="(SwordRapier)+dex",b='1d20+1',c='piercing+dex',dmgDice='1d6+0',getAction(t1)}
function SwordShort(){a="(SwordShort)+str",b='1d20+2',c='piercing+str',dmgDice='1d8+0',getAction(t1)}
function Symbol(){a='7th(Symbol)Inscribe a glyph to activate for chosen effect on set trigger;(1000gp cons.)10/10turns touch Till triggered',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function SynapticStatic(){a='5th(Synaptic Static)1act,tgts 20ft-radi must succeed on anDC8+'+characters[targeted].spellAbility+'+pro vsInt or take 8d6 psychic dmg.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function TanglefootBag(){a='(Tanglefoot Bag)1act,30ft 10ft rad',b='0d0+0',c='difficult terrain speed/2 1min, recharge 1min',dmgDice='0d0+0',getAction(t1)}
function TashasCausticBrew(){a='1st(Tasha s Caustic Brew)1act,conce,tgts 30ft-l 5ft-w line,DC8+'+characters[targeted].spellAbility+'+pro vsDex',b='0d0+0',c='acid, each turn +2d4/lvl',dmgDice='2d4+0',getAction(t1)}
function TashasHideousLaughter(){a='1st(Tasha s Hideous Laughter)DC8+'+characters[targeted].spellAbility+'+pro vsWis',b='0d0+0',c='prone laughing vsWis each eointurn or after each dmg',dmgDice='0d0+0',getAction(t1)}
function TashasMindWhip(){a='2nd(Tasha s Mind Whip) 1act,tgt+1/lvl must succeed on a DC8+'+characters[targeted].spellAbility+'+pro vsInt',b='0d0+0',c='psychic,move or act next turn',dmgDice='1d6+0',getAction(t1)}
function TashasOtherworldlyGuise(){a='6th(Tasha s Otherworldly Guise)bonus,conce',b='0d0+0',c='immune to fire,poison,or radiant,necrotic dmg,fly40ft,ac+2,wpns are magical,2 atks',dmgDice='1d6+0',getAction(t1)}
function Taunt(){a='(Taunt)2/2 per/long rest, 1tgt, 30ft, DC8+cha+pro vsCha',b='0d0+0',c='all rolls @DisAdv till start of bard s next turn',dmgDice='0d0+0',getAction(t1)}
function Telekinesis(){a='5th(Telekinesis)Move Huge Creature or 1000 lb object 30ft as 1 a; ability check with)DC8+'+characters[targeted].spellAbility+'+pro vsStr; 60ft conce,10min',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Telepathy(){a='8th Telepathy)1 willing familiar tgts Int greater than 0 and you telepathic link; share words, sensory information if on same plane Unlimited 24hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Teleport(){a='7th(Teleport)You, 8 willing tgts, or an object teleport to a place you know, have seen, or can describe; 10ft',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function TeleportationCircle(){a='5th(Teleportation Circle)Create a circle to teleport to another teleportation circle on same plane;(50gp cons.)10/10turns 10ft 1 rnd',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function TempleOfTheGods(){a='7th(Temple of the Gods)1hr, Let erupt a temple dedicated to a god on a 120 x 120ft area for 1 day.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function TensersTransformation(){a='6th(Tenser s Transformation)1act,conce,The caster gains 50 hp,@Adv to atk rolls, an xtra 2d12 force damage, martial proficiencies and two atks per round.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function TensorsFloatingDisk(){a='1st(Tenser s Floating Disk)ritual 30ft 1hr',b='0d0+0',c='3ft diame 1in thick floats 3ft above holds 500lbs follows within 20ft of you',dmgDice='0d0+0',getAction(t1)}
function Thaumaturgy(){a='Cantrip(Thaumaturgy)30ft up to 10/10turns cast 3 times for 3 of the effects below*voice x 3 loud*or flames brighten dim change color*or harmless ground tremors*or Create sound*or unlocked door window open or shut',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function ThornWhip(){a='Cantrip(Thorn Whip)atk+'+characters[targeted].spellAbility+'+pro 30ft m',b='1d20+0',c='pierc+1d6@5, 11, 17 and tgt pulled 10ft to you',dmgDice='1d6+0',getAction(t1)}
function ThunderCannon(){a='(Thunder Cannon)+dex+pro 2h, 150/500ft, 1act',b='1d20+0',c='pierc+dex',dmgDice='2d6+0',getAction(t1)}
function ThunderClap(){a='Cantrip(Thunderclap)1act,tgts within 5ft vsCon or take 1d6 thunder dmg',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function ThunderMonger(){a='(Thunder Monger)+dex+pro 2h, 150/500ft, 1act',b='1d20+0',c='thunder and pierc+dex 4d6@5th, 5d6@11th, 6d6@13th, 7d6@15th, 8d6@17th, 9d6@19th',dmgDice='3d6+0',getAction(t1)}
function ThunderStep(){a='1st(Thunder Step)1act,The caster teleports and creatures within 10ft vsCon or take 3d10 thunder dmg.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Thunderclap(){a='Cantrip(Thunderclap)1act 5ft S instant DC8+'+characters[targeted].spellAbility+'+pro vsCon 100ft radi',b='0d0+0',c='thunder+1d6@5, 11, 17th lvl',dmgDice='1d6+0',getAction(t1)}
function ThunderousSmite(){a='1st(Thunderous Smite)audible 300ft bonus conce,1min',b='0d0+0',c='weapon+xtra thunder and pushed 10ft',dmgDice='2d6+0',getAction(t1)}
function Thunderstone(){a="(Thunderstone)DC8+"+characters[targeted].spellAbility+"+pro vsCon, 1act,30ft 10ft rad", b='0d0+0',c='pushed 10ft, knocked prone',dmgDice='0d0+0',getAction(t1)}
function Thunderwave(){a='1st(Thunderwave)DC8+'+characters[targeted].spellAbility+'+pro vsCon 1/2dmg,15ft-cube',b='0d0+0',c='thunder+1d8/slot and tgts pushed 10ft',dmgDice='2d8+0',getAction(t1)}
function TidalWave(){a='3rd(Tidal Wave)1act,tgts n 30 x 10 x 10ft area must succeed onDC8+'+characters[targeted].spellAbility+'+pro vsDex or take 4d8 bludg dmg and be knocked prone.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function TimeStop(){a='9th(Time Stop)You ntly take 1d4+1 turns; if affecting other tgts or worn or carried object the spell ends Self P 283',dmgDice='0d0+0',getAction(t1)}
function TinyServant(){a='3rd(Tiny Servant)1min, Transform one Tiny object into a tgt with arms and legs under the caster control (+2 objects/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function TollOfTheDead(){a='Cantrip(Toll the Dead)necrom, 1act,The tgt vsWis or take 1d8 or 1d12 necrotic dmg',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Tongues(){a='3rd(Tongues)touch 1hr',b='0d0+0',c='you or ally knows any spoken language for the duration',dmgDice='0d0+0',getAction(t1)}
function TransmuteRock(){a='5th(Transmute Rock)40 cuft stone to mud or mud to stone',b='0d0+0',c='restrained',dmgDice='0d0+0',getAction(t1)}
function TransportViaPlants(){a='6th(Transport via Plants)For duration all can transport from a Large plant to a plant on the same plane that you have touched 10ft 10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function TreeStride(){a='5th(Tree Stride)You can teleport 1/rnd through a tree to another tree of the same kind within 500ft self conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function TreeStride(){a='5th(Tree Stride)You can teleport 1/rnd through a tree to another tree of the same kind within 500ft self conce,10/10turns',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Tremors(){a='(Tremors)1act,30ft-radi, chosen tgts, DC8+'+characters[targeted].spellAbility+'+pro vsDex,',b='0d0+0',c='knocked prone and can not rise until teo '+characters[x].name+' s nt',dmgDice='0d0+0',getAction(t1)}
function Trident(){a='Trident Martial Melee 5 gp 4 lbs Range (20/60), Thrown, Versatile(1d8) SRD5',b='1d20+0',c='Piercing',dmgDice='1d6+0',getAction(t1)}
function TruePolymorph(){a='9th(True Polymorph)1tgt/obj more than 0 hp save or transformed into another tgts/obj with equal CR or lower;)DC8+'+characters[targeted].spellAbility+'+pro vsWis 30ft conce,1hr P 283',dmgDice='0d0+0',getAction(t1)}
function TrueResurrection(){a='9th(True Resurrection)Resurrects a Creature, that has died in last 200 years, with new body;(25000gp cons.)1hr touch',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function TrueSeeing(){a='6th(True Seeing 1 ally gains truesight 120ft; see through illusions, hidden doors, ethereal plane(25gp cons.)Div touch, M† 1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function TrueStrike(){a='Cantrip(True Strike)30ft conce,10/10turns your next turn 1st attac@Adv',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function Tsunami(){a='8th(Tsunami)300ft l 50ft w 300ft h wall of water moves away @50ft/rnd; 6d10 bludg dmg;)DC8+'+characters[targeted].spellAbility+'+pro vsStr 1/2dmg,10/10turns sight conce,6rnds',b='0d0+0',c='bludg',dmgDice='6d10+0',getAction(t1)}
function UnseenServant(){a='1st(Unseen Servant)ritual 60ft 1hr',b='0d0+0',c='servant AC10, 1HP, Str2 bonus command fetch, clean, mend, fold, light, serve, pour telepathically',dmgDice='0d0+0',getAction(t1)}
function VampiricTouch(){a='3rd(Vampiric Touch)self conce,10/10turns melee atk+'+characters[targeted].spellAbility+'+pro',b='1d20+0',c='heal half and do necro+1d6/slot',dmgDice='3d6+0',getAction(t1)}
function ViciousMockery(){a='Cantrip(Vicious Mockery 1tgt)DC8+'+characters[targeted].spellAbility+'+pro vsWis 60ft',b='0d0+0',c='pysch+1d4@5, 11, 17th lvl next roll @DisAdv',dmgDice='1d4+0',getAction(t1)}
function VitriolicSphere(){a='4th(Vitriolic Sphere)1act,tgts within 20ftDC8+'+characters[targeted].spellAbility+'+pro vsDex or take 10d4 acid dmg (damage/lvl) then 5d4 acid dmg on its turn.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function WallOfFire(){a='4th(Wall of Fire)60ft-l 1ft-w 1ft-h or 10ft-radi all in and 10ft on 1 side)DC8+'+characters[targeted].spellAbility+'+pro vsDex halves; 120ft conce,10/10turns',b='0d0+0',c='fire+1d8/slot',dmgDice='5d8+0',getAction(t1)}
function WallOfForce(){a='5th(Wall of Force)10 10×10ft panels or 10ft-radi(hemi)sphere invisible, impenetrable wall, can flo@in air conce,10min',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function WallOfIce(){a='6th(Wall of Ice)10 10×10ft panels 1ft thick; @casting can cut through; DC8+'+characters[targeted].spellAbility+'+pro vsDex 120ft conce,10min',b='0d0+0',c='tgts hit by wall save 1/2dmg,cold dmg',dmgDice='10d6+0',getAction(t1)}
function WallOfLight(){a='5th(Wall of Light)1act,conce,Create a 60ft-l, 10ft-h, 5ft thick wall of light that can deal 4d8 radiant dmg to one target',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function WallOfSand(){a='3rd(Wall of Sand)1act,conce,Create a 30ft-l, 10ft-h, 10ft thick sand wall that blocks line of sight (blinded) but not movement.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function WallOfStone(){a='5th(Wall of Stone)10 10×10ft panels 6 thick wall connected with existing stone; half thickness, double surface; 120ft conce,10min',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function WallOfThorns(){a='6th(Wall of Thorns)60×2×20ft(l×w×h)or 10ft-radi all)DC8+'+characters[targeted].spellAbility+'+pro vsDex halves; 1/4 move 120ft conce,10min',b='0d0+0',c='pierc+1d8/slot',dmgDice='7d8+0',getAction(t1)}
function WallOfWater(){a='3rd(Wall of Water)1act,conce,Create a 30ft-l, 10ft-h, 1ft thick wall of water that gives disadvantage on ranged atks and halved fire dmg.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function WarPick(){a='War Pick Martial Melee 5 gp 2 lbs SRD5',b='1d20+0',c='Piercing',dmgDice='1d8+0',getAction(t1)}
function Ward(){a='(Ward)1 ally, 60ft',b='0d0+0',c='resistance to bludg, pierc, slash, non-magicalwpns uteo '+characters[x].name+' s nt',dmgDice='0d0+0',getAction(t1)}
function WardingBond(){a='2nd(Warding Bond)1tgt+1 AC, +1 saves, resistance all dmg; if it takes dmg you take same dmg; ends if>60ft away touch 1hr',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function WardingWind(){a='2nd(Warding Wind)1act,conce,Create strong wind (20 mi/h) in a 10ft-radi (deafen, extinguish flames, hedge out gas, difficult terrain, etc).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function Warhammer(){a='Warhammer Martial Melee 15 gp 2 lbs Versatile(1d10) SRD5',b='1d20+0',c='Bludgeoning',dmgDice='1d8+0',getAction(t1)}
function WaterBreathing(){a='3rd(Water Breathing)ritual 30ft 24hrs you and 9 allies breathe on land and underwater',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function WaterWalk(){a='3rd(Water Walk)10 willing tgts can move across any liquid for the duration; rise to surface if underwater 30ft 1hr',b='0d0+0',c='you or ally knows any spoken language for the duration',dmgDice='0d0+0',getAction(t1)}
function WaterySphere(){a='4th(Watery Sphere)10ft-radi< Huge tgts)DC8+'+characters[targeted].spellAbility+'+pro vsStr each rnd move sphere 30 to 90ft conce,10/10turns',b='0d0+0',c='restrained, ejected on save',dmgDice='0d0+0',getAction(t1)}
function Web(){a='2nd(Web)DC8+'+characters[targeted].spellAbility+'+pro vsDex,60ft conce,1hr,20ft-cube',b='0d0+0',c='difficult terrain,restrained,vsStr to escape,vulnerable to fire,10/10turns',dmgDice='2d4+0',getAction(t1)}
function Weird(){a='9th(Weird)30ft-radi all save or frightened for duration; xtra save @end of each round or 4d10 psych dmg DC8+'+characters[targeted].spellAbility+'+pro vsWis 120ft conce,10/10turns',b='0d0+0',c='psychic',dmgDice='4d10+0',getAction(t1)}
function Whip(){a='Whip Martial Melee 2 gp 3 lbs Finesse, Reach SRD5',b='1d20+0',c='Slashing',dmgDice='1d4+0',getAction(t1)}
function Whirlwind(){a='7th(Whirlwind)10ft-radi 30ft-h 10d6 bludg dmg; save halves; restrains; move 30ft',b='0d0+0',c='bludg',dmgDice='10d6+0',getAction(t1)}
function WindWalk(){a='6th(Wind Walk)You+10 willing tgts assume gaseous form with fly 300ft resist nonmagical dmg 30ft 8hrs',b='0d0+0',c='pierc+1d8/slot',dmgDice='7d8+0',getAction(t1)}
function Wish(){a='9th(Wish)Duplicate any 8th lvl or lower spell, Create objects, heal, resurrect, alter time, etc.; Self P 288',dmgDice='0d0+0',getAction(t1)}
function WitchBolt(){a='1st(Witch Bolt)Spell atk+'+characters[targeted].spellAbility+'+pro may each turn use to deal auto 1d12 lightning else spell ends 30ft conce,10/10turns',b='1d20+0',c='lightning+1d12/slot',dmgDice='1d12+0',getAction(t1)}
function WordOfRadiance(){a='Cantrip(Word of Radiance)1act,tgts 5ft-radi vsCon or take 1d6 radiant dmg (/lvl).',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function WordOfRecall(){a='6th(Word of Recall)You+5 ally teleport to sanctuary of your deity, designated as such by casting this spell there 5ft',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function WrathOfNature(){a='5th(Wrath of Nature)1act,conce,Animate trees, rocks, and grasses in a 60 x 60 x 60ft-cube.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function WrathfulSmite(){a='1st(Wrathful Smite)DC8+'+characters[targeted].spellAbility+'+pro vsWis or frightened bonus conce,10/10turns',b='0d0+0',c='weapon+xtra psych and frightened',dmgDice='1d6+0',getAction(t1)}
function ZephyrStrike(){a='1st(Zephyr Strike)1act bonus,conce,The caster s movement (+30ft) doesn\'t provoque OA and he gets@Adv to one atk roll that deals an xtra 1d8 force.',b='0d0+0',c='',dmgDice='1d6+0',getAction(t1)}
function ZoneOfTruth(){a='2nd(Zone of Truth 15ft-radi all in or enter save or unable to lie; you aware if saved or not; tgts aware it cannot lie Cha 60ft 10min',b='0d0+0',c='',dmgDice='0d0+0',getAction(t1)}
function piercRound(){a='(pierc Round)DC8+'+characters[targeted].spellAbility+'+pro vsDex for half, 2h, 1act,5x30ft-line',b='0d0+0',c='lightning+dex, 6d6@19th',dmgDice='4d6+0',getAction(t1)}

function AbiDalzimsHorridWilting(){a='AbiDalzims Horrid Wilting lvl 8 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='12d8+0',b='1d20+0',c='Necrotic',getAction(t1)};
function AbsorbElements(){a='Absorb Elements lvl 1 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d6+0',b='1d20+0',c='Variable',getAction(t1)};
function AcidSplash(){a='Acid Splash lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='1d6+0',b='1d20+0',c='Acid',getAction(t1)};
function AganazzarsScorcher(){a='Aganazzars Scorcher lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='3d8+0',b='1d20+0',c='Fire',getAction(t1)};
function ArmorOfAgathys(){a='Armor of Agathys lvl 1 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='5+0',b='1d20+0',c='Cold',getAction(t1)};
function ArmsOfHadar(){a='Arms of Hadar lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsStrength',dmgDice='2d6+0',b='1d20+0',c='Necrotic',getAction(t1)};
function AshardalonsStride(){a='Ashardalons Stride lvl 3 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d6+0',b='1d20+0',c='Fire',getAction(t1)};
function BanishingSmite(){a='Banishing Smite lvl 5 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='5d10+0',b='1d20+0',c='Force',getAction(t1)};
function BigbysHand(){a='Bigbys Hand lvl 5 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='4d8+0',b='1d20+0',c='Bludgeoning, Force',getAction(t1)};
function BladeBarrier(){a='Blade Barrier lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='6d10+0',b='1d20+0',c='Slashing',getAction(t1)};
function BladeOfDisaster(){a='Blade of Disaster lvl 9 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='4d12+0',b='1d20+0',c='Force',getAction(t1)};
function Blight(){a='Blight lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='8d8+0',b='1d20+0',c='Necrotic',getAction(t1)};
function BlindingSmite(){a='Blinding Smite lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='3d8+0',b='1d20+0',c='Radiant',getAction(t1)};
function BonesOftheEarth(){a='Bones of the Earth lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='6d6+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function BoomingBlade(){a='Booming Blade lvl 0 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d8+0',b='1d20+0',c='Thunder',getAction(t1)};
function BrandingSmite(){a='Branding Smite lvl 2 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='2d6+0',b='1d20+0',c='Radiant',getAction(t1)};
function BurningHands(){a='Burning Hands lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='3d6+0',b='1d20+0',c='Fire',getAction(t1)};
function CallLightning(){a='Call Lightning lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='3d10+0',b='1d20+0',c='Lightning',getAction(t1)};
function Catapult(){a='Catapult lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='3d8+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function ChainLightning(){a='Chain Lightning lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='10d8+0',b='1d20+0',c='Lightning',getAction(t1)};
function ChaosBolt(){a='Chaos Bolt lvl 1 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='2d8+0',b='1d20+0',c='Variable',getAction(t1)};
function ChillTouch(){a='Chill Touch lvl 0 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d8+0',b='1d20+0',c='Necrotic',getAction(t1)};
function ChromaticOrb(){a='Chromatic Orb lvl 1 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='3d8+0',b='1d20+0',c='Variable',getAction(t1)};
function CircleOfDeath(){a='Circle of Death lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='8d6+0',b='1d20+0',c='Necrotic',getAction(t1)};
function CloudOfDaggers(){a='Cloud of Daggers lvl 2 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='4d4+0',b='1d20+0',c='Slashing',getAction(t1)};
function Cloudkill(){a='Cloudkill lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='5d8+0',b='1d20+0',c='Poison',getAction(t1)};
function ConeOfCold(){a='Cone of Cold lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='8d8+0',b='1d20+0',c='Cold',getAction(t1)};
function ControlWater(){a='Control Water lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsStrength',dmgDice='2d8+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function CordonOfArrows(){a='Cordon of Arrows lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='1d6+0',b='1d20+0',c='Piercing',getAction(t1)};
function CreateBonfire(){a='Create Bonfire lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='1d8+0',b='1d20+0',c='Fire',getAction(t1)};
function CrownOfStars(){a='Crown of Stars lvl 7 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='4d12+0',b='1d20+0',c='Radiant',getAction(t1)};
function CrusadersMantle(){a='Crusaders Mantle lvl 3 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d4+0',b='1d20+0',c='Radiant',getAction(t1)};
function DarkStar(){a='Dark Star lvl 8 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='8d10+0',b='1d20+0',c='Force',getAction(t1)};
function Dawn(){a='Dawn lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vstitution',dmgDice='4d10+0',b='1d20+0',c='Radiant',getAction(t1)};
function DelayedBlastFireball(){a='Delayed Blast Fireball lvl 7 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='12d6+0',b='1d20+0',c='Fire',getAction(t1)};
function DestructiveWave(){a='Destructive Wave lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='5d6+0',b='1d20+0',c='Thunder, Variable',getAction(t1)};
function Disintegrate(){a='Disintegrate lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='10d6+40+0',b='1d20+0',c='Force',getAction(t1)};
function DissonantWhispers(){a='Dissonant Whispers lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsWisdom',dmgDice='3d6+0',b='1d20+0',c='Psychic',getAction(t1)};
function DivineFavor(){a='Divine Favor lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsCharisma',dmgDice='1d4+0',b='1d20+0',c='Radiant',getAction(t1)};
function DraconicTransformation(){a='Draconic Transformation lvl 7 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='6d8+0',b='1d20+0',c='Force',getAction(t1)};
function DragonsBreath(){a='Dragons Breath lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='3d6+0',b='1d20+0',c='Variable',getAction(t1)};
function DustDevil(){a='Dust Devil lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsStrength',dmgDice='1d8+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function EarthTremor(){a='Earth Tremor lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='1d6+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function Earthquake(){a='Earthquake lvl 8 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='5d6+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function EldritchBlast(){a='Eldritch Blast lvl 0 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d10+0',b='1d20+0',c='Force',getAction(t1)};
function ElementalBane(){a='Elemental Bane lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='2d6+0',b='1d20+0',c='Variable',getAction(t1)};
function ElementalWeapon(){a='Elemental Weapon lvl 3 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d4+0',b='1d20+0',c='Variable',getAction(t1)};
function Enervation(){a='Enervation lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='4d8+0',b='1d20+0',c='Necrotic',getAction(t1)};
function EnsnaringStrike(){a='Ensnaring Strike lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsStrength',dmgDice='1d6+0',b='1d20+0',c='Piercing',getAction(t1)};
function EruptingEarth(){a='Erupting Earth lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='3d12+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function EvardsBlackTentacles(){a='Evards Black Tentacles lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='3d6+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function Feeblemind(){a='Feeblemind lvl 8 DC8+'+characters[targeted].spellAbility+'+pro vsIntelligence',dmgDice='4d6+0',b='1d20+0',c='Psychic',getAction(t1)};
function FingerOfDeath(){a='Finger of Death lvl 7 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='7d8+30+0',b='1d20+0',c='Necrotic',getAction(t1)};
function FireBolt(){a='Fire Bolt lvl 0 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d10+0',b='1d20+0',c='Fire',getAction(t1)};
function FireShield(){a='Fire Shield lvl 4 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='2d8+0',b='1d20+0',c='Variable',getAction(t1)};
function FireStorm(){a='Fire Storm lvl 7 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='7d10+0',b='1d20+0',c='Fire',getAction(t1)};
function Fireball(){a='Fireball lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='8d6+0',b='1d20+0',c='Fire',getAction(t1)};
function FlameArrows(){a='Flame Arrows lvl 3 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d6+0',b='1d20+0',c='Fire',getAction(t1)};
function FlameBlade(){a='Flame Blade lvl 2 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='3d6+0',b='1d20+0',c='Fire',getAction(t1)};
function FlameStrike(){a='Flame Strike lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='4d6+4d6+0',b='1d20+0',c='Fire, Radiant',getAction(t1)};
function FlamingSphere(){a='Flaming Sphere lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='2d6+0',b='1d20+0',c='Fire',getAction(t1)};
function Forbiddance(){a='Forbiddance lvl 6 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='5d10+0',b='1d20+0',c='Variable',getAction(t1)};
function FrostFingers(){a='Frost Fingers lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='2d8+0',b='1d20+0',c='Cold',getAction(t1)};
function Frostbite(){a='Frostbite lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='1d6+0',b='1d20+0',c='Cold',getAction(t1)};
function GlyphOfWarding(){a='Glyph of Warding lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='5d8+0',b='1d20+0',c='Variable',getAction(t1)};
function GravityFissure(){a='Gravity Fissure lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='8d8+0',b='1d20+0',c='Force',getAction(t1)};
function GravitySinkhole(){a='Gravity Sinkhole lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='5d10+0',b='1d20+0',c='Force',getAction(t1)};
function GreenFlameBlade(){a='GreenFlame Blade lvl 0 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d8+0',b='1d20+0',c='Fire',getAction(t1)};
function GuardianOfFaith(){a='Guardian of Faith lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='20+0',b='1d20+0',c='Radiant',getAction(t1)};
function GuidingBolt(){a='Guiding Bolt lvl 1 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='4d6+0',b='1d20+0',c='Radiant',getAction(t1)};
function HailOfThorns(){a='Hail of Thorns lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='1d10+0',b='1d20+0',c='Piercing',getAction(t1)};
function Harm(){a='Harm lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vstitution',dmgDice='14d6+0',b='1d20+0',c='Necrotic',getAction(t1)};
function HeatMetal(){a='Heat Metal lvl 2 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='2d8+0',b='1d20+0',c='Fire',getAction(t1)};
function HellishRebuke(){a='Hellish Rebuke lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='3d10+0',b='1d20+0',c='Fire',getAction(t1)};
function Hex(){a='Hexspell DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d6+0',b='1d20+0',c='Necrotic level 1',getAction(t1)};
function HolyWeapon(){a='Holy Weapon lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='2d8+0',b='1d20+0',c='Radiant',getAction(t1)};
function HungerOfHadar(){a='Hunger of Hadar lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='2d6+0',b='1d20+0',c='Acid, Cold',getAction(t1)};
function HuntersMark(){a='Hunters Mark lvl 1 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d6+0',b='1d20+0',c='Variable',getAction(t1)};
function IceKnife(){a='Ice Knife lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='1d10+0',b='1d20+0',c='Cold, Piercing',getAction(t1)};
function IceStorm(){a='Ice Storm lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='2d8+4d6+0',b='1d20+0',c='Bludgeoning, Cold',getAction(t1)};
function IllusoryDragon(){a='Illusory Dragon lvl 8 DC8+'+characters[targeted].spellAbility+'+pro vsWisdom',dmgDice='7d6+0',b='1d20+0',c='Variable',getAction(t1)};
function Immolation(){a='Immolation lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='8d6+0',b='1d20+0',c='Fire',getAction(t1)};
function IncendiaryCloud(){a='Incendiary Cloud lvl 8 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='10d8+0',b='1d20+0',c='Fire',getAction(t1)};
function Infestation(){a='Infestation lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='1d6+0',b='1d20+0',c='Poison',getAction(t1)};
function InflictWounds(){a='Inflict Wounds lvl 1 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='3d10+0',b='1d20+0',c='Necrotic',getAction(t1)};
function InsectPlague(){a='Insect Plague lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='4d10+0',b='1d20+0',c='Piercing',getAction(t1)};
function InvestitureOfFlame(){a='Investiture of Flame lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='1d10+0',b='1d20+0',c='Fire',getAction(t1)};
function InvestitureOfIce(){a='Investiture of Ice lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='4d6+0',b='1d20+0',c='Cold',getAction(t1)};
function InvestitureOfWind(){a='Investiture of Wind lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='2d10+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function JimsMagicMissile(){a='Jims Magic Missile lvl 1 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='2d4+0',b='1d20+0',c='Force',getAction(t1)};
function LifeTransference(){a='Life Transference lvl 3 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='4d8+0',b='1d20+0',c='Necrotic',getAction(t1)};
function LightningArrow(){a='Lightning Arrow lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='4d8+0',b='1d20+0',c='Lightning',getAction(t1)};
function LightningBolt(){a='Lightning Bolt lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='8d6+0',b='1d20+0',c='Lightning',getAction(t1)};
function LightningLure(){a='Lightning Lure lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsStrength',dmgDice='1d8+0',b='1d20+0',c='Lightning',getAction(t1)};
function MaddeningDarkness(){a='Maddening Darkness lvl 8 DC8+'+characters[targeted].spellAbility+'+pro vsWisdom',dmgDice='8d8+0',b='1d20+0',c='Psychic',getAction(t1)};
function Maelstrom(){a='Maelstrom lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsStrength',dmgDice='6d6+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function MagicMissile(){a='Magic Missile lvl 1 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d4+1+0',b='1d20+0',c='Force',getAction(t1)};
function MagicStone(){a='Magic Stone lvl 0 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d6+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function MagnifyGravity(){a='Magnify Gravity lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='2d8+0',b='1d20+0',c='Force',getAction(t1)};
function MaximiliansEarthenGrasp(){a='Maximilians Earthen Grasp lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsStrength',dmgDice='2d6+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function MelfsAcidArrow(){a='Melfs Acid Arrow lvl 2 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='4d4+0',b='1d20+0',c='Acid',getAction(t1)};
function MelfsMinuteMeteors(){a='Melfs Minute Meteors lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='2d6+0',b='1d20+0',c='Fire',getAction(t1)};
function MentalPrison(){a='Mental Prison lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsIntelligence',dmgDice='5d10+0',b='1d20+0',c='Psychic',getAction(t1)};
function MeteorSwarm(){a='Meteor Swarm lvl 9 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='20d6+0',b='1d20+0',c='Bludgeoning, Fire',getAction(t1)};
function MindSliver(){a='Mind Sliver lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsIntelligence',dmgDice='1d6+0',b='1d20+0',c='Psychic',getAction(t1)};
function MindSpike(){a='Mind Spike lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsWisdom',dmgDice='3d8+0',b='1d20+0',c='Psychic',getAction(t1)};
function Moonbeam(){a='Moonbeam lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='2d10+0',b='1d20+0',c='Radiant',getAction(t1)};
function MordenkainensFaithfulHound(){a='Mordenkainens Faithful Hound lvl 4 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='4d8+0',b='1d20+0',c='Piercing',getAction(t1)};
function MordenkainensSword(){a='Mordenkainens Sword lvl 7 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='3d10+0',b='1d20+0',c='Force',getAction(t1)};
function NegativeEnergyFlood(){a='Negative Energy Flood lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='5d12+0',b='1d20+0',c='Necrotic',getAction(t1)};
function OtilukesFreezingSphere(){a='Otilukes Freezing Sphere lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='10d6+0',b='1d20+0',c='Cold',getAction(t1)};
function PhantasmalForce(){a='Phantasmal Force lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsIntelligence',dmgDice='1d6+0',b='1d20+0',c='Psychic',getAction(t1)};
function PhantasmalKiller(){a='Phantasmal Killer lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsWisdom',dmgDice='4d10+0',b='1d20+0',c='Psychic',getAction(t1)};
function PoisonSpray(){a='Poison Spray lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='1d12+0',b='1d20+0',c='Poison',getAction(t1)};
function PrimalSavagery(){a='Primal Savagery lvl 0 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d10+0',b='1d20+0',c='Acid',getAction(t1)};
function PrismaticSpray(){a='Prismatic Spray lvl 7 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='10d6+0',b='1d20+0',c='Variable',getAction(t1)};
function PrismaticWall(){a='Prismatic Wall lvl 9 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='10d6+0',b='1d20+0',c='Acid, Cold, Fire, Lightning, Poison',getAction(t1)};
function ProduceFlame(){a='Produce Flame lvl 0 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d8+0',b='1d20+0',c='Fire',getAction(t1)};
function PsychicScream(){a='Psychic Scream lvl 9 DC8+'+characters[targeted].spellAbility+'+pro vsIntelligence',dmgDice='14d6+0',b='1d20+0',c='Psychic',getAction(t1)};
function PulseWave(){a='Pulse Wave lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='6d6+0',b='1d20+0',c='Force',getAction(t1)};
function RaulothimsPsychicLance(){a='Raulothims Psychic Lance lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsIntelligence',dmgDice='7d6+0',b='1d20+0',c='Psychic',getAction(t1)};
function RavenousVoid(){a='Ravenous Void lvl 9 DC8+'+characters[targeted].spellAbility+'+pro vsStrength',dmgDice='5d10+0',b='1d20+0',c='Force',getAction(t1)};
function RayOfFrost(){a='Ray of Frost lvl 0 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d8+0',b='1d20+0',c='Cold',getAction(t1)};
function RayOfSickness(){a='Ray of Sickness lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='2d8+0',b='1d20+0',c='Poison',getAction(t1)};
function RimesBindingIce(){a='Rimes Binding Ice lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='3d8+0',b='1d20+0',c='Cold',getAction(t1)};
function SacredFlame(){a='Sacred Flame lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='1d8+0',b='1d20+0',c='Radiant',getAction(t1)};
function SappingSting(){a='Sapping Sting lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='1d4+0',b='1d20+0',c='Necrotic',getAction(t1)};
function ScorchingRay(){a='Scorching Ray lvl 2 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='2d6+0',b='1d20+0',c='Fire',getAction(t1)};
function SearingSmite(){a='Searing Smite lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='1d6+0',b='1d20+0',c='Fire',getAction(t1)};
function ShadowBlade(){a='Shadow Blade lvl 2 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='2d8+0',b='1d20+0',c='Psychic',getAction(t1)};
function ShadowOfMoil(){a='Shadow of Moil lvl 4 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='2d8+0',b='1d20+0',c='Necrotic',getAction(t1)};
function Shatter(){a='Shatter lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='3d8+0',b='1d20+0',c='Thunder',getAction(t1)};
function Shillelagh(){a='Shillelagh lvl 0 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d8+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function ShockingGrasp(){a='Shocking Grasp lvl 0 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d8+0',b='1d20+0',c='Lightning',getAction(t1)};
function SickeningRadiance(){a='Sickening Radiance lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='4d10+0',b='1d20+0',c='Radiant',getAction(t1)};
function SnillocsSnowballSwarm(){a='Snillocs Snowball Swarm lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='3d6+0',b='1d20+0',c='Cold',getAction(t1)};
function SpiritGuardians(){a='Spirit Guardians lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsWisdom',dmgDice='3d8+0',b='1d20+0',c='Variable',getAction(t1)};
function SpiritShroud(){a='Spirit Shroud lvl 3 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d8+0',b='1d20+0',c='Variable',getAction(t1)};
function SpiritualWeapon(){a='Spiritual Weapon lvl 2 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d8+0',b='1d20+0',c='Force',getAction(t1)};
function StaggeringSmite(){a='Staggering Smite lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsWisdom',dmgDice='4d6+0',b='1d20+0',c='Psychic',getAction(t1)};
function SteelWindStrike(){a='Steel Wind Strike lvl 5 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='6d10+0',b='1d20+0',c='Force',getAction(t1)};
function StormOfVengeance(){a='Storm of Vengeance lvl 9 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='2d6+0',b='1d20+0',c='Acid, Bludgeoning, Cold, Lightning, Thunder',getAction(t1)};
function StormSphere(){a='Storm Sphere lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsStrength',dmgDice='2d6+0',b='1d20+0',c='Bludgeoning, Lightning',getAction(t1)};
function Sunbeam(){a='Sunbeam lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='6d8+0',b='1d20+0',c='Radiant',getAction(t1)};
function Sunburst(){a='Sunburst lvl 8 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='12d6+0',b='1d20+0',c='Radiant',getAction(t1)};
function SwordBurst(){a='Sword Burst lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='1d6+0',b='1d20+0',c='Force',getAction(t1)};
function Symbol(){a='Symbol lvl 7 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='10d10+0',b='1d20+0',c='Necrotic',getAction(t1)};
function SynapticStatic(){a='Synaptic Static lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsIntelligence',dmgDice='8d6+0',b='1d20+0',c='Psychic',getAction(t1)};
function TashasCausticBrew(){a='Tashas Caustic Brew lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='2d4+0',b='1d20+0',c='Acid',getAction(t1)};
function TashasMindWhip(){a='Tashas Mind Whip lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsIntelligence',dmgDice='3d6+0',b='1d20+0',c='Psychic',getAction(t1)};
function ThornWhip(){a='Thorn Whip lvl 0 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d6+0',b='1d20+0',c='Piercing',getAction(t1)};
function ThunderStep(){a='Thunder Step lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='3d10+0',b='1d20+0',c='Thunder',getAction(t1)};
function Thunderclap(){a='Thunderclap lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='1d6+0',b='1d20+0',c='Thunder',getAction(t1)};
function ThunderousSmite(){a='Thunderous Smite lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsStrength',dmgDice='2d6+0',b='1d20+0',c='Thunder',getAction(t1)};
function Thunderwave(){a='Thunderwave lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='2d8+0',b='1d20+0',c='Thunder',getAction(t1)};
function TidalWave(){a='Tidal Wave lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='4d8+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function TimeRavage(){a='Time Ravage lvl 9 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='10d12+0',b='1d20+0',c='Necrotic',getAction(t1)};
function TolltheDead(){a='Toll the Dead lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsWisdom',dmgDice='1d8+0',b='1d20+0',c='Necrotic',getAction(t1)};
function TransmuteRock(){a='Transmute Rock lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='4d8+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function Tsunami(){a='Tsunami lvl 8 DC8+'+characters[targeted].spellAbility+'+pro vsStrength',dmgDice='6d10+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function VampiricTouch(){a='Vampiric Touch lvl 3 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='3d6+0',b='1d20+0',c='Necrotic',getAction(t1)};
function ViciousMockery(){a='Vicious Mockery lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsWisdom',dmgDice='1d4+0',b='1d20+0',c='Psychic',getAction(t1)};
function VitriolicSphere(){a='Vitriolic Sphere lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='10d4+0',b='1d20+0',c='Acid',getAction(t1)};
function WallOfFire(){a='Wall of Fire lvl 4 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='5d8+0',b='1d20+0',c='Fire',getAction(t1)};
function WallOfIce(){a='Wall of Ice lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='10d6+0',b='1d20+0',c='Cold',getAction(t1)};
function WallOfLight(){a='Wall of Light lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='4d8+0',b='1d20+0',c='Radiant',getAction(t1)};
function WallOfThorns(){a='Wall of Thorns lvl 6 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='7d8+0',b='1d20+0',c='Piercing, Slashing',getAction(t1)};
function Weird(){a='Weird DC8+'+characters[targeted].spellAbility+'+pro vsWisdom lvl 9',dmgDice='4d10+0',b='1d20+0',c='Psychic',getAction(t1)};
function Whirlwind(){a='Whirlwind lvl 7 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='10d6+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function WindWall(){a='Wind Wall lvl 3 DC8+'+characters[targeted].spellAbility+'+pro vsStrength',dmgDice='3d8+0',b='1d20+0',c='Bludgeoning',getAction(t1)};
function WitchBolt(){a='Witch Bolt lvl 1 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d12+0',b='1d20+0',c='Lightning',getAction(t1)};
function WitherandBloom(){a='Wither and Bloom lvl 2 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='2d6+0',b='1d20+0',c='Necrotic',getAction(t1)};
function WordOfRadiance(){a='Word of Radiance lvl 0 DC8+'+characters[targeted].spellAbility+'+pro vsConstitution',dmgDice='1d6+0',b='1d20+0',c='Radiant',getAction(t1)};
function WrathOfNature(){a='Wrath of Nature lvl 5 DC8+'+characters[targeted].spellAbility+'+pro vsDexterity',dmgDice='4d6+0',b='1d20+0',c='Bludgeoning, Slashing',getAction(t1)};
function WrathfulSmite(){a='Wrathful Smite lvl 1 DC8+'+characters[targeted].spellAbility+'+pro vsWisdom',dmgDice='1d6+0',b='1d20+0',c='Psychic',getAction(t1)};
function ZephyrStrike(){a='Zephyr Strike lvl 1 DC8+'+characters[targeted].spellAbility+'+pro',dmgDice='1d8+0',b='1d20+0',c='Force',getAction(t1)};

function getAction(){characters[targeted].setRollName1(a),characters[targeted].setRoll1(b),characters[targeted].setRollName2(c),characters[targeted].setRoll2(dmgDice),addRollPrompt(targeted)}

s1="<input onClick='",s2="()' type='button' value='",s3="'/>"
s4=document.write.bind(document)

s4("<table><tr><td>Target the piece first to receive these weapons or spells.</td></tr><tr><td>")
s4(s1+'Atlatl'+s2+'Atlatl'+s3)
s4(s1+'Battleaxe'+s2+'Battleaxe'+s3)
s4(s1+'Greataxe'+s2+'Greataxe'+s3)
s4(s1+'Handaxe'+s2+'Handaxe'+s3)
s4(s1+'Blowgun'+s2+'Blowgun'+s3)
s4(s1+'Bola'+s2+'Bola'+s3)
s4(s1+'Longbow'+s2+'Longbow'+s3)
s4(s1+'Shortbow'+s2+'Shortbow'+s3)
s4(s1+'BrokenLongsword'+s2+'Broken Longsword'+s3)
s4(s1+'Cestus'+s2+'Cestus'+s3)
s4(s1+'Chatkcha'+s2+'Chatkcha'+s3)
s4(s1+'Club'+s2+'Club'+s3)
s4(s1+'Greatclub'+s2+'Greatclub'+s3)
s4(s1+'HandCrossbow'+s2+'Hand Crossbow'+s3)
s4(s1+'HeavyCrossbow'+s2+'Heavy Crossbow'+s3)
s4(s1+'LightCrossbow'+s2+'Light Crossbow'+s3)
s4(s1+'LightRepeatingCrossbow'+s2+'Light Repeating Crossbow'+s3)
s4(s1+'Dagger'+s2+'Dagger'+s3)
s4(s1+'Dart'+s2+'Dart'+s3)
s4(s1+'Demilance'+s2+'Demilance'+s3)
s4(s1+'DireFlail'+s2+'Dire Flail'+s3)
s4(s1+'Flail'+s2+'Flail'+s3)
s4(s1+'Glaive'+s2+'Glaive'+s3)
s4(s1+'Greatstaff'+s2+'Greatstaff'+s3)
s4(s1+'Gythka'+s2+'Gythka'+s3)
s4(s1+'Halberd'+s2+'Halberd'+s3)
s4(s1+'LightHammer'+s2+'Light Hammer'+s3)
s4(s1+'Maul'+s2+'Maul'+s3)
s4(s1+'Warhammer'+s2+'Warhammer'+s3)
s4(s1+'Handwraps'+s2+'Handwraps'+s3)
s4(s1+'Harpoon'+s2+'Harpoon'+s3)
s4(s1+'HiddenBlade'+s2+'Hidden Blade'+s3)
s4(s1+'Javelin'+s2+'Javelin'+s3)
s4(s1+'Kasa'+s2+'Kasa'+s3)
s4(s1+'Kopis'+s2+'Kopis'+s3)
s4(s1+'Kusarigama'+s2+'Kusarigama'+s3)
s4(s1+'Lance'+s2+'Lance'+s3)
s4(s1+'Mace'+s2+'Mace'+s3)
s4(s1+'Mancatcher'+s2+'Mancatcher'+s3)
s4(s1+'Morningstar'+s2+'Morningstar'+s3)
s4(s1+'Net'+s2+'Net'+s3)
s4(s1+'Pike'+s2+'Pike'+s3)
s4(s1+'Quarterstaff'+s2+'Quarterstaff'+s3)
s4(s1+'Double-BladedScimitar'+s2+'Double-Bladed Scimitar'+s3)
s4(s1+'Shuriken'+s2+'Shuriken'+s3)
s4(s1+'Sickle'+s2+'Sickle'+s3)
s4(s1+'Sling'+s2+'Sling'+s3)
s4(s1+'Spear'+s2+'Spear'+s3)
s4(s1+'HookedShortspear'+s2+'Hooked Shortspear'+s3)
s4(s1+'Longspear'+s2+'Longspear'+s3)
s4(s1+'Greatsword'+s2+'Greatsword'+s3)
s4(s1+'Longsword'+s2+'Longsword'+s3)
s4(s1+'Rapier'+s2+'Rapier'+s3)
s4(s1+'Saber'+s2+'Saber'+s3)
s4(s1+'Scimitar'+s2+'Scimitar'+s3)
s4(s1+'Shortsword'+s2+'Shortsword'+s3)
s4(s1+'Trident'+s2+'Trident'+s3)
s4(s1+'WarPick'+s2+'War Pick'+s3)
s4(s1+'Whip'+s2+'Whip'+s3)
s4(s1+'CatONineTails'+s2+'CatONine-Tails'+s3)
s4(s1+'AbiDalzimsHorridWilting'+s2+'AbiDalzimsHorridWilting'+s3)
s4(s1+'AbsorbElements'+s2+'AbsorbElements'+s3)
s4(s1+'AcidSplash'+s2+'AcidSplash'+s3)
s4(s1+'AganazzarsScorcher'+s2+'AganazzarsScorcher'+s3)
s4(s1+'ArmorOfAgathys'+s2+'ArmorOfAgathys'+s3)
s4(s1+'ArmsOfHadar'+s2+'ArmsOfHadar'+s3)
s4(s1+'AshardalonsStride'+s2+'AshardalonsStride'+s3)
s4(s1+'BanishingSmite'+s2+'BanishingSmite'+s3)
s4(s1+'BigbysHand'+s2+'BigbysHand'+s3)
s4(s1+'BladeBarrier'+s2+'BladeBarrier'+s3)
s4(s1+'BladeOfDisaster'+s2+'BladeOfDisaster'+s3)
s4(s1+'Blight'+s2+'Blight'+s3)
s4(s1+'BlindingSmite'+s2+'BlindingSmite'+s3)
s4(s1+'BonesOftheEarth'+s2+'BonesOftheEarth'+s3)
s4(s1+'BoomingBlade'+s2+'BoomingBlade'+s3)
s4(s1+'BrandingSmite'+s2+'BrandingSmite'+s3)
s4(s1+'BurningHands'+s2+'BurningHands'+s3)
s4(s1+'CallLightning'+s2+'CallLightning'+s3)
s4(s1+'Catapult'+s2+'Catapult'+s3)
s4(s1+'ChainLightning'+s2+'ChainLightning'+s3)
s4(s1+'ChaosBolt'+s2+'ChaosBolt'+s3)
s4(s1+'ChillTouch'+s2+'ChillTouch'+s3)
s4(s1+'ChromaticOrb'+s2+'ChromaticOrb'+s3)
s4(s1+'CircleOfDeath'+s2+'CircleOfDeath'+s3)
s4(s1+'CloudOfDaggers'+s2+'CloudOfDaggers'+s3)
s4(s1+'Cloudkill'+s2+'Cloudkill'+s3)
s4(s1+'ConeOfCold'+s2+'ConeOfCold'+s3)
s4(s1+'ControlWater'+s2+'ControlWater'+s3)
s4(s1+'CordonOfArrows'+s2+'CordonOfArrows'+s3)
s4(s1+'CreateBonfire'+s2+'CreateBonfire'+s3)
s4(s1+'CrownOfStars'+s2+'CrownOfStars'+s3)
s4(s1+'CrusadersMantle'+s2+'CrusadersMantle'+s3)
s4(s1+'DarkStar'+s2+'DarkStar'+s3)
s4(s1+'Dawn'+s2+'Dawn'+s3)
s4(s1+'DelayedBlastFireball'+s2+'DelayedBlastFireball'+s3)
s4(s1+'DestructiveWave'+s2+'DestructiveWave'+s3)
s4(s1+'Disintegrate'+s2+'Disintegrate'+s3)
s4(s1+'DissonantWhispers'+s2+'DissonantWhispers'+s3)
s4(s1+'DivineFavor'+s2+'DivineFavor'+s3)
s4(s1+'DraconicTransformation'+s2+'DraconicTransformation'+s3)
s4(s1+'DragonsBreath'+s2+'DragonsBreath'+s3)
s4(s1+'DustDevil'+s2+'DustDevil'+s3)
s4(s1+'EarthTremor'+s2+'EarthTremor'+s3)
s4(s1+'Earthquake'+s2+'Earthquake'+s3)
s4(s1+'EldritchBlast'+s2+'EldritchBlast'+s3)
s4(s1+'ElementalBane'+s2+'ElementalBane'+s3)
s4(s1+'ElementalWeapon'+s2+'ElementalWeapon'+s3)
s4(s1+'Enervation'+s2+'Enervation'+s3)
s4(s1+'EnsnaringStrike'+s2+'EnsnaringStrike'+s3)
s4(s1+'EruptingEarth'+s2+'EruptingEarth'+s3)
s4(s1+'EvardsBlackTentacles'+s2+'EvardsBlackTentacles'+s3)
s4(s1+'Feeblemind'+s2+'Feeblemind'+s3)
s4(s1+'FingerOfDeath'+s2+'FingerOfDeath'+s3)
s4(s1+'FireBolt'+s2+'FireBolt'+s3)
s4(s1+'FireShield'+s2+'FireShield'+s3)
s4(s1+'FireStorm'+s2+'FireStorm'+s3)
s4(s1+'Fireball'+s2+'Fireball'+s3)
s4(s1+'FlameArrows'+s2+'FlameArrows'+s3)
s4(s1+'FlameBlade'+s2+'FlameBlade'+s3)
s4(s1+'FlameStrike'+s2+'FlameStrike'+s3)
s4(s1+'FlamingSphere'+s2+'FlamingSphere'+s3)
s4(s1+'Forbiddance'+s2+'Forbiddance'+s3)
s4(s1+'FrostFingers'+s2+'FrostFingers'+s3)
s4(s1+'Frostbite'+s2+'Frostbite'+s3)
s4(s1+'GlyphOfWarding'+s2+'GlyphOfWarding'+s3)
s4(s1+'GravityFissure'+s2+'GravityFissure'+s3)
s4(s1+'GravitySinkhole'+s2+'GravitySinkhole'+s3)
s4(s1+'GreenFlameBlade'+s2+'GreenFlameBlade'+s3)
s4(s1+'GuardianOfFaith'+s2+'GuardianOfFaith'+s3)
s4(s1+'GuidingBolt'+s2+'GuidingBolt'+s3)
s4(s1+'HailOfThorns'+s2+'HailOfThorns'+s3)
s4(s1+'Harm'+s2+'Harm'+s3)
s4(s1+'HeatMetal'+s2+'HeatMetal'+s3)
s4(s1+'HellishRebuke'+s2+'HellishRebuke'+s3)
s4(s1+'Hex'+s2+'Hex'+s3)
s4(s1+'HolyWeapon'+s2+'HolyWeapon'+s3)
s4(s1+'HungerOfHadar'+s2+'HungerOfHadar'+s3)
s4(s1+'HuntersMark'+s2+'HuntersMark'+s3)
s4(s1+'IceKnife'+s2+'IceKnife'+s3)
s4(s1+'IceStorm'+s2+'IceStorm'+s3)
s4(s1+'IllusoryDragon'+s2+'IllusoryDragon'+s3)
s4(s1+'Immolation'+s2+'Immolation'+s3)
s4(s1+'IncendiaryCloud'+s2+'IncendiaryCloud'+s3)
s4(s1+'Infestation'+s2+'Infestation'+s3)
s4(s1+'InflictWounds'+s2+'InflictWounds'+s3)
s4(s1+'InsectPlague'+s2+'InsectPlague'+s3)
s4(s1+'InvestitureOfFlame'+s2+'InvestitureOfFlame'+s3)
s4(s1+'InvestitureOfIce'+s2+'InvestitureOfIce'+s3)
s4(s1+'InvestitureOfWind'+s2+'InvestitureOfWind'+s3)
s4(s1+'JimsMagicMissile'+s2+'JimsMagicMissile'+s3)
s4(s1+'LifeTransference'+s2+'LifeTransference'+s3)
s4(s1+'LightningArrow'+s2+'LightningArrow'+s3)
s4(s1+'LightningBolt'+s2+'LightningBolt'+s3)
s4(s1+'LightningLure'+s2+'LightningLure'+s3)
s4(s1+'MaddeningDarkness'+s2+'MaddeningDarkness'+s3)
s4(s1+'Maelstrom'+s2+'Maelstrom'+s3)
s4(s1+'MagicMissile'+s2+'MagicMissile'+s3)
s4(s1+'MagicStone'+s2+'MagicStone'+s3)
s4(s1+'MagnifyGravity'+s2+'MagnifyGravity'+s3)
s4(s1+'MaximiliansEarthenGrasp{'+s2+'MaximiliansEarthenGrasp{'+s3)
s4(s1+'MelfsAcidArrow'+s2+'MelfsAcidArrow'+s3)
s4(s1+'MelfsMinuteMeteors'+s2+'MelfsMinuteMeteors'+s3)
s4(s1+'MentalPrison'+s2+'MentalPrison'+s3)
s4(s1+'MeteorSwarm'+s2+'MeteorSwarm'+s3)
s4(s1+'MindSliver'+s2+'MindSliver'+s3)
s4(s1+'MindSpike'+s2+'MindSpike'+s3)
s4(s1+'Moonbeam'+s2+'Moonbeam'+s3)
s4(s1+'MordenkainensFaithfulHound'+s2+'MordenkainensFaithfulHound'+s3)
s4(s1+'MordenkainensSword'+s2+'MordenkainensSword'+s3)
s4(s1+'NegativeEnergyFlood'+s2+'NegativeEnergyFlood'+s3)
s4(s1+'OtilukesFreezingSphere'+s2+'OtilukesFreezingSphere'+s3)
s4(s1+'PhantasmalForce'+s2+'PhantasmalForce'+s3)
s4(s1+'PhantasmalKiller'+s2+'PhantasmalKiller'+s3)
s4(s1+'PoisonSpray'+s2+'PoisonSpray'+s3)
s4(s1+'PrimalSavagery'+s2+'PrimalSavagery'+s3)
s4(s1+'PrismaticSpray'+s2+'PrismaticSpray'+s3)
s4(s1+'PrismaticWall'+s2+'PrismaticWall'+s3)
s4(s1+'ProduceFlame'+s2+'ProduceFlame'+s3)
s4(s1+'PsychicScream'+s2+'PsychicScream'+s3)
s4(s1+'PulseWave'+s2+'PulseWave'+s3)
s4(s1+'RaulothimsPsychicLance'+s2+'RaulothimsPsychicLance'+s3)
s4(s1+'RavenousVoid'+s2+'RavenousVoid'+s3)
s4(s1+'RayOfFrost'+s2+'RayOfFrost'+s3)
s4(s1+'RayOfSickness'+s2+'RayOfSickness'+s3)
s4(s1+'RimesBindingIce'+s2+'RimesBindingIce'+s3)
s4(s1+'SacredFlame'+s2+'SacredFlame'+s3)
s4(s1+'SappingSting'+s2+'SappingSting'+s3)
s4(s1+'ScorchingRay'+s2+'ScorchingRay'+s3)
s4(s1+'SearingSmite'+s2+'SearingSmite'+s3)
s4(s1+'ShadowBlade'+s2+'ShadowBlade'+s3)
s4(s1+'ShadowOfMoil'+s2+'ShadowOfMoil'+s3)
s4(s1+'Shatter'+s2+'Shatter'+s3)
s4(s1+'Shillelagh'+s2+'Shillelagh'+s3)
s4(s1+'ShockingGrasp'+s2+'ShockingGrasp'+s3)
s4(s1+'SickeningRadiance'+s2+'SickeningRadiance'+s3)
s4(s1+'SnillocsSnowballSwarm'+s2+'SnillocsSnowballSwarm'+s3)
s4(s1+'SpiritGuardians'+s2+'SpiritGuardians'+s3)
s4(s1+'SpiritShroud'+s2+'SpiritShroud'+s3)
s4(s1+'SpiritualWeapon'+s2+'SpiritualWeapon'+s3)
s4(s1+'StaggeringSmite'+s2+'StaggeringSmite'+s3)
s4(s1+'SteelWindStrike'+s2+'SteelWindStrike'+s3)
s4(s1+'StormOfVengeance'+s2+'StormOfVengeance'+s3)
s4(s1+'StormSphere'+s2+'StormSphere'+s3)
s4(s1+'Sunbeam'+s2+'Sunbeam'+s3)
s4(s1+'Sunburst'+s2+'Sunburst'+s3)
s4(s1+'SwordBurst'+s2+'SwordBurst'+s3)
s4(s1+'Symbol'+s2+'Symbol'+s3)
s4(s1+'SynapticStatic'+s2+'SynapticStatic'+s3)
s4(s1+'TashasCausticBrew'+s2+'TashasCausticBrew'+s3)
s4(s1+'TashasMindWhip'+s2+'TashasMindWhip'+s3)
s4(s1+'ThornWhip'+s2+'ThornWhip'+s3)
s4(s1+'ThunderStep'+s2+'ThunderStep'+s3)
s4(s1+'Thunderclap'+s2+'Thunderclap'+s3)
s4(s1+'ThunderousSmite'+s2+'ThunderousSmite'+s3)
s4(s1+'Thunderwave'+s2+'Thunderwave'+s3)
s4(s1+'TidalWave'+s2+'TidalWave'+s3)
s4(s1+'TimeRavage'+s2+'TimeRavage'+s3)
s4(s1+'TolltheDead'+s2+'TolltheDead'+s3)
s4(s1+'TransmuteRock'+s2+'TransmuteRock'+s3)
s4(s1+'Tsunami'+s2+'Tsunami'+s3)
s4(s1+'VampiricTouch'+s2+'VampiricTouch'+s3)
s4(s1+'ViciousMockery'+s2+'ViciousMockery'+s3)
s4(s1+'VitriolicSphere'+s2+'VitriolicSphere'+s3)
s4(s1+'WallOfFire'+s2+'WallOfFire'+s3)
s4(s1+'WallOfIce'+s2+'WallOfIce'+s3)
s4(s1+'WallOfLight'+s2+'WallOfLight'+s3)
s4(s1+'WallOfThorns'+s2+'WallOfThorns'+s3)
s4(s1+'Weird'+s2+'Weird'+s3)
s4(s1+'Whirlwind'+s2+'Whirlwind'+s3)
s4(s1+'WindWall'+s2+'WindWall'+s3)
s4(s1+'WitchBolt'+s2+'WitchBolt'+s3)
s4(s1+'WitherandBloom'+s2+'WitherandBloom'+s3)
s4(s1+'WordOfRadiance'+s2+'WordOfRadiance'+s3)
s4(s1+'WrathOfNature'+s2+'WrathOfNature'+s3)
s4(s1+'WrathfulSmite'+s2+'WrathfulSmite'+s3)
s4(s1+'ZephyrStrike'+s2+'ZephyrStrike'+s3)
s4('</td></tr></table>')

function toggleTab1(x){if(characters[x].toggled1.match(/none/)){characters[x].setToggled1("block");
document.getElementById('toggled1'+x).style.display=characters[x].toggled1
}
else
{characters[x].setToggled1("none");
document.getElementById('toggled1'+x).style.display=characters[x].toggled1
}
}
function toggleTab2(x){if(characters[x].toggled2.match(/none/)){characters[x].setToggled2("block");
document.getElementById('toggled2'+x).style.display=characters[x].toggled2
}
else
{characters[x].setToggled2("none");
document.getElementById('toggled2'+x).style.display=characters[x].toggled2
}
}
function toggleTab3(x){if(characters[x].toggled3.match(/none/)){characters[x].setToggled3("block");
document.getElementById('toggled3'+x).style.display=characters[x].toggled3
}
else
{characters[x].setToggled3("none");
document.getElementById('toggled3'+x).style.display=characters[x].toggled3
}
}
function toggleTab4(x){if(characters[x].toggled4.match(/none/)){characters[x].setToggled4("block");
document.getElementById('toggled4'+x).style.display=characters[x].toggled4
}
else
{characters[x].setToggled4("none");
document.getElementById('toggled4'+x).style.display=characters[x].toggled4
}
}
function toggleTab5(x){if(characters[x].toggled5.match(/none/)){characters[x].setToggled5("block");
document.getElementById('toggled5'+x).style.display=characters[x].toggled5
}
else
{characters[x].setToggled5("none");
document.getElementById('toggled5'+x).style.display=characters[x].toggled5
}
}
function toggleTab6(x){if(characters[x].toggled6.match(/none/)){characters[x].setToggled6("block");
document.getElementById('toggled6'+x).style.display=characters[x].toggled6
}
else
{characters[x].setToggled6("none");
document.getElementById('toggled6'+x).style.display=characters[x].toggled6
}
}
characterBoxWidth=500;
characterBoxHeight="*";
characters=new Array();
currentElementId=0;
PC="PC";
menuWidth=500;
pcBox=new AGEBox();
pcMenu=new AGEBox();
savePaneBox=new AGEBox();
savePane=new AGEElement();
savePane.setStyle("zIndex", "200");
savePane.putAt(100, 100);
function setStats(){
characters[targeted].setStrPro('');
if(str=stats.match(/Strength\sSaves\s\*/)){characters[targeted].setStrPro('pro')}
if(str=stats.match(/Strength\sSaves\s\*\*/)){characters[targeted].setStrPro('exp')}

characters[targeted].setDexPro('');
if(str=stats.match(/Dexterity\sSaves\s\*/)){characters[targeted].setDexPro('pro')}
if(str=stats.match(/Dexterity\sSaves\s\*\*/)){characters[targeted].setDexPro('exp')}
characters[targeted].setConPro('');
if(str=stats.match(/Constitution\sSaves\s\*/)){characters[targeted].setConPro('pro')}
if(str=stats.match(/Constituion\sSaves\s\*\*/)){characters[targeted].setConPro('exp')}
characters[targeted].setIntPro('');
if(str=stats.match(/Intelligence\sSaves\s\*/)){characters[targeted].setIntPro('pro')}
if(str=stats.match(/Intelligence\sSaves\s\*\*/)){characters[targeted].setIntPro('exp')}
characters[targeted].setWisPro('');
if(str=stats.match(/Wisdom\sSaves\s\*/)){characters[targeted].setWisPro('pro')}
if(str=stats.match(/Wisdom\sSaves\s\*\*/)){characters[targeted].setWisPro('exp')}
characters[targeted].setChaPro('');
if(str=stats.match(/Charisma\sSaves\s\*/)){characters[targeted].setChaPro('pro')}
if(str=stats.match(/Charisma\sSaves\s\*\*/)){characters[targeted].setChaPro('exp')}

characters[targeted].setAcrobatics('');
if(str=stats.match(/Acrobatics\s\(Dex\)\s\*/)){characters[targeted].setAcrobatics('pro')}
if(str=stats.match(/Acrobatics\s\(Dex\)\s\*\*/)){characters[targeted].setAcrobatics('exp')}

characters[targeted].setAnimal('');
if(str=stats.match(/Animal\sHandling\s\(Wis\)\s\*/)){characters[targeted].setAnimal('pro')}
if(str=stats.match(/Animal\sHandling\s\(Wis\)\s\*\*/)){characters[targeted].setAnimal('exp')}
characters[targeted].setArcana('');
if(str=stats.match(/Arcana\s\(Int\)\s\*/)){characters[targeted].setArcana('pro')}
if(str=stats.match(/Arcana\s\(Int\)\s\*\*/)){characters[targeted].setArcana('exp')}
characters[targeted].setAthletics('');
if(str=stats.match(/Athletics\s\(Str\)\s\*/)){characters[targeted].setAthletics('pro')}
if(str=stats.match(/Athletics\s\(Str\)\s\*\*/)){characters[targeted].setAthletics('exp')}
characters[targeted].setDeception('');
if(str=stats.match(/Deception\s\(Cha\)\s\*/)){characters[targeted].setDeception('pro')}
if(str=stats.match(/Deception\s\(Str\)\s\*\*/)){characters[targeted].setDeception('exp')}
characters[targeted].setHistory('');
if(str=stats.match(/History\s\(Int\)\s\*/)){characters[targeted].setHistory('pro')}
if(str=stats.match(/History\s\(Int\)\s\*\*/)){characters[targeted].setHistory('exp')}
characters[targeted].setInsight('');
if(str=stats.match(/Insight\s\(Wis\)\s\*/)){characters[targeted].setInsight('pro')}
if(str=stats.match(/Insight\s\(Wis\)\s\*\*/)){characters[targeted].setInsight('exp')}
characters[targeted].setIntimidation('');
if(str=stats.match(/Intimidation\s\(Cha\)\s\*/)){characters[targeted].setIntimidation('pro')}
if(str=stats.match(/Intimidation\s\(Cha\)\s\*\*/)){characters[targeted].setIntimidation('exp')}
characters[targeted].setInvestigation('');
if(str=stats.match(/Investigation\s\(Int\)\s\*/)){characters[targeted].setInvestigation('pro')}
if(str=stats.match(/Investigation\s\(Int\)\s\*\*/)){characters[targeted].setInvestigation('exp')}
characters[targeted].setMedicine('');
if(str=stats.match(/Medicine\s\(Wis\)\s\*/)){characters[targeted].setMedicine('pro')}
if(str=stats.match(/Medicine\s\(Wis\)\s\*\*/)){characters[targeted].setMedicine('exp')}
characters[targeted].setNature('');
if(str=stats.match(/Nature\s\(Int\)\s\*/)){characters[targeted].setNature('pro')}
if(str=stats.match(/Nature\s\(Int\)\s\*\*/)){characters[targeted].setNature('exp')}
characters[targeted].setPerception('');
if(str=stats.match(/Perception\s\(Wis\)\s\*/)){characters[targeted].setPerception('pro')}
if(str=stats.match(/Perception\s\(Wis\)\s\*\*/)){characters[targeted].setPerception('exp')}
characters[targeted].setPerformance('');
if(str=stats.match(/Performance\s\(Cha\)\s\*/)){characters[targeted].setPerformance('pro')}
if(str=stats.match(/Performance\s\(Cha\)\s\*\*/)){characters[targeted].setPerformance('exp')}
characters[targeted].setPersuasion('');
if(str=stats.match(/Persuasion\s\(Cha\)\s\*/)){characters[targeted].setPersuasion('pro')}
if(str=stats.match(/Persuasion\s\(Cha\)\s\*\*/)){characters[targeted].setPersuasion('exp')}
characters[targeted].setReligion('');
if(str=stats.match(/Religion\s\(Int\)\s\*/)){characters[targeted].setReligion('pro')}
if(str=stats.match(/Religion\s\(Int\)\s\*\*/)){characters[targeted].setReligion('exp')}
characters[targeted].setSleight('');
if(str=stats.match(/Sleight\sof\sHand\s\(Dex\)\s\*/)){characters[targeted].setSleight('pro')}
if(str=stats.match(/Slight\sof\sHand\s\(Dex\)\s\*\*/)){characters[targeted].setSleight('exp')}
characters[targeted].setStealth('');
if(str=stats.match(/Stealth\s\(Dex\)\s\*/)){characters[targeted].setStealth('pro')}
if(str=stats.match(/Stealth\s\(Dex\)\s\*\*/)){characters[targeted].setStealth('exp')}
characters[targeted].setSurvival('');
if(str=stats.match(/Survival\s\(Wis\)\s\*/)){characters[targeted].setSurvival('pro')}
if(str=stats.match(/Survival\s\(Wis\)\s\*\*/)){characters[targeted].setSurvival('exp')}

stats=stats.replace(/\s\+\s/g,'+')

if(rip=stats.match(/(.+?Melee[\s\S]+?.)(\+\d{1,2})([\s\S]+?)\(([\s\S]+?)\)([\s\S]+?\.)/))
{
characters[targeted].setRollName1(rip[1]+rip[3]);
characters[targeted].setRoll1('1d20'+rip[2]);
characters[targeted].setRollName2(rip[5]);
characters[targeted].setRoll2(rip[4]);
addRollPrompt(targeted);
}

if(rip=stats.match(/.+?Melee[\s\S]+?(.+?Melee[\s\S]+?.)(\+\d{1,2})([\s\S]+?)\(([\s\S]+?)\)([\s\S]+?\.)/))
{
characters[targeted].setRollName1(rip[1]+rip[3]);
characters[targeted].setRoll1('1d20'+rip[2]);
characters[targeted].setRollName2(rip[5]);
characters[targeted].setRoll2(rip[4]);
addRollPrompt(targeted);
}

if(rip=stats.match(/(.+?Ranged[\s\S]+?.)(\+\d{1,2})([\s\S]+?)\(([\s\S]+?)\)([\s\S]+?\.)/))
{
characters[targeted].setRollName1(rip[1]+rip[3]);
characters[targeted].setRoll1('1d20'+rip[2]);
characters[targeted].setRollName2(rip[5]);
characters[targeted].setRoll2(rip[4]);
addRollPrompt(targeted);
}

if(rip=stats.match(/(.+?)(DC\s\d{1,2})\s(Strength|Dexterity|Constitution|Wisdom)(\ssaving\sthrow[\s\S]+?)\(([\s\S]+?)\)([\s\S]+?\.)/))
{
characters[targeted].setRollName1(rip[1]+rip[2]+' vs'+rip[3]+rip[4]);
characters[targeted].setRoll1('0d0+0');
characters[targeted].setRollName2(rip[6]);
characters[targeted].setRoll2(rip[5]);
addRollPrompt(targeted);
}

if(rip=stats.match(/^([\s\S]*?)CLASS[\s\S]*?LEVEL([\s\S]*?)(\d{1,2})\s([\s\S]*?)EXPERIENCE\sPOINTS([\s\S]*?)PLAYER NAME[\s\S]*?HERITAGE([\s\S]*?)BACKGROUND([\s\S]*?)CAMPAIGN[\s\S]*?STR[\s\S]*?\d{1}\s(\d{1,2})\sDEX[\s\S]*?\d{1}\s(\d{1,2})\sCON[\s\S]*?\d{1}\s(\d{1,2})\sINT[\s\S]*?\d{1}\s(\d{1,2})\sWIS[\s\S]*?\d{1}\s(\d{1,2})\sCHA[\s\S]*?\d{1}\s(\d{1,2})/)){characters[targeted].setLvl(rip[3]);
characters[targeted].setClass(rip[2]+""+rip[4]);
characters[targeted].setExperience(rip[5]);
characters[targeted].setRace(rip[6]);
characters[targeted].setBackground(rip[7]);
characters[targeted].setStr(rip[8]);
characters[targeted].setDex(rip[9]);
characters[targeted].setCon(rip[10]);
characters[targeted].setInt(rip[11]);
characters[targeted].setWis(rip[12]);
characters[targeted].setCha(rip[13])}
if(rip=stats.match(/Saving\sThrows:\s([\s\S]*?)Skills:\s([\s\S]*?)Languages:\s([\s\S]*?)ARMOR\sCLASS\s\(AC\)([\s\S]*?)Armor\sWorn([\s\S]*?)INITIATIVE[\s\S]*?SPEED([\s\S]*?)HIT POINTS([\s\S]*?)HIT\sDICE([\s\S]*?)DEATH\sSAVES/)){characters[targeted].setSaving(rip[1]);
characters[targeted].setSkills(rip[2]);
characters[targeted].setLanguages(rip[3]);
characters[targeted].setAC(rip[4]);
characters[targeted].setArmor(rip[5]);
characters[targeted].setSpeed(rip[6]);
characters[targeted].setMaxHp(rip[7]);
characters[targeted].setCurHp(rip[7]);
characters[targeted].setHitDice(rip[8])}

if(rip=stats.match(/(^[\s\S]?.+)/)){characters[targeted].setName(rip[1])}

if(rip=stats.match(/Languages([\s\S]?.+)/i)){characters[targeted].setLanguages(rip[1])}

if(size=stats.match(/(Tiny|Small|Medium|Large|Huge|Gargantuan)/)){characters[targeted].setSize(size[1])}
if(race=stats.match(/(aberration|beast|construct|elemental|fey|fiend|giant|humanoid|monstrosity|plant|undead|human)/i)){characters[targeted].setRace(race[1])}
if(alignment=stats.match(/(neutral)/)){characters[targeted].setAlignment(alignment[1])}
if(alignment=stats.match(/(lawful good|lawful neutral|lawful evil|chaotic good|chaotic neutral|chaotic evil|neutral evil|unaligned)/i)){characters[targeted].setAlignment(alignment[1])}
if(ac=stats.match(/Armor\sClass\s(\d{1,2})([\s\S]*?)(Hit Points )/)){characters[targeted].setAC(ac[1])}
if(armortype=stats.match(/mage\sarmor/)){characters[targeted].setArmor('Mage Armor AC13+dex')};
if(armortype=stats.match(/natural armor/)){characters[targeted].setArmor('Natural Armor')};
if(armortype=stats.match(/leather/)){characters[targeted].setArmor('Leather AC11+dex')};
if(armortype=stats.match(/padded/)){characters[targeted].setArmor('Padded AC11+dex Stealth @DisAdv')};
if(armortype=stats.match(/studded/)){characters[targeted].setArmor('Studded AC12+dex')};
if(armortype=stats.match(/hide/)){characters[targeted].setArmor('Hide AC12+dex max 2')};
if(armortype=stats.match(/chain\sshirt/)){characters[targeted].setArmor('Chain Shirt AC13+dex max 2')};
if(armortype=stats.match(/scale/)){characters[targeted].setArmor('Scale AC14+dex max 2 Stealth @DisAdv')};
if(armortype=stats.match(/breastplate/)){characters[targeted].setArmor('Breastplate AC14+dex max 2')};
if(armortype=stats.match(/plate/)){characters[targeted].setArmor('Plate AC18 Stealth @DisAdv str15')};
if(armortype=stats.match(/half\splate/)){characters[targeted].setArmor('Half Plate AC15+dex max 2 Stealth @DisAdv')};
if(armortype=stats.match(/ring\smail/)){characters[targeted].setArmor('Ring AC14 Stealth @DisAdv')};
if(armortype=stats.match(/chain\smail/)){characters[targeted].setArmor('Chain Mail AC16 Stealth @DisAdv')};
if(armortype=stats.match(/splint/)){characters[targeted].setArmor('Splint AC17 Stealth @DisAdv')};
if(armortype=stats.match(/Unarmored\sDefense/)){characters[targeted].setArmor('Unarmored Defense AC10+dex+wis')};
if(shieldtype=stats.match(/Armor\sClass[\s\S]*shield[\s\S]*STR/i)){characters[targeted].setShield('Shield AC+2')}
else
{characters[targeted].setShield('No Shield AC+0')}
if(hp=stats.match(/(Hit Points )(\d{1,3})([\s\S]*?)(Speed )/i))
{characters[targeted].setMaxHp(hp[2]);
characters[targeted].setHitDice(hp[3]);
};
if(rip=stats.match(/Speed\s([\s\S]*?)STR/)){characters[targeted].setSpeed(rip[1])}
if(str=stats.match(/(\d{1,2})\s\(\+|(\d{1,2})\s\(\-|(\d{1,2})\s\(\–/g)){characters[targeted].setStr(parseInt(str[0]));
characters[targeted].setDex(parseInt(str[1]));
characters[targeted].setCon(parseInt(str[2]));
characters[targeted].setInt(parseInt(str[3]));
characters[targeted].setWis(parseInt(str[4]));
characters[targeted].setCha(parseInt(str[5]))}
if(resist=stats.match(/(Resistances|Resistance)([\s\S]*?)(Senses|Condition\s|Damage\sImmunities|Damage\sVulnerabilities)/)){characters[targeted].setResistance(resist[2])}
else
{characters[targeted].setResistance('')}
characters[targeted].setImmunity('');
if(immune=stats.match(/(Damage\sImmunities)([\s\S]*?)(Damage\sResistance|Damage\sCondition|Condition\sImmuniti|Senses)/)){characters[targeted].setImmunity(immune[2])}
else
{characters[targeted].setImmunity('')}
if( dmgimmune=stats.match(/Condition\sImmunities\s([\s\S]*?)Senses/)){characters[targeted].setDamageConditions('immune to '+dmgimmune[1])}
else
{characters[targeted].setDamageConditions('')}
if(vulnerable=stats.match(/Vulnerabilities\s([\s\S]*?)(?:Senses|Condition\s|Damage\s)/)){characters[targeted].setVulnerability(vulnerable[1])}
else
{characters[targeted].setVulnerability('')}
if(saves=stats.match(/(Throws )([\s\S]*?)(Skills)/)){characters[targeted].setSaving(saves[2])}
if(senses=stats.match(/Senses\s([\s\S]*?Perception\s\d{1,2})/)){characters[targeted].setSenses(senses[1])}
if(languages=stats.match(/(Languages )([\s\S]*?)(Challenge )/)){characters[targeted].setLanguages(languages[2])}
if(rip=stats.match(/Challenge\s(\d\/\d)/)){characters[targeted].setLvl(rip[1])}
if(lvl=stats.match(/Challenge\s(\d{1,2})(?!\/)/)){characters[targeted].setLvl(lvl[1])}
if(xp=stats.match(/Challenge[\s\S]*\(([\s\S]*)\sXP/)){characters[targeted].setExperience(xp[1])}
if(casting=stats.match(/spellcasting[\s\S]*?(cha|int|wis)/i)){characters[targeted].setSpellAbility(casting[1].toLowerCase())}
if(actnotes=stats.match(/XP\)([\s\S].*)ACTIONS/i)){characters[targeted].setActionNotes(actnotes[1])}
if(savingThrows=stats.match(/Str\s\+(\d{1,2})/)){if(parseInt(savingThrows[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].strMod))){characters[targeted].setStrPro('exp')}
else
{characters[targeted].setStrPro('pro')}};
if(savingThrows=stats.match(/Dex\s\+(\d{1,2})/)){if(parseInt(savingThrows[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].dexMod))){characters[targeted].setDexPro('exp')}
else
{characters[targeted].setDexPro('pro')}};
if(savingThrows=stats.match(/Con\s\+(\d{1,2})/)){if(parseInt(savingThrows[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].conMod))){characters[targeted].setConPro('exp')}
else
{characters[targeted].setConPro('pro')}};
if(savingThrows=stats.match(/Int\s\+(\d{1,2})/)){if(parseInt(savingThrows[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].intMod))){characters[targeted].setIntPro('exp')}
else
{characters[targeted].setIntPro('pro')}};
if(savingThrows=stats.match(/Wis\s\+(\d{1,2})/)){if(parseInt(savingThrows[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].wisMod))){characters[targeted].setWisPro('exp')}
else
{characters[targeted].setWisPro('pro')}};
if(savingThrows=stats.match(/Cha\s\+(\d{1,2})/)){if(parseInt(savingThrows[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].chaMod))){characters[targeted].setChaPro('exp')}
else
{characters[targeted].setChaPro('pro')}};
if(nameit=stats.match(/^Skills\s([\s\S]*?)\n/)){characters[targeted].setName(nameit[1])}
if(skills=stats.match(/Skills\s([\s\S]*?)(Senses|Condition\sI|Damage\sI|Damage\sR|Damage\sV)/)){characters[targeted].setBackS(skills[1])};
if(skills=stats.match(/Athletics\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].dexMod))){characters[targeted].setAthletics('exp')}
else
{characters[targeted].setAthletics('pro')}};
if(skills=stats.match(/Acrobatics\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].dexMod))){characters[targeted].setAcrobatics('exp')}
else
{characters[targeted].setAcrobatics('pro')}};
if(skills=stats.match(/Sleight\sof\sHand\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].dexMod))){characters[targeted].setSleight('exp')}
else
{characters[targeted].setSleight('pro')}};
if(skills=stats.match(/Stealth\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].dexMod))){characters[targeted].setStealth('exp')}
else
{characters[targeted].setStealth('pro')}};
if(skills=stats.match(/Arcana\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].intMod))){characters[targeted].setArcana('exp')}
else
{characters[targeted].setArcana('pro')}};
if(skills=stats.match(/History\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].intMod))){characters[targeted].setHistory('exp')}
else
{characters[targeted].setHistory('pro')}};
if(skills=stats.match(/Investigation\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].intMod))){characters[targeted].setInvestigation('exp')}
else
{characters[targeted].setInvestigation('pro')}};
if(skills=stats.match(/Nature\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].intMod))){characters[targeted].setNature('exp')}
else
{characters[targeted].setNature('pro')}};
if(skills=stats.match(/Religion\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].intMod))){characters[targeted].setReligion('exp')}
else
{characters[targeted].setReligion('pro')}};
if(skills=stats.match(/Animal\sHandling\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].wisMod))){characters[targeted].setAnimal('exp')}
else
{characters[targeted].setAnimal('pro')}};
if(skills=stats.match(/Insight\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].wisMod))){characters[targeted].setInsight('exp')}
else
{characters[targeted].setInsight('pro')}};
if(skills=stats.match(/Medicine\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].wisMod))){characters[targeted].setMedicine('exp')}
else
{characters[targeted].setMedicine('pro')}};
if(skills=stats.match(/Perception\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].wisMod))){characters[targeted].setPerception('exp')}
else
{characters[targeted].setPerception('pro')}};
if(skills=stats.match(/Survival\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].wisMod))){characters[targeted].setSurvival('exp')}
else
{characters[targeted].setSurvival('pro')}};
if(skills=stats.match(/Deception\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].chaMod))){characters[targeted].setDeception('exp')}
else
{characters[targeted].setDeception('pro')}};
if(skills=stats.match(/Intimidation\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].chaMod))){characters[targeted].setIntimidation('exp')}
else
{characters[targeted].setIntimidation('pro')}};
if(skills=stats.match(/Performance\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].chaMod))){characters[targeted].setPerformance('exp')}
else
{characters[targeted].setPerformance('pro')}};
if(skills=stats.match(/Persuasion\s\+(\d{1,2})/)){if(parseInt(skills[1])>(parseInt(characters[targeted].pro)+parseInt(characters[targeted].chaMod))){characters[targeted].setPersuasion('exp')}
else
{characters[targeted].setPersuasion('pro')}
}
//Bard Class Features
if(rip=stats.match(/song\sof\srest/i)){this.SongOfRest()}
if(rip=stats.match(/taunt/i)){this.Taunt()}
//Monk Class Features
if(weapon=stats.match(/deflect\smissile/i)){this.DeflectMissile()}
if(weapon=stats.match(/unarmed\sstrike/i)){this.UnarmedStrike();
this.Disarmed();
this.KnockedProne();
this.Stunned()}

if(rip=stats.match(/Cantrips/i))
{
if(rip=stats.match(/Acid\sSplash/i)){this.AcidSplash()};
if(rip=stats.match(/Blade\sWard/i)){this.BladeWard()};
if(rip=stats.match(/Booming\sBlade/i)){this.BoomingBlade()};
if(rip=stats.match(/Chill\sTouch/i)){this.ChillTouch()};
if(rip=stats.match(/Control\sFlames/i)){this.ControlFlames()};
if(rip=stats.match(/Create\sBonfire/i)){this.CreateBonfire()};
if(rip=stats.match(/Dancing\sLights/i)){this.DancingLights()};
if(rip=stats.match(/Druidcraft/i)){this.Druidcraft()};
if(rip=stats.match(/Eldritch\sBlast/i)){this.EldritchBlast()};
if(rip=stats.match(/Fire\sBolt/i)){this.FireBolt()};
if(rip=stats.match(/Friends/i)){this.Friends()};
if(rip=stats.match(/Frostbite/i)){this.Frostbite()};
if(rip=stats.match(/GreenFlame\sBlade/i)){this.GreenFlameBlade()};
if(rip=stats.match(/Guidance/i)){this.Guidance()};
if(rip=stats.match(/Gust\s/i)){this.Gust()};
if(rip=stats.match(/Infestation/i)){this.Infestation()};
if(rip=stats.match(/Light/i)){this.Light()};
if(rip=stats.match(/Lightning\sLure/i)){this.LightningLure()};
if(rip=stats.match(/Mage\sHand/i)){this.MageHand()};
if(rip=stats.match(/Magic\sStone/i)){this.MagicStone()};
if(rip=stats.match(/Mending/i)){this.Mending()};
if(rip=stats.match(/Message/i)){this.Message()};
if(rip=stats.match(/Minor\sIllusion/i)){this.MinorIllusion()};
if(rip=stats.match(/Mold\sEarth/i)){this.MoldEarth()};
if(rip=stats.match(/Poison\sSpray/i)){this.PoisonSpray()};
if(rip=stats.match(/Prestidigitation/i)){this.Prestidigitation()};
if(rip=stats.match(/Primal\sSavagery/i)){this.PrimalSavagery()};
if(rip=stats.match(/Produce\sFlame/i)){this.ProduceFlame()};
if(rip=stats.match(/Ray\sOf\sFrost/i)){this.RayOfFrost()};
if(rip=stats.match(/Resistance/i)){this.Resistance()};
if(rip=stats.match(/Sacred\sFlame/i)){this.SacredFlame()};
if(rip=stats.match(/Shape\sWater/i)){this.ShapeWater()};
if(rip=stats.match(/Shillelagh/i)){this.Shillelagh()};
if(rip=stats.match(/Shocking\sGrasp/i)){this.ShockingGrasp()};
if(rip=stats.match(/Spare\sThe\sDying/i)){this.SpareTheDying()};
if(rip=stats.match(/Sword\sBurst/i)){this.SwordBurst()};
if(rip=stats.match(/Thaumaturgy/i)){this.Thaumaturgy()};
if(rip=stats.match(/Thorn\sWhip/i)){this.ThornWhip()};
if(rip=stats.match(/Thunderclap/i)){this.Thunderclap()};
if(rip=stats.match(/Toll\sThe\sDead/i)){this.TollTheDead()};
if(rip=stats.match(/True\sStrike/i)){this.TrueStrike()};
if(rip=stats.match(/Vicious\sMockery/i)){this.ViciousMockery()};
if(rip=stats.match(/Word\sOf\sRadiance/i)){this.WordOfRadiance()};
}

if(rip=stats.match(/1st level/i))
{
if(rip=stats.match(/Absorb\sElements/i)){this.AbsorbElements()};
if(rip=stats.match(/Alarm/i)){this.Alarm()};
if(rip=stats.match(/Animal\sFriendship/i)){this.AnimalFriendship()};
if(rip=stats.match(/Armor\sOf\sAgathys/i)){this.ArmorOfAgathys()};
if(rip=stats.match(/Arms\sOf\sHadar/i)){this.ArmsOfHadar()};
if(rip=stats.match(/Bane\s/i)){this.Bane()};
if(rip=stats.match(/Beast\sBond/i)){this.BeastBond()};
if(rip=stats.match(/Bless/i)){this.Bless()};
if(rip=stats.match(/Burning\sHands/i)){this.BurningHands()};
if(rip=stats.match(/Catapult/i)){this.Catapult()};
if(rip=stats.match(/Cause\sFear/i)){this.CauseFear()};
if(rip=stats.match(/Ceremony/i)){this.Ceremony()};
if(rip=stats.match(/Chaos\sBolt/i)){this.ChaosBolt()};
if(rip=stats.match(/Charm\sPerson/i)){this.CharmPerson()};
if(rip=stats.match(/Chromatic\sOrb/i)){this.ChromaticOrb()};
if(rip=stats.match(/Color\sSpray/i)){this.ColorSpray()};
if(rip=stats.match(/Command/i)){this.Command()};
if(rip=stats.match(/Compelled\sDuel/i)){this.CompelledDuel()};
if(rip=stats.match(/Comprehend\sLanguages/i)){this.ComprehendLanguages()};
if(rip=stats.match(/Create\sOr\sDestroy\sWater/i)){this.CreateOrDestroyWater()};
if(rip=stats.match(/Cure\sWounds/i)){this.CureWounds()};
if(rip=stats.match(/Detect\sEvil\sAnd\sGood/i)){this.DetectEvilAndGood()};
if(rip=stats.match(/Detect\sMagic/i)){this.DetectMagic()};
if(rip=stats.match(/Detect\sPoison\sAnd\sDisease/i)){this.DetectPoisonAndDisease()};
if(rip=stats.match(/Disguise\sSelf/i)){this.DisguiseSelf()};
if(rip=stats.match(/Dissonant\sWhispers/i)){this.DissonantWhispers()};
if(rip=stats.match(/Divine\sFavor/i)){this.DivineFavor()};
if(rip=stats.match(/Earth\sTremor/i)){this.EarthTremor()};
if(rip=stats.match(/Ensnaring\sStrike/i)){this.EnsnaringStrike()};
if(rip=stats.match(/Entangle/i)){this.Entangle()};
if(rip=stats.match(/Expeditious\sRetreat/i)){this.ExpeditiousRetreat()};
if(rip=stats.match(/Faerie\sFire/i)){this.FaerieFire()};
if(rip=stats.match(/False\sLife/i)){this.FalseLife()};
if(rip=stats.match(/Feather\sFall/i)){this.FeatherFall()};
if(rip=stats.match(/Find\sFamiliar/i)){this.FindFamiliar()};
if(rip=stats.match(/Fog\sCloud/i)){this.FogCloud()};
if(rip=stats.match(/Goodberry/i)){this.Goodberry()};
if(rip=stats.match(/Grease/i)){this.Grease()};
if(rip=stats.match(/Guiding\sBolt/i)){this.GuidingBolt()};
if(rip=stats.match(/Hail\sOf\sThorns/i)){this.HailOfThorns()};
if(rip=stats.match(/Healing\sWord/i)){this.HealingWord()};
if(rip=stats.match(/Hellish\sRebuke/i)){this.HellishRebuke()};
if(rip=stats.match(/Heroism/i)){this.Heroism()};
if(rip=stats.match(/Hex/i)){this.Hex()};
if(rip=stats.match(/Hunter\’s\sMark/i)){this.HuntersMark()};
if(rip=stats.match(/Ice\sKnife/i)){this.IceKnife()};
if(rip=stats.match(/Identify/i)){this.Identify()};
if(rip=stats.match(/Illusory\sScript/i)){this.IllusoryScript()};
if(rip=stats.match(/Inflict\sWounds/i)){this.InflictWounds()};
if(rip=stats.match(/Jump\s/i)){this.Jump()};
if(rip=stats.match(/Longstrider/i)){this.Longstrider()};
if(rip=stats.match(/Mage\sArmor/i)){this.MageArmor()};
if(rip=stats.match(/Magic\sMissile/i)){this.MagicMissile()};
if(rip=stats.match(/Protection\sFrom\sEvil\sAnd\sGood/i)){this.ProtectionFromEvilAndGood()};
if(rip=stats.match(/Purify\sFood\sAnd\sDrink/i)){this.PurifyFoodAndDrink()};
if(rip=stats.match(/Ray\sOf\sSickness/i)){this.RayOfSickness()};
if(rip=stats.match(/Sanctuary/i)){this.Sanctuary()};
if(rip=stats.match(/Searing\sSmite/i)){this.SearingSmite()};
if(rip=stats.match(/Shield/i)){this.Shield()};
if(rip=stats.match(/Shield\sOf\sFaith/i)){this.ShieldOfFaith()};
if(rip=stats.match(/Silent\sImage/i)){this.SilentImage()};
if(rip=stats.match(/Sleep/i)){this.Sleep()};
if(rip=stats.match(/Snare/i)){this.Snare()};
if(rip=stats.match(/Speak\sWith\sAnimals/i)){this.SpeakWithAnimals()};
if(rip=stats.match(/Tasha\’s\sHideous\sLaughter/i)){this.TashasHideousLaughter()};
if(rip=stats.match(/Tenser\’s\sFloating\sDisk/i)){this.TensersFloatingDisk()};
if(rip=stats.match(/Thunderous\sSmite/i)){this.ThunderousSmite()};
if(rip=stats.match(/Thunderwave/i)){this.Thunderwave()};
if(rip=stats.match(/Unseen\sServant/i)){this.UnseenServant()};
if(rip=stats.match(/Witch\sBolt/i)){this.WitchBolt()};
if(rip=stats.match(/Wrathful\sSmite/i)){this.WrathfulSmite()};
if(rip=stats.match(/Zephyr\sStrike/i)){this.ZephyrStrike()};
}

if(rip=stats.match(/2nd level/i))
{
if(rip=stats.match(/Aganazzar\’s\sScorcher/i)){this.AganazzarsScorcher()};
if(rip=stats.match(/Aid/i)){this.Aid()};
if(rip=stats.match(/Alter\sSelf/i)){this.AlterSelf()};
if(rip=stats.match(/Animal\sMessenger/i)){this.AnimalMessenger()};
if(rip=stats.match(/Arcane\sLock/i)){this.ArcaneLock()};
if(rip=stats.match(/Augury\s/i)){this.Augury()};
if(rip=stats.match(/Barkskin/i)){this.Barkskin()};
if(rip=stats.match(/Beast\sSense/i)){this.BeastSense()};
if(rip=stats.match(/Blindness\sDeafness/i)){this.BlindnessDeafness()};
if(rip=stats.match(/Blur\s/i)){this.Blur()};
if(rip=stats.match(/Branding\sSmite/i)){this.BrandingSmite()};
if(rip=stats.match(/Calm\sEmotions/i)){this.CalmEmotions()};
if(rip=stats.match(/Cloud\sOf\sDaggers/i)){this.CloudOfDaggers()};
if(rip=stats.match(/Continual\sFlame/i)){this.ContinualFlame()};
if(rip=stats.match(/Cordon\sOf\sArrows/i)){this.CordonOfArrows()};
if(rip=stats.match(/Crown\sOf\sMadness/i)){this.CrownOfMadness()};
if(rip=stats.match(/Darkness/i)){this.Darkness()};
if(rip=stats.match(/Darkvision/i)){this.Darkvision()};
if(rip=stats.match(/Detect\sThoughts/i)){this.DetectThoughts()};
if(rip=stats.match(/Dragon\'s\sBreath/i)){this.DragonsBreath()};
if(rip=stats.match(/Dust\sDevil/i)){this.DustDevil()};
if(rip=stats.match(/Earthbind/i)){this.Earthbind()};
if(rip=stats.match(/Enhance\sAbility/i)){this.EnhanceAbility()};
if(rip=stats.match(/Enlarge\sReduce/i)){this.EnlargeReduce()};
if(rip=stats.match(/Enthrall/i)){this.Enthrall()};
if(rip=stats.match(/Find\sSteed/i)){this.FindSteed()};
if(rip=stats.match(/Find\sTraps/i)){this.FindTraps()};
if(rip=stats.match(/Flame\sBlade/i)){this.FlameBlade()};
if(rip=stats.match(/Flaming\sSphere/i)){this.FlamingSphere()};
if(rip=stats.match(/Gentle\sRepose/i)){this.GentleRepose()};
if(rip=stats.match(/Gust\sOf\sWind/i)){this.GustOfWind()};
if(rip=stats.match(/Healing\sSpirit/i)){this.HealingSpirit()};
if(rip=stats.match(/Heat\sMetal/i)){this.HeatMetal()};
if(rip=stats.match(/Hold\sPerson/i)){this.HoldPerson()};
if(rip=stats.match(/Invisibility/i)){this.Invisibility()};
if(rip=stats.match(/Knock/i)){this.Knock()};
if(rip=stats.match(/Lesser\sRestoration/i)){this.LesserRestoration()};
if(rip=stats.match(/Levitate/i)){this.Levitate()};
if(rip=stats.match(/Locate\sAnimals\sOr\sPlants/i)){this.LocateAnimalsOrPlants()};
if(rip=stats.match(/Locate\sObject/i)){this.LocateObject()};
if(rip=stats.match(/Magic\sMouth/i)){this.MagicMouth()};
if(rip=stats.match(/Magic\sWeapon/i)){this.MagicWeapon()};
if(rip=stats.match(/Maximilian\’s\sEarthen\sGrasp/i)){this.MaximiliansEarthenGrasp()};
if(rip=stats.match(/Melf\’s\sAcid\sArrow/i)){this.MelfsAcidArrow()};
if(rip=stats.match(/Mind\sSpike/i)){this.MindSpike()};
if(rip=stats.match(/Mirror\sImage/i)){this.MirrorImage()};
if(rip=stats.match(/Misty\sStep/i)){this.MistyStep()};
if(rip=stats.match(/Moonbeam/i)){this.Moonbeam()};
if(rip=stats.match(/Nystul\’s\sMagic\sAura/i)){this.NystulsMagicAura()};
if(rip=stats.match(/Pass\sWithout\sTrace/i)){this.PassWithoutTrace()};
if(rip=stats.match(/Phantasmal\sForce/i)){this.PhantasmalForce()};
if(rip=stats.match(/Prayer\sOf\sHealing/i)){this.PrayerOfHealing()};
if(rip=stats.match(/Protection\sFrom\sPoison/i)){this.ProtectionFromPoison()};
if(rip=stats.match(/Pyrotechnics/i)){this.Pyrotechnics()};
if(rip=stats.match(/Ray\sOf\sEnfeeblement/i)){this.RayOfEnfeeblement()};
if(rip=stats.match(/Rope\sTrick/i)){this.RopeTrick()};
if(rip=stats.match(/Scorching\sRay/i)){this.ScorchingRay()};
if(rip=stats.match(/See\sInvisibility/i)){this.SeeInvisibility()};
if(rip=stats.match(/Shadow\sBlade/i)){this.ShadowBlade()};
if(rip=stats.match(/Shatter/i)){this.Shatter()};
if(rip=stats.match(/Silence/i)){this.Silence()};
if(rip=stats.match(/Skywrite/i)){this.Skywrite()};
if(rip=stats.match(/Snilloc\’s\sSnowball\sSwarm/i)){this.SnillocsSnowballSwarm()};
if(rip=stats.match(/Spider\sClimb/i)){this.SpiderClimb()};
if(rip=stats.match(/Spike\sGrowth/i)){this.SpikeGrowth()};
if(rip=stats.match(/Spiritual\sWeapon/i)){this.SpiritualWeapon()};
if(rip=stats.match(/Suggestion/i)){this.Suggestion()};
if(rip=stats.match(/Warding\sBond/i)){this.WardingBond()};
if(rip=stats.match(/Warding\sWind/i)){this.WardingWind()};
if(rip=stats.match(/Web/i)){this.Web()};
if(rip=stats.match(/Zone\sOf\sTruth/i)){this.ZoneOfTruth()};
}

if(rip=stats.match(/3rd level/i))
{
if(rip=stats.match(/Animate\sDead/i)){this.AnimateDead()};
if(rip=stats.match(/Aura\sOf\sVitality/i)){this.AuraOfVitality()};
if(rip=stats.match(/Beacon\sOf\sHope/i)){this.BeaconOfHope()};
if(rip=stats.match(/Bestow\sCurse/i)){this.BestowCurse()};
if(rip=stats.match(/Blinding\sSmite/i)){this.BlindingSmite()};
if(rip=stats.match(/Blink/i)){this.Blink()};
if(rip=stats.match(/Call\sLightning/i)){this.CallLightning()};
if(rip=stats.match(/Catnap/i)){this.Catnap()};
if(rip=stats.match(/Clairvoyance/i)){this.Clairvoyance()};
if(rip=stats.match(/Conjure\sAnimals/i)){this.ConjureAnimals()};
if(rip=stats.match(/Conjure\sBarrage/i)){this.ConjureBarrage()};
if(rip=stats.match(/Counterspell/i)){this.Counterspell()};
if(rip=stats.match(/Create\sFood\sAnd\sWater/i)){this.CreateFoodAndWater()};
if(rip=stats.match(/Crusader\’s\sMantle/i)){this.CrusadersMantle()};
if(rip=stats.match(/Daylight/i)){this.Daylight()};
if(rip=stats.match(/Dispel\sMagic/i)){this.DispelMagic()};
if(rip=stats.match(/Elemental\sWeapon/i)){this.ElementalWeapon()};
if(rip=stats.match(/Enemies\sAbound/i)){this.EnemiesAbound()};
if(rip=stats.match(/Erupting\sEarth/i)){this.EruptingEarth()};
if(rip=stats.match(/Fear\s/i)){this.Fear()};
if(rip=stats.match(/Feign\sDeath/i)){this.FeignDeath()};
if(rip=stats.match(/Fireball/i)){this.Fireball()};
if(rip=stats.match(/Flame\sArrows/i)){this.FlameArrows()};
if(rip=stats.match(/Fly/i)){this.Fly()};
if(rip=stats.match(/Gaseous\sForm/i)){this.GaseousForm()};
if(rip=stats.match(/Glyph\sOf\sWarding/i)){this.GlyphOfWarding()};
if(rip=stats.match(/Haste/i)){this.Haste()};
if(rip=stats.match(/Hunger\sOf\sHadar/i)){this.HungerOfHadar()};
if(rip=stats.match(/Hypnotic\sPattern/i)){this.HypnoticPattern()};
if(rip=stats.match(/Leomund\’s\sTiny\sHut/i)){this.LeomundsTinyHut()};
if(rip=stats.match(/Life\sTransference/i)){this.LifeTransference()};
if(rip=stats.match(/Lightning\sArrow/i)){this.LightningArrow()};
if(rip=stats.match(/Lightning\sBolt/i)){this.LightningBolt()};
if(rip=stats.match(/Magic\sCircle/i)){this.MagicCircle()};
if(rip=stats.match(/Major\sImage/i)){this.MajorImage()};
if(rip=stats.match(/Mass\sHealing\sWord/i)){this.MassHealingWord()};
if(rip=stats.match(/Meld\sInto\sStone/i)){this.MeldIntoStone()};
if(rip=stats.match(/Melf\’s\sMinute\sMeteors/i)){this.MelfsMinuteMeteors()};
if(rip=stats.match(/Nondetection/i)){this.Nondetection()};
if(rip=stats.match(/Phantom\sSteed/i)){this.PhantomSteed()};
if(rip=stats.match(/Plant\sGrowth/i)){this.PlantGrowth()};
if(rip=stats.match(/Protection\sFrom\sEnergy/i)){this.ProtectionFromEnergy()};
if(rip=stats.match(/Remove\sCurse/i)){this.RemoveCurse()};
if(rip=stats.match(/Revivify/i)){this.Revivify()};
if(rip=stats.match(/Sending/i)){this.Sending()};
if(rip=stats.match(/Sleet\sStorm/i)){this.SleetStorm()};
if(rip=stats.match(/Slow\s/i)){this.Slow()};
if(rip=stats.match(/Speak\sWith\sDead/i)){this.SpeakWithDead()};
if(rip=stats.match(/Speak\sWith\sPlants/i)){this.SpeakWithPlants()};
if(rip=stats.match(/Spirit\sGuardians/i)){this.SpiritGuardians()};
if(rip=stats.match(/Stinking\sCloud/i)){this.StinkingCloud()};
if(rip=stats.match(/Summon\sLesser\sDemons/i)){this.SummonLesserDemons()};
if(rip=stats.match(/Thunder\sStep/i)){this.ThunderStep()};
if(rip=stats.match(/Tidal\sWave/i)){this.TidalWave()};
if(rip=stats.match(/Tiny\sServant/i)){this.TinyServant()};
if(rip=stats.match(/Tongues/i)){this.Tongues()};
if(rip=stats.match(/Vampiric\sTouch/i)){this.VampiricTouch()};
if(rip=stats.match(/Wall\sOf\sSand/i)){this.WallOfSand()};
if(rip=stats.match(/Wall\sOf\sWater/i)){this.WallOfWater()};
if(rip=stats.match(/Water\sBreathing/i)){this.WaterBreathing()};
if(rip=stats.match(/Water\sWalk/i)){this.WaterWalk()};
if(rip=stats.match(/Wind\sWall/i)){this.WindWall()};
}

if(rip=stats.match(/4th level/i))
{
if(rip=stats.match(/Arcane\sEye/i)){this.ArcaneEye()};
if(rip=stats.match(/Aura\sOf\sLife/i)){this.AuraOfLife()};
if(rip=stats.match(/Aura\sOf\sPurity/i)){this.AuraOfPurity()};
if(rip=stats.match(/Banishment/i)){this.Banishment()};
if(rip=stats.match(/Blight/i)){this.Blight()};
if(rip=stats.match(/Charm\sMonster/i)){this.CharmMonster()};
if(rip=stats.match(/Compulsion/i)){this.Compulsion()};
if(rip=stats.match(/Confusion/i)){this.Confusion()};
if(rip=stats.match(/Conjure\sMinor\sElementals/i)){this.ConjureMinorElementals()};
if(rip=stats.match(/Conjure\sWoodland\sBeings/i)){this.ConjureWoodlandBeings()};
if(rip=stats.match(/Control\sWater/i)){this.ControlWater()};
if(rip=stats.match(/Death\sWard/i)){this.DeathWard()};
if(rip=stats.match(/Dimension\sDoor/i)){this.DimensionDoor()};
if(rip=stats.match(/Divination/i)){this.Divination()};
if(rip=stats.match(/Dominate\sBeast/i)){this.DominateBeast()};
if(rip=stats.match(/Elemental\sBane/i)){this.ElementalBane()};
if(rip=stats.match(/Evard\’s\sBlack\sTentacles/i)){this.EvardsBlackTentacles()};
if(rip=stats.match(/Fabricate/i)){this.Fabricate()};
if(rip=stats.match(/Find\sGreater\sSteed/i)){this.FindGreaterSteed()};
if(rip=stats.match(/Fire\sShield/i)){this.FireShield()};
if(rip=stats.match(/Freedom\sOf\sMovement/i)){this.FreedomOfMovement()};
if(rip=stats.match(/Giant\sInsect/i)){this.GiantInsect()};
if(rip=stats.match(/Grasping\sVine/i)){this.GraspingVine()};
if(rip=stats.match(/Greater\sInvisibility/i)){this.GreaterInvisibility()};
if(rip=stats.match(/Guardian\sOf\sFaith\s/i)){this.GuardianOfFaith()};
if(rip=stats.match(/Guardian\sOf\sNature/i)){this.GuardianOfNature()};
if(rip=stats.match(/Hallucinatory\sTerrain/i)){this.HallucinatoryTerrain()};
if(rip=stats.match(/Ice\sStorm/i)){this.IceStorm()};
if(rip=stats.match(/Leomund\’s\sSecret\sChest/i)){this.LeomundsSecretChest()};
if(rip=stats.match(/Locate\sCreature/i)){this.LocateCreature()};
if(rip=stats.match(/Mordenkainen\’s\sFaithful\sHound/i)){this.MordenkainensFaithfulHound()};
if(rip=stats.match(/Mordenkainen\’s\sPrivate\sSanctum/i)){this.MordenkainensPrivateSanctum()};
if(rip=stats.match(/Otiluke\’s\sResilient\sSphere/i)){this.OtilukesResilientSphere()};
if(rip=stats.match(/Phantasmal\sKiller/i)){this.PhantasmalKiller()};
if(rip=stats.match(/Polymorph/i)){this.Polymorph()};
if(rip=stats.match(/Shadow\sOf\sMoil/i)){this.ShadowOfMoil()};
if(rip=stats.match(/Sickening\sRadiance/i)){this.SickeningRadiance()};
if(rip=stats.match(/Staggering\sSmite/i)){this.StaggeringSmite()};
if(rip=stats.match(/Stone\sShape/i)){this.StoneShape()};
if(rip=stats.match(/Stoneskin/i)){this.Stoneskin()};
if(rip=stats.match(/Storm\sSphere/i)){this.StormSphere()};
if(rip=stats.match(/Summon\sGreater\sDemon/i)){this.SummonGreaterDemon()};
if(rip=stats.match(/Vitriolic\sSphere/i)){this.VitriolicSphere()};
if(rip=stats.match(/Wall\sOf\sFire/i)){this.WallOfFire()};
if(rip=stats.match(/Watery\sSphere/i)){this.WaterySphere()};
}

if(rip=stats.match(/5th level/i))
{
if(rip=stats.match(/Animate\sObjects/i)){this.AnimateObjects()};
if(rip=stats.match(/Antilife\sShell/i)){this.AntilifeShell()};
if(rip=stats.match(/Awaken/i)){this.Awaken()};
if(rip=stats.match(/Banishing\sSmite/i)){this.BanishingSmite()};
if(rip=stats.match(/Bigby\’s\sHand/i)){this.BigbysHand()};
if(rip=stats.match(/Circle\sOf\sPower/i)){this.CircleOfPower()};
if(rip=stats.match(/Cloudkill/i)){this.Cloudkill()};
if(rip=stats.match(/Commune/i)){this.Commune()};
if(rip=stats.match(/Commune\sWith\sNature/i)){this.CommuneWithNature()};
if(rip=stats.match(/Cone\sOf\sCold/i)){this.ConeOfCold()};
if(rip=stats.match(/Conjure\sElemental\s/i)){this.ConjureElemental()};
if(rip=stats.match(/Conjure\sVolley/i)){this.ConjureVolley()};
if(rip=stats.match(/Contact\sOther\sPlane/i)){this.ContactOtherPlane()};
if(rip=stats.match(/Contagion/i)){this.Contagion()};
if(rip=stats.match(/Control\sWinds/i)){this.ControlWinds()};
if(rip=stats.match(/Creation/i)){this.Creation()};
if(rip=stats.match(/Danse\sMacabre/i)){this.DanseMacabre()};
if(rip=stats.match(/Dawn\s/i)){this.Dawn()};
if(rip=stats.match(/Destructive\sWave/i)){this.DestructiveWave()};
if(rip=stats.match(/Dispel\sEvil\sAnd\sGood/i)){this.DispelEvilAndGood()};
if(rip=stats.match(/Dominate\sPerson/i)){this.DominatePerson()};
if(rip=stats.match(/Dream/i)){this.Dream()};
if(rip=stats.match(/Enervation/i)){this.Enervation()};
if(rip=stats.match(/Far\sStep/i)){this.FarStep()};
if(rip=stats.match(/Flame\sStrike/i)){this.FlameStrike()};
if(rip=stats.match(/Geas\s/i)){this.Geas()};
if(rip=stats.match(/Greater\sRestoration/i)){this.GreaterRestoration()};
if(rip=stats.match(/Hallow/i)){this.Hallow()};
if(rip=stats.match(/Hold\sMonster/i)){this.HoldMonster()};
if(rip=stats.match(/Holy\sWeapon/i)){this.HolyWeapon()};
if(rip=stats.match(/Immolation/i)){this.Immolation()};
if(rip=stats.match(/Infernal\sCalling/i)){this.InfernalCalling()};
if(rip=stats.match(/Insect\sPlague/i)){this.InsectPlague()};
if(rip=stats.match(/Legend\sLore/i)){this.LegendLore()};
if(rip=stats.match(/Maelstrom/i)){this.Maelstrom()};
if(rip=stats.match(/Mass\sCure\sWounds/i)){this.MassCureWounds()};
if(rip=stats.match(/Mislead/i)){this.Mislead()};
if(rip=stats.match(/Modify\sMemory/i)){this.ModifyMemory()};
if(rip=stats.match(/Negative\sEnergy\sFlood/i)){this.NegativeEnergyFlood()};
if(rip=stats.match(/Passwall/i)){this.Passwall()};
if(rip=stats.match(/Planar\sBinding/i)){this.PlanarBinding()};
if(rip=stats.match(/Raise\sDead/i)){this.RaiseDead()};
if(rip=stats.match(/Rary\’s\sTelepathic\sBond/i)){this.RarysTelepathicBond()};
if(rip=stats.match(/Reincarnate/i)){this.Reincarnate()};
if(rip=stats.match(/Scrying/i)){this.Scrying()};
if(rip=stats.match(/Seeming/i)){this.Seeming()};
if(rip=stats.match(/Skill\sEmpowerment/i)){this.SkillEmpowerment()};
if(rip=stats.match(/Steel\sWind\sStrike/i)){this.SteelWindStrike()};
if(rip=stats.match(/Swift\sQuiver/i)){this.SwiftQuiver()};
if(rip=stats.match(/Synaptic\sStatic/i)){this.SynapticStatic()};
if(rip=stats.match(/Telekinesis/i)){this.Telekinesis()};
if(rip=stats.match(/Teleportation\sCircle/i)){this.TeleportationCircle()};
if(rip=stats.match(/Transmute\sRock/i)){this.TransmuteRock()};
if(rip=stats.match(/Tree\sStride/i)){this.TreeStride()};
if(rip=stats.match(/Wall\sOf\sForce/i)){this.WallOfForce()};
if(rip=stats.match(/Wall\sOf\sLight/i)){this.WallOfLight()};
if(rip=stats.match(/Wall\sOf\sStone/i)){this.WallOfStone()};
if(rip=stats.match(/Wrath\sOf\sNature/i)){this.WrathOfNature()};
}

if(rip=stats.match(/6th level/i))
{
if(rip=stats.match(/Arcane\sGate/i)){this.ArcaneGate()};
if(rip=stats.match(/Blade\sBarrier/i)){this.BladeBarrier()};
if(rip=stats.match(/Bones\sOf\sThe\sEarth/i)){this.BonesOfTheEarth()};
if(rip=stats.match(/Chain\sLightning/i)){this.ChainLightning()};
if(rip=stats.match(/Circle\sOf\sDeath/i)){this.CircleOfDeath()};
if(rip=stats.match(/Conjure\sFey/i)){this.ConjureFey()};
if(rip=stats.match(/Contingency/i)){this.Contingency()};
if(rip=stats.match(/Create\sHomunculus\s/i)){this.CreateHomunculus()};
if(rip=stats.match(/Create\sUndead/i)){this.CreateUndead()};
if(rip=stats.match(/Disintegrate/i)){this.Disintegrate()};
if(rip=stats.match(/Drawmij\’s\sInstant\sSummons/i)){this.DrawmijsInstantSummons()};
if(rip=stats.match(/Druid\sGrove/i)){this.DruidGrove()};
if(rip=stats.match(/Eyebite/i)){this.Eyebite()};
if(rip=stats.match(/Find\sThe\sPath/i)){this.FindThePath()};
if(rip=stats.match(/Flesh\sTo\sStone/i)){this.FleshToStone()};
if(rip=stats.match(/Forbiddance/i)){this.Forbiddance()};
if(rip=stats.match(/Globe\sOf\sInvulnerability/i)){this.GlobeOfInvulnerability()};
if(rip=stats.match(/Guards\sAnd\sWards/i)){this.GuardsAndWards()};
if(rip=stats.match(/Harm/i)){this.Harm()};
if(rip=stats.match(/Heal/i)){this.Heal()};
if(rip=stats.match(/Heroes’\sFeast/i)){this.HeroesFeast()};
if(rip=stats.match(/Investiture\sOf\sFlame/i)){this.InvestitureOfFlame()};
if(rip=stats.match(/Investiture\sOf\sIce/i)){this.InvestitureOfIce()};
if(rip=stats.match(/Investiture\sOf\sStone/i)){this.InvestitureOfStone()};
if(rip=stats.match(/Investiture\sOf\sWind/i)){this.InvestitureOfWind()};
if(rip=stats.match(/Magic\sJar/i)){this.MagicJar()};
if(rip=stats.match(/Mass\sSuggestion/i)){this.MassSuggestion()};
if(rip=stats.match(/Mental\sPrison/i)){this.MentalPrison()};
if(rip=stats.match(/Move\sEarth/i)){this.MoveEarth()};
if(rip=stats.match(/Otiluke\’s\sFreezing\sSphere/i)){this.OtilukesFreezingSphere()};
if(rip=stats.match(/Otto\’s\sIrresistible\sDance/i)){this.OttosIrresistibleDance()};
if(rip=stats.match(/Planar\sAlly/i)){this.PlanarAlly()};
if(rip=stats.match(/Primordial\sWard/i)){this.PrimordialWard()};
if(rip=stats.match(/Primordial\sWard/i)){this.PrimordialWard()};
if(rip=stats.match(/Programmed\sIllusion/i)){this.ProgrammedIllusion()};
if(rip=stats.match(/Scatter/i)){this.Scatter()};
if(rip=stats.match(/Soul\sCage/i)){this.SoulCage()};
if(rip=stats.match(/Sunbeam/i)){this.Sunbeam()};
if(rip=stats.match(/Tenser\’s\sTransformation/i)){this.TensersTransformation()};
if(rip=stats.match(/Transport\sVia\sPlants/i)){this.TransportViaPlants()};
if(rip=stats.match(/True\sSeeing/i)){this.TrueSeeing()};
if(rip=stats.match(/Wall\sOf\sIce/i)){this.WallOfIce()};
if(rip=stats.match(/Wall\sOf\sThorns/i)){this.WallOfThorns()};
if(rip=stats.match(/Wind\sWalk/i)){this.WindWalk()};
if(rip=stats.match(/Word\sOf\sRecall/i)){this.WordOfRecall()};
}

if(rip=stats.match(/7th level/i))
{
if(rip=stats.match(/Conjure\sCelestial\s/i)){this.ConjureCelestial()};
if(rip=stats.match(/Crown\sOf\sStars/i)){this.CrownOfStars()};
if(rip=stats.match(/Delayed\sBlast\sFireball/i)){this.DelayedBlastFireball()};
if(rip=stats.match(/Divine\sWord/i)){this.DivineWord()};
if(rip=stats.match(/Etherealness/i)){this.Etherealness()};
if(rip=stats.match(/Finger\sOf\sDeath/i)){this.FingerOfDeath()};
if(rip=stats.match(/Fire\sStorm/i)){this.FireStorm()};
if(rip=stats.match(/Forcecage/i)){this.Forcecage()};
if(rip=stats.match(/Mirage\sArcane/i)){this.MirageArcane()};
if(rip=stats.match(/Mordenkainen\’s\sMagnificent\sMansion/i)){this.MordenkainensMagnificentMansion()};
if(rip=stats.match(/Mordenkainen\’s\sSword/i)){this.MordenkainensSword()};
if(rip=stats.match(/Plane\sShift/i)){this.PlaneShift()};
if(rip=stats.match(/Power\sWord\sPain/i)){this.PowerWordPain()};
if(rip=stats.match(/Prismatic\sSpray/i)){this.PrismaticSpray()};
if(rip=stats.match(/Project\sImage/i)){this.ProjectImage()};
if(rip=stats.match(/Regenerate/i)){this.Regenerate()};
if(rip=stats.match(/Resurrection/i)){this.Resurrection()};
if(rip=stats.match(/Reverse\sGravity/i)){this.ReverseGravity()};
if(rip=stats.match(/Sequester/i)){this.Sequester()};
if(rip=stats.match(/Simulacrum/i)){this.Simulacrum()};
if(rip=stats.match(/Symbol/i)){this.Symbol()};
if(rip=stats.match(/Teleport/i)){this.Teleport()};
if(rip=stats.match(/Temple\sOf\sThe\sGods/i)){this.TempleOfTheGods()};
if(rip=stats.match(/Whirlwind/i)){this.Whirlwind()};
}

if(rip=stats.match(/8th level/i))
{
if(rip=stats.match(/AbiDalzim\’s\sHorrid\sWilting/i)){this.AbiDalzimsHorridWilting()};
if(rip=stats.match(/Animal\sShapes/i)){this.AnimalShapes()};
if(rip=stats.match(/Antimagic\sField/i)){this.AntimagicField()};
if(rip=stats.match(/Antipathy\sSympathy/i)){this.AntipathySympathy()};
if(rip=stats.match(/Clone/i)){this.Clone()};
if(rip=stats.match(/Control\sWeather/i)){this.ControlWeather()};
if(rip=stats.match(/Demiplane/i)){this.Demiplane()};
if(rip=stats.match(/Dominate\sMonster/i)){this.DominateMonster()};
if(rip=stats.match(/Earthquake/i)){this.Earthquake()};
if(rip=stats.match(/Feeblemind/i)){this.Feeblemind()};
if(rip=stats.match(/Glibness/i)){this.Glibness()};
if(rip=stats.match(/Holy\sAura/i)){this.HolyAura()};
if(rip=stats.match(/Illusory\sDragon/i)){this.IllusoryDragon()};
if(rip=stats.match(/Incendiary\sCloud/i)){this.IncendiaryCloud()};
if(rip=stats.match(/Maddening\sDarkness/i)){this.MaddeningDarkness()};
if(rip=stats.match(/Maze\s/i)){this.Maze()};
if(rip=stats.match(/Mighty\sFortress/i)){this.MightyFortress()};
if(rip=stats.match(/Mind\sBlank/i)){this.MindBlank()};
if(rip=stats.match(/Power\sWord\sStun/i)){this.PowerWordStun()};
if(rip=stats.match(/Sunburst/i)){this.Sunburst()};
if(rip=stats.match(/Telepathy/i)){this.Telepathy()};
if(rip=stats.match(/Trap\sThe\sSoul/i)){this.TrapTheSoul()};
if(rip=stats.match(/Tsunami/i)){this.Tsunami()};
}

if(rip=stats.match(/9th level/i))
{
if(rip=stats.match(/Astral\sProjection/i)){this.AstralProjection()};
if(rip=stats.match(/Foresight/i)){this.Foresight()};
if(rip=stats.match(/Gate\s/i)){this.Gate()};
if(rip=stats.match(/Imprisonment/i)){this.Imprisonment()};
if(rip=stats.match(/Invulnerability/i)){this.Invulnerability()};
if(rip=stats.match(/Mass\sHeal/i)){this.MassHeal()};
if(rip=stats.match(/Mass\sPolymorph/i)){this.MassPolymorph()};
if(rip=stats.match(/Meteor\sSwarm/i)){this.MeteorSwarm()};
if(rip=stats.match(/Power\sWord\sHeal/i)){this.PowerWordHeal()};
if(rip=stats.match(/Power\sWord\sKill/i)){this.PowerWordKill()};
if(rip=stats.match(/Prismatic\sWall/i)){this.PrismaticWall()};
if(rip=stats.match(/Psychic\sScream/i)){this.PsychicScream()};
if(rip=stats.match(/Shapechange/i)){this.Shapechange()};
if(rip=stats.match(/Storm\sOf\sVengeance/i)){this.StormOfVengeance()};
if(rip=stats.match(/Time\sStop/i)){this.TimeStop()};
if(rip=stats.match(/True\sPolymorph/i)){this.TruePolymorph()};
if(rip=stats.match(/True\sResurrection/i)){this.TrueResurrection()};
if(rip=stats.match(/Weird/i)){this.Weird()};
if(rip=stats.match(/Wish/i)){this.Wish()};
}

if(rip=stats.match(/XP\)([\s\S]+)ACTIONS/))
{characters[targeted].setFeatureNotes(rip[1].replace(/\./g, '\.\n'))}

checkTheTarget();
}
function _addRoll(name, roll, name2, roll2)
{x=this.rolls.length;
this.rolls[x]=roll;
this.rollNames[x]=name;
x=this.rolls2.length;
this.rolls2[x]=roll2;
this.rollNames2[x]=name2;
this.refresh()}
function _deleteRoll(i){this.rolls.splice(i, 1);
this.rollNames.splice(i, 1);
this.rolls2.splice(i, 1);
this.rollNames2.splice(i, 1);
this.refresh();
checkTheTarget()}
function _getSaveText(){this.updateXY();
varName="";
varName="pc";
varName+=Math.ceil(Math.random()*10000);
toSave="\/\/"+this.name+"<br>";
toSave+=varName+"=new Character('"+this.name+"', '"+this.type+"')<br>";
for(var i=0; i<this.rolls.length; i++){toSave+=varName+".addRoll('"+this.rollNames[i]+"', '"+this.rolls[i]+"', '"+this.rollNames2[i]+"', '"+this.rolls2[i]+"')<br>"
}toSave+=varName+".putAt(\'"+this.x+"\', \'"+this.y+"\' )<br>";
toSave+=varName+".setClass('"+this.class+"')<br>";
toSave+=varName+".setLvl('"+this.lvl+"')<br>";
toSave+=varName+".setRace('"+this.race+"')<br>";
toSave+=varName+".setBackground('"+this.background+"')<br>";
toSave+=varName+".setAbility('"+this.ability+"')<br>";
toSave+=varName+".setAC("+this.ac+")<br>";
toSave+=varName+".setAcrobatics('"+this.acrobatics+"')<br>";
toSave+=varName+".setAlignment('"+this.alignment+"')<br>";
toSave+=varName+".setAnimal('"+this.animal+"')<br>";
toSave+=varName+".setArmor('"+this.armor+"')<br>";
toSave+=varName+".setArcana('"+this.arcana+"')<br>";
toSave+=varName+".setAthletics('"+this.athletics+"')<br>";
toSave+=varName+".setBackF('"+this.backF+"')<br>";
toSave+=varName+".setBackL('"+this.backL+"')<br>";
toSave+=varName+".setBackS('"+this.backS+"')<br>";
toSave+=varName+".setBackT('"+this.backT+"')<br>";
toSave+=varName+".setBonds('"+this.bonds+"')<br>";
toSave+=varName+".setCha("+this.cha+")<br>";
toSave+=varName+".setChaPro('"+this.chaPro+"')<br>";
toSave+=varName+".setCon("+this.con+")<br>";
toSave+=varName+".setConPro('"+this.conPro+"')<br>";
toSave+=varName+".setCurHp("+this.curHp+")<br>";
toSave+=varName+".setDeception('"+this.deception+"')<br>";
toSave+=varName+".setDex("+this.dex+")<br>";
toSave+=varName+".setDexPro('"+this.dexPro+"')<br>";
toSave+=varName+".setEquipment('"+this.equipment+"')<br>";
toSave+=varName+".setExperience('"+this.experience+"')<br>";
toSave+=varName+".setFeats('"+this.feats+"')<br>";
toSave+=varName+".setActionNotes('"+this.actionNotes+"')<br>";
toSave+=varName+".setFeatureNotes('"+this.featureNotes+"')<br>";
toSave+=varName+".setFigure('"+this.figure+"')<br>";
toSave+=varName+".setFlaws('"+this.flaws+"')<br>";
toSave+=varName+".setHistory('"+this.history+"')<br>";
toSave+=varName+".setHitDice('"+this.hitDice+"')<br>";
toSave+=varName+".setIdeals('"+this.ideals+"')<br>";
if(!isNaN(this.init)){toSave+=varName+".setInit("+this.init+")<br>"
}toSave+=varName+".setImmunity('"+this.immunity+"')<br>";
toSave+=varName+".setInitBonus('"+this.initBonus+"')<br>";
toSave+=varName+".setInsight('"+this.insight+"')<br>";
toSave+=varName+".setInt("+this.inte+")<br>";
toSave+=varName+".setIntimidation('"+this.intimidation+"')<br>";
toSave+=varName+".setIntPro('"+this.intPro+"')<br>";
toSave+=varName+".setInvestigation('"+this.investigation+"')<br>";
toSave+=varName+".setLanguages('"+this.languages+"')<br>";
toSave+=varName+".setMaxHp("+this.maxHp+")<br>";
toSave+=varName+".setCurHp("+this.curHp+")<br>";
toSave+=varName+".setMedicine('"+this.medicine+"')<br>";
toSave+=varName+".setNature('"+this.nature+"')<br>";
toSave+=varName+".setPerception('"+this.perception+"')<br>";
toSave+=varName+".setPerformance('"+this.performance+"')<br>";
toSave+=varName+".setPersuasion('"+this.persuasion+"')<br>";
toSave+=varName+".setPro('"+this.pro+"')<br>";
toSave+=varName+".setProficiencies('"+this.proficiencies+"')<br>";
toSave+=varName+".setProficienciesRace('"+this.proficienciesRace+"')<br>";
toSave+=varName+".setReligion('"+this.religion+"')<br>";
toSave+=varName+".setResistance('"+this.resistance+"')<br>";
toSave+=varName+".setSaving('"+this.saving+"')<br>";
toSave+=varName+".setSenses('"+this.senses+"')<br>";
toSave+=varName+".setShield('"+this.shield+"')<br>";
toSave+=varName+".setSize('"+this.size+"')<br>";
toSave+=varName+".setSleight('"+this.sleight+"')<br>";
toSave+=varName+".setSkills('"+this.skills+"')<br>";
toSave+=varName+".setSpeed('"+this.speed+"')<br>";
toSave+=varName+".setSpellAbility('"+this.spellAbility+"')<br>";
toSave+=varName+".setSpellAbilityNumber('"+this.spellAbilityNumber+"')<br>";
toSave+=varName+".setStealth('"+this.stealth+"')<br>";
toSave+=varName+".setStr("+this.str+")<br>";
toSave+=varName+".setStrPro('"+this.strPro+"')<br>";
toSave+=varName+".setSurvival('"+this.survival+"')<br>";
toSave+=varName+".setTrait('"+this.trait+"')<br>";
toSave+=varName+".setVulnerability('"+this.vulnerability+"')<br>";
toSave+=varName+".setWis("+this.wis+")<br>";
toSave+=varName+".setWisPro('"+this.wisPro+"')<br>";
toSave+=varName+".setDamageConditions('"+this.dmgConditions+"')<br>";
toSave+=varName+".setCurSlot1("+this.curSlot1+")<br>";
toSave+=varName+".setCurSlot2("+this.curSlot2+")<br>";
toSave+=varName+".setCurSlot3("+this.curSlot3+")<br>";
toSave+=varName+".setCurSlot4("+this.curSlot4+")<br>";
toSave+=varName+".setCurSlot5("+this.curSlot5+")<br>";
toSave+=varName+".setCurSlot6("+this.curSlot6+")<br>";
toSave+=varName+".setCurSlot7("+this.curSlot7+")<br>";
toSave+=varName+".setCurSlot8("+this.curSlot8+")<br>";
toSave+=varName+".setCurSlot9("+this.curSlot9+")<br>";
if(this.menuShown){toSave+=varName+".showMenu()"
}toSave+="add("+varName+")<br>";
toSave+="\/\/End of "+this.name+"<br>";
return toSave
}
function _hide(){document.getElementById(this.elementId).style.visibility="hidden"
}
function _hideBox(){this.box.hide()}
function _hideMenu(){this.menu.hide();
this.menuShown=false
}
function _putAt(x, y){this.x=x;
this.y=y;
document.getElementById(this.elementId).style.top=y;
document.getElementById(this.elementId).style.left=x
}
function _putCharAt(x, y){this.x=x;
this.y=y;
numX=x.substring(0, x.length - 2);
menuX=(numX / 1+characterBoxWidth)+"px";
this.box.putAt(x, y);
this.menu.putAt(menuX, y)}$("input[name='id_radioname']").on('change', function(e){var value=$("input[name='id_radioname']:checked").val();
localStorage.setItem('option', value);
location.reload()})
function _ref(){boxContents="<img src='"+this.figure+"'>";
boxContents+="<table><tr><td class='piece'>"+this.name;
boxContents+="</td></tr><tr><td class='piece'>(Init)iative:"+this.init;
boxContents+="</td></tr><tr><td class='piece'>Target?<input id='targeted"+this.index+"' name='targeted' onClick='targeted="+this.index+"' type='radio'>"
boxContents+="</td></tr><tr><td class='piece'>HP:"+this.maxHp+"/"+this.curHp;
boxContents+="</td></tr><tr><td class='piece'><input class='piece' onClick='toggleTab1("+this.index+");checkTheTarget("+this.index+")' type='button' value='Show Stats?'>";

boxContents+="</td></tr></table></span><span id=toggled1"+this.index+" style='display:"+this.toggled1+"'>"

boxContents+="<table><tr><td>"
boxContents+="<table><tr><td>tmp hp:"+this.tempHp;
boxContents+="</td></tr><tr><td>dmg?<input class='piece' maxLength='3' onChange='characters["+this.index+"].setDmg(this.value);checkTheTarget("+this.index+")'size='3' type='text'>";
boxContents+="</td></tr><tr><td>heal?<input class='piece' maxLength='3' onChange='characters["+this.index+"].setHealing(this.value);checkTheTarget("+this.index+")'size='3' type='text'>";
boxContents+="</td></tr><tr><td><input onClick='toggleTab2("+this.index+");checkTheTarget("+this.index+")' type='button' value='AC, HP?'>";
boxContents+="</td></tr><tr><td><input onClick='toggleTab3("+this.index+");checkTheTarget("+this.index+")' type='button' value=' Abilities?'>";
boxContents+="</td></tr><tr><td><input onClick='toggleTab4("+this.index+");checkTheTarget("+this.index+")' type='button' value=' Actions?'>";
boxContents+="</td></tr><tr><td><input onClick='toggleTab5("+this.index+");checkTheTarget("+this.index+")' type='button' value=' Background?'>";
boxContents+="</td></tr><tr><td><input onClick='toggleTab6("+this.index+");checkTheTarget("+this.index+")' type='button' value=' Class?'>";

boxContents+="</td></tr></table></span></td><td><span id=toggled2"+this.index+" style='display:"+this.toggled2+"'>";

boxContents+="<table><tr><td><b>Name:</b> <input class=name maxLength='200' onChange='characters["+this.index+"].setName(this.value)' placeHolder='Name'size='40' type='text' value='"+this.name+"'>";
boxContents+="<br>Miniature File:<input maxLength='200' onChange='characters["+this.index+"].setFigure(this.value)'placeHolder='*.png'size='40' type='text' value='"+this.figure+"'>";
boxContents+="</td></tr><tr><td><b>Size:</b> <select onChange='characters["+this.index+"].setSize(this.value);checkTheTarget("+this.index+")'><option>"+this.size+"<option>Tiny 2.5x2.5ft<option>Small 5x5ft<option>Medium 5x5ft<option>Large 10x10ft<option>Huge 15x15ft<option>Gargantuan 20x20ft+</select>";
boxContents+="</td></tr><tr><td><b>Race:</b> <select onChange='characters["+this.index+"].setRace(this.value)'><option>"+this.race+"<option>Aasimar, Fallen</option><option>Aasimar, Protector</option><option>Aasimar, Scourge</option><option>Bugbear<option>Dragonborn,Black<option>Dragonborn,Blue<option>Dragonborn,Brass<option>Dragonborn,Bronze<option>Dragonborn,Gold<option>Dragonborn,Green<option>Dragonborn,Red<option>Dragonborn,Silver<option>Dragonborn,White<option>Dwarf, Gray<option>Dwarf, Hill<option>Dwarf, Mountain<option>Elf, Dark<option>Elf, Half<option>Elf, High<option>Elf, Moon<option>Elf, Wood<option>Elf, Shadow<option>Firbolg<option>Gnome, Deep<option>Gnome, Forest<option>Gnome, Rock<option>Goblin<option>Halfling, Lightfoot<option>Halfling, Stout<option>Hobgoblin<option>Human<option>Kenku<option>Kobold<option>Orc<option>Orc, Half<option>Satyr<option>Tabaxi<option>Tiefling, Asmodeus<option>Tiefling, Baazebul<option>Tiefling, Dispater<option>Tiefling, Fierna<option>Tiefling, Glasya<option>Tiefling, Levistus<option>Tiefling, Mammon<option>Tiefling, Mephistopheles<option>Tiefling, Zariel<option>Yuan-Ti</select>";
boxContents+="<br>or other race: <input maxLength='200' onChange='characters["+this.index+"].setRace(this.value)' placeHolder='other race' size='40' type='ptext'>";
boxContents+="<br>Traits:(Gender, Age, Color, Height, Weight)<textArea cols='40' rows='3' onChange='characters["+this.index+"].setTrait(this.value)'placeHolder=''>"+this.trait+"</textarea>";
boxContents+="</td></tr><tr><td>Racial <b>Languages:</b> <input maxLength='200' onChange='characters["+this.index+"].setLanguages(this.value);checkTheTarget("+this.index+")' size='40' type='text' value='"+this.languages+"'>";
boxContents+="<br>Background Languages:<input maxLength='200' onChange='characters["+this.index+"].setBackL(this.value);checkTheTarget("+this.index+")' size='40' value='"+this.backL+"'>";
boxContents+="</td></tr><tr><td><b>Alignment: </b><select onChange='characters["+this.index+"].setAlignment(this.value)'><option>"+this.alignment+"<option>Lawful Good<option>Lawful Neutral<option>Lawful Evil<option>Neutral Good<option>Neutral<option>Neutral Evil<option>Chaotic Good<option>Chaotic Neutral<option>Chaotic Evil<option>Unaligned</select>";
boxContents+="<br>"+this.alignmentDescription;
boxContents+="</td></tr><tr><td><b>Armor Class(AC):</b> <input maxLength='2' onChange='characters["+this.index+"].setAC(this.value);checkTheTarget("+this.index+")' size='2' type='text' value="+this.ac+">/"+this.curAc;
boxContents+="<br>Armor Type:<select onChange='characters["+this.index+"].setArmor(this.value);checkTheTarget("+this.index+")'><option>"+this.armor+"<option>No Armor AC10+dex<option>Natural Armor<option>Padded AC11+dex Stealth @DisAdv<option>Leather AC11+dex<option>Studded AC12+dex<option>Hide AC12+dex max 2<option>Mage Armor AC13+dex<option>Chain Shirt AC13+dex max 2<option>Scale AC14+dex max 2 Stealth @DisAdv<option>Breastplate AC14+dex max 2<option>Half Plate AC15+dex max 2 Stealth @DisAdv<option>Ring AC14 Stealth @DisAdv<option>Chain Mail AC16 Stealth @DisAdv str13<option>Splint AC17 Stealth @DisAdv str15<option>Plate AC18 Stealth @DisAdv str15<option>Unarmored Defense AC10+dex+con<option>Unarmored Defense AC10+dex+wis</select>";
boxContents+="<br>or other Armor Type: <input maxLength='200' onChange='characters["+this.index+"].setArmor(this.value);checkTheTarget("+this.index+")' placeHolder='other armor or magical defense' size='40' type='text'>";
boxContents+="<br>Shield:<select onChange='characters["+this.index+"].setShield(this.value);checkTheTarget("+this.index+")'><option>"+this.shield+"<option>No Shield AC+0<option>Shield AC+2</select>";
boxContents+="<br>or other Defense: <input maxLength='200' onChange='characters["+this.index+"].setShield(this.value);checkTheTarget("+this.index+")' placeHolder='other shield or magical defense' size='40' type='text'>";
boxContents+="</td></tr><tr><td><b>Hit Points(HP):</b> <input maxLength='3' onChange='characters["+this.index+"].setMaxHp(this.value);checkTheTarget("+this.index+")' size='3' type='text' value="+this.maxHp+">";
boxContents+="/<input maxLength='3' onChange='characters["+this.index+"].setCurHp(this.value);checkTheTarget("+this.index+")' size='3' type='text' value="+this.curHp+">";
boxContents+="<br>Hit Dice(HD): <input maxLength='10' onChange='characters["+this.index+"].setHitDice(this.value);checkTheTarget("+this.index+")' placeHolder='XdY+Z' size=10 type='text' value='"+this.hitDice+"'>";
boxContents+="<br>Damage Conditions: (temp hp+10, ac-1, str+1, ini+3, blinded)<textArea cols='40' rows=2 onChange='characters["+this.index+"].setDamageConditions(this.value);checkTheTarget("+this.index+")'placeHolder=''>"+this.dmgConditions+"</textArea>"
boxContents+="<br><b>Vulnerability:(2Xdmg)</b> <input maxLength='200' onChange='characters["+this.index+"].setVulnerability(this.value);checkTheTarget("+this.index+")' size='40' value='"+this.vulnerability+"'>";
boxContents+="<br><b>Resistance:(1/2dmg)</b> <input maxLength='200' onChange='characters["+this.index+"].setResistance(this.value);checkTheTarget("+this.index+")' size='40' value='"+this.resistance+"'>";
boxContents+="<br><b>Immunity:(0dmg)</b> <input maxLength='200' onChange='characters["+this.index+"].setImmunity(this.value)' size='40' value='"+this.immunity+"'>";
boxContents+="</td></tr><tr><td><b>Senses:</b> <input maxLength='200' onChange='characters["+this.index+"].setSenses(this.value);checkTheTarget("+this.index+")' size='40' type='text' value='"+this.senses+"'>";
boxContents+="</td></tr><tr><td><b>Speed:</b> <input maxLength='200' onChange='characters["+this.index+"].setSpeed(this.value);checkTheTarget("+this.index+")' size='40' type='text' value='"+this.speed+"'>";
boxContents+="</td></tr><tr><td><b>Challenge Rating(CR)or Level(lvl):</b> <input maxLength='2' onChange='characters["+this.index+"].setLvl(this.value)' size=3 type='text' value="+this.lvl+">";
boxContents+="<br>Experience Points(XP):<input maxLength='8' onChange='characters["+this.index+"].setExperience(this.value)'size='8' type='text' value='"+this.experience+"'>";

boxContents+="</td></tr></table></span></td><td><span id=toggled3"+this.index+" style='display:"+this.toggled3+"'>";

boxContents+="<table><tr><td>"

boxContents+="Racial Proficiencies:<input maxLength='400' onChange='characters["+this.index+"].setProficienciesRace(this.value);checkTheTarget("+this.index+")' size='40' value='"+this.proficienciesRace+"'>";
boxContents+="</td></tr><tr><td>Background Proficiencies:<input maxLength='200' onChange='characters["+this.index+"].setBackT(this.value)' size='40' value='"+this.backT+"'>";
boxContents+="</td></tr><tr><td><input onClick='abi=1;abiMod=characters["+this.index+"].strMod;skillMod=characters["+this.index+"].strPro;abiRoll("+this.index+")'value='Roll (STR)ength?' type='button'><input maxLength='2' onChange='characters["+this.index+"].setStr(this.value);checkTheTarget("+this.index+")'size='2' type='text' value="+this.str+">/<mark>"+this.curStr+"</mark> mod:"+this.strMod+"+<select onChange='characters["+this.index+"].setStrPro(this.value);checkTheTarget("+this.index+")'><option>"+this.strPro+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=10;abiMod=characters["+this.index+"].strMod;skillMod=characters["+this.index+"].athletics;abiRoll("+this.index+")'value='Roll Athletics(str)?'type='button'>+<select onChange='characters["+this.index+"].setAthletics(this.value);checkTheTarget("+this.index+")'><option>"+this.athletics+"<option><option>pro<option>exp</select>";
boxContents+="</td></tr><tr><td>Carrying Capacity:"+this.carryingCapacity+"lbs";
boxContents+="</td></tr><tr><td>Drag, Lift, Push:"+this.dragLiftPush+"lbs";
boxContents+="</td></tr><tr><td>High Jump:"+this.highJump+"ft"
boxContents+="</td></tr><tr><td>Long Jump:"+this.longJump+"ft";
boxContents+="</td></tr><tr><td><input onClick='abi=2;abiMod=characters["+this.index+"].dexMod;skillMod=characters["+this.index+"].dexPro;abiRoll("+this.index+")'value='Roll (DEX)terity?' type='button'><input maxLength='2' onChange='characters["+this.index+"].setDex(this.value);checkTheTarget("+this.index+")'size='2' type='text' value="+this.dex+">/<mark>"+this.curDex+"</mark> mod:"+this.dexMod+"+<select onChange='characters["+this.index+"].setDexPro(this.value);checkTheTarget("+this.index+")'><option>"+this.dexPro+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input type='button' value='Roll (Init)iative?'onClick='askInit("+this.index+");checkTheTarget("+this.index+")'>"
boxContents+="</td></tr><tr><td>(Init)ative Bonus:<input maxLength='3' onChange='characters["+this.index+"].setInitBonus(this.value);checkTheTarget("+this.index+")'size='3' type='text' value="+this.initBonus+">/"+this.curIni;
boxContents+="</td></tr><tr><td><input onClick='abi=7;abiMod=characters["+this.index+"].dexMod;skillMod=characters["+this.index+"].acrobatics;abiRoll("+this.index+")'value='Roll Acrobatics(dex)?'type='button'>+<select onChange='characters["+this.index+"].setAcrobatics(this.value);checkTheTarget("+this.index+")'><option>"+this.acrobatics+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=22;abiMod=characters["+this.index+"].dexMod;skillMod=characters["+this.index+"].sleight;abiRoll("+this.index+")'value='Roll Sleight of Hand(dex)?'type='button'>+<select onChange='characters["+this.index+"].setSleight(this.value);checkTheTarget("+this.index+")'><option>"+this.sleight+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=23;abiMod=characters["+this.index+"].dexMod;skillMod=characters["+this.index+"].stealth;abiRoll("+this.index+")'value='Roll Stealth(dex)?'type='button'>+<select onChange='characters["+this.index+"].setStealth(this.value);checkTheTarget("+this.index+")'><option>"+this.stealth+"<option><option>pro<option>exp</select>";
boxContents+="</td></tr><tr><td><input onClick='abi=3;abiMod=characters["+this.index+"].conMod;skillMod=characters["+this.index+"].conPro;abiRoll("+this.index+")'value='Roll (CON)stitution?'type='button'><input maxLength='2' onChange='characters["+this.index+"].setCon(this.value);checkTheTarget("+this.index+")'size='2' type='text' value="+this.con+">/<mark>"+this.curCon+"</mark> mod:"+this.conMod+"+<select onChange='characters["+this.index+"].setConPro(this.value);checkTheTarget("+this.index+")'><option>"+this.conPro+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td>Hold Breath:"+(parseInt(this.conMod)+1)+"min"
boxContents+="</td></tr><tr><td>Suffocate:"+parseInt(this.conMod)+"min";
boxContents+="</td></tr><tr><td><input onClick='abi=4;abiMod=characters["+this.index+"].intMod;skillMod=characters["+this.index+"].intPro;abiRoll("+this.index+")'value='Roll (INT)elligence?'type='button'><input maxLength='2' onChange='characters["+this.index+"].setInt(this.value);checkTheTarget("+this.index+")'size='2' type='text' value="+this.inte+">/<mark>"+this.curInt+"</mark> mod:"+this.intMod+"+<select onChange='characters["+this.index+"].setIntPro(this.value);checkTheTarget("+this.index+")'><option>"+this.intPro+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=9;abiMod=characters["+this.index+"].intMod;skillMod=characters["+this.index+"].arcana;abiRoll("+this.index+")'value='Roll Arcana(int)?'type='button'>+<select onChange='characters["+this.index+"].setArcana(this.value);checkTheTarget("+this.index+")'><option>"+this.arcana+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=12;abiMod=characters["+this.index+"].intMod;skillMod=characters["+this.index+"].History;abiRoll("+this.index+")'value='Roll History(int)?'type='button'>+<select onChange='characters["+this.index+"].setHistory(this.value);checkTheTarget("+this.index+")'><option>"+this.history+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=15;abiMod=characters["+this.index+"].intMod;skillMod=characters["+this.index+"].investigation;abiRoll("+this.index+")'value='Roll Investigation(int)?'type='button'>+<select onChange='characters["+this.index+"].setInvestigation(this.value);checkTheTarget("+this.index+")'><option>"+this.investigation+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=17;abiMod=characters["+this.index+"].intMod;skillMod=characters["+this.index+"].nature;abiRoll("+this.index+")'value='Roll Nature(int)?'type='button'>+<select onChange='characters["+this.index+"].setNature(this.value);checkTheTarget("+this.index+")';checkTheTarget("+this.index+")><option>"+this.nature+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=21;abiMod=characters["+this.index+"].intMod;skillMod=characters["+this.index+"].religion;abiRoll("+this.index+")'value='Roll Religion(int)?'type='button'>+<select onChange='characters["+this.index+"].setReligion(this.value);checkTheTarget("+this.index+")'><option>"+this.religion+"<option><option>pro<option>exp</select>";
boxContents+="</td></tr><tr><td><input onClick='abi=5;abiMod=characters["+this.index+"].wisMod;skillMod=characters["+this.index+"].wisPro;abiRoll("+this.index+")'value='Roll (WIS)dom?'type='button'><input maxLength='2' onChange='characters["+this.index+"].setWis(this.value);checkTheTarget("+this.index+")'size='2' type='text' value="+this.wis+">/<mark>"+this.curWis+"</mark> mod:"+this.wisMod+"+<select onChange='characters["+this.index+"].setWisPro(this.value);checkTheTarget("+this.index+")'><option>"+this.wisPro+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=8;abiMod=characters["+this.index+"].wisMod;skillMod=characters["+this.index+"].animal;abiRoll("+this.index+")'value='Roll Animal Handling(wis)?'type='button'>+<select onChange='characters["+this.index+"].setAnimal(this.value);checkTheTarget("+this.index+")'><option>"+this.animal+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=13;abiMod=characters["+this.index+"].wisMod;skillMod=characters["+this.index+"].insight;abiRoll("+this.index+")'value='Roll Insight(wis)?'type='button'>+<select onChange='characters["+this.index+"].setInsight(this.value);checkTheTarget("+this.index+")'><option>"+this.insight+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=16;abiMod=characters["+this.index+"].wisMod;skillMod=characters["+this.index+"].medicine;abiRoll("+this.index+")'value='Roll Medicine(wis)?'type='button'>+<select onChange='characters["+this.index+"].setMedicine(this.value);checkTheTarget("+this.index+")'><option>"+this.medicine+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=18;abiMod=characters["+this.index+"].wisMod;skillMod=characters["+this.index+"].perception;abiRoll("+this.index+")'value='Roll Perception(wis)?'type='button'>+<select onChange='characters["+this.index+"].setPerception(this.value);checkTheTarget("+this.index+")'><option>"+this.perception+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=24;abiMod=characters["+this.index+"].wisMod;skillMod=characters["+this.index+"].survival;abiRoll("+this.index+")'value='Roll Survival(wis)?'type='button'>+<select onChange='characters["+this.index+"].setSurvival(this.value);checkTheTarget("+this.index+")'><option>"+this.survival+"<option><option>pro<option>exp</select> ";
boxContents+="</td></tr><tr><td><input onClick='abi=6;abiMod=characters["+this.index+"].chaMod;skillMod=characters["+this.index+"].chaPro;abiRoll("+this.index+")'value='Roll (CHA)risma?'type='button'><input maxLength='2' onChange='characters["+this.index+"].setCha(this.value);checkTheTarget("+this.index+")'size='2' type='text' value="+this.cha+">/<mark>"+this.curCha+"</mark> mod:"+this.chaMod+"+<select onChange='characters["+this.index+"].setChaPro(this.value);checkTheTarget("+this.index+")'><option>"+this.chaPro+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=11;abiMod=characters["+this.index+"].chaMod;skillMod=characters["+this.index+"].deception;abiRoll("+this.index+")'value='Roll Deception(cha)?'type='button'>+<select onChange='characters["+this.index+"].setDeception(this.value);checkTheTarget("+this.index+")'><option>"+this.deception+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=14;abiMod=characters["+this.index+"].chaMod;skillMod=characters["+this.index+"].intimidation;abiRoll("+this.index+")'value='Roll Intimidation(cha)?'type='button'>+<select onChange='characters["+this.index+"].setIntimidation(this.value);checkTheTarget("+this.index+")'><option>"+this.intimidation+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=19;abiMod=characters["+this.index+"].chaMod;skillMod=characters["+this.index+"].performance;abiRoll("+this.index+")'value='Roll Performance(cha)?'type='button'>+<select onChange='characters["+this.index+"].setPerformance(this.value);checkTheTarget("+this.index+")'><option>"+this.performance+"<option><option>pro<option>exp</select>"
boxContents+="</td></tr><tr><td><input onClick='abi=20;abiMod=characters["+this.index+"].chaMod;skillMod=characters["+this.index+"].persuasion;abiRoll("+this.index+")'value='Roll Persuasion(cha)?'type='button'>+<select onChange='characters["+this.index+"].setPersuasion(this.value);checkTheTarget("+this.index+")'><option>"+this.persuasion+"<option><option>pro<option>exp</select>";
boxContents+="</td></tr><tr><td>Racial Abilility Increases:<input maxLength='200' onChange='characters["+this.index+"].setAbility(this.value);checkTheTarget("+this.index+")' size='40' value='"+this.ability+"'>";
boxContents+="</td></tr><tr><td>Background Skills:<input maxLength='200' onChange='characters["+this.index+"].setBackS(this.value);checkTheTarget("+this.index+")' size='40' value='"+this.backS+"'>";
boxContents+="</td></tr><tr><td>Class Skills:<input maxLength='200' onChange='characters["+this.index+"].setSkills(this.value);checkTheTarget("+this.index+")' size='40' value='"+this.skills+"'>";
boxContents+="</td></tr><tr><td>Class Saving Throws:<input maxLength='200' onChange='characters["+this.index+"].setSaving(this.value);checkTheTarget("+this.index+")' size='40' value='"+this.saving+"'>";

boxContents+="</td></tr></table></span></td><td><span id=toggled4"+this.index+" style='display:"+this.toggled4+"'>";
boxContents+="<table class='tablesTogether'><tr><td><table><tr><td>Spell (Abi)lity:<select onChange='characters["+this.index+"].setSpellAbility(this.value);checkTheTarget("+this.index+")'><option>"+this.spellAbility+"<option>int<option>wis<option>cha</select>"+this.spellAbilityNumber;
boxContents+="</td></tr><tr><td>Level (Pro)ficiency:"+this.pro;
boxContents+="</td></tr><tr><td>(Sit)uation (Mod)ifier:<input maxLength='3' onChange='characters["+this.index+"].setSit(this.value);checkTheTarget("+this.index+")'size='3' type='text' value="+this.sit+">";
boxContents+="</td></tr><tr><td>ACTIONS<textArea cols='40' rows=2 onChange='characters["+this.index+"].setActionNotes(this.value);checkTheTarget("+this.index+")'placeHolder='Multiatks and SpellSlots'>"+this.actionNotes+"</textArea>"
boxContents+="</td></tr><tr><td>Feature Notes:<textArea cols='40' rows='2' onChange='characters["+this.index+"].setFeatureNotes(this.value)'placeHolder='Ability Score Increases, etc.'>"+this.featureNotes+"</textarea>";
if(this.class.match(/Arcane\sTrickster|Bard|Cleric|Druid|Eldritch|Paladin|Ranger|Sorcerer|Warlock|Wizard/))
{boxContents+="</td></tr><tr><td>1st Spell Lvl Slots: "+this.maxSlot1+"<input onClick='this.value="+(this.curSlot1-1)+";characters["+this.index+"].setCurSlot1(this.value);checkTheTarget("+this.index+")' type='button' value='Spend?'>"+this.curSlot1;
boxContents+="</td></tr><tr><td>2nd Spell Lvl Slots: "+this.maxSlot2+"<input onClick='this.value="+(this.curSlot2-1)+";characters["+this.index+"].setCurSlot2(this.value);checkTheTarget("+this.index+")' type='button' value='Spend?'>"+this.curSlot2;
boxContents+="</td></tr><tr><td>3rd Spell Lvl Slots: "+this.maxSlot3+"<input onClick='this.value="+(this.curSlot3-1)+";characters["+this.index+"].setCurSlot3(this.value);checkTheTarget("+this.index+")' type='button' value='Spend?'>"+this.curSlot3;
boxContents+="</td></tr><tr><td>4th Spell Lvl Slots: "+this.maxSlot4+"<input onClick='this.value="+(this.curSlot4-1)+";characters["+this.index+"].setCurSlot4(this.value);checkTheTarget("+this.index+")' type='button' value='Spend?'>"+this.curSlot4;
boxContents+="</td></tr><tr><td>5th Spell Lvl Slots: "+this.maxSlot5+"<input onClick='this.value="+(this.curSlot5-1)+";characters["+this.index+"].setCurSlot5(this.value);checkTheTarget("+this.index+")' type='button' value='Spend?'>"+this.curSlot5;
boxContents+="</td></tr><tr><td>6th Spell Lvl Slots: "+this.maxSlot6+"<input onClick='this.value="+(this.curSlot6-1)+";characters["+this.index+"].setCurSlot6(this.value);checkTheTarget("+this.index+")' type='button' value='Spend?'>"+this.curSlot6;
boxContents+="</td></tr><tr><td>7th Spell Lvl Slots: "+this.maxSlot7+"<input onClick='this.value="+(this.curSlot7-1)+";characters["+this.index+"].setCurSlot7(this.value);checkTheTarget("+this.index+")' type='button' value='Spend?'>"+this.curSlot7;
boxContents+="</td></tr><tr><td>8th Spell Lvl Slots: "+this.maxSlot8+"<input onClick='this.value="+(this.curSlot8-1)+";characters["+this.index+"].setCurSlot8(this.value);checkTheTarget("+this.index+")' type='button' value='Spend?'>"+this.curSlot8;
boxContents+="</td></tr><tr><td>9th Spell Lvl Slots: "+this.maxSlot9+"<input onClick='this.value="+(this.curSlot9-1)+";characters["+this.index+"].setCurSlot9(this.value);checkTheTarget("+this.index+")' type='button' value='Spend?'>"+this.curSlot9;
boxContents+="</td></tr><tr><td><img src='Decorations/GameTokens.png' width='50px'>";
boxContents+="Rest to earn back your spent game token slots.<input onClick='characters["+this.index+"].setCurSlot1("+this.maxSlot1+");characters["+this.index+"].setCurSlot2("+this.maxSlot2+");characters["+this.index+"].setCurSlot3("+this.maxSlot3+");characters["+this.index+"].setCurSlot4("+this.maxSlot4+");characters["+this.index+"].setCurSlot5("+this.maxSlot5+");characters["+this.index+"].setCurSlot6("+this.maxSlot6+");characters["+this.index+"].setCurSlot7("+this.maxSlot7+");characters["+this.index+"].setCurSlot8("+this.maxSlot8+");characters["+this.index+"].setCurSlot9("+this.maxSlot9+");checkTheTarget("+this.index+")' type='button' value='Take a rest?'>";
boxContents+="</td></tr><tr><td>Class Proficiencies:<input maxLength='200' onChange='characters["+this.index+"].setProficiencies(this.value);checkTheTarget("+this.index+")' size='40' value='"+this.proficiencies+"'>";
}
boxContents+="</td></tr></table></td><td><table><tr><td><h3>Combat Results</h3>"+this.combatLog;
boxContents+="</td></tr></table></td><td>"
boxContents+="<table><tr><td>Make a new roll?</td><td><input maxLength='200' onChange='characters["+this.index+"].setRollName1(this.value);checkTheTarget("+this.index+")'placeHolder='atkRollToHitName+Ability+pro SpellSlot RangeInFeet'size='40' type='text' value='"+this.rollName1+"'>"
boxContents+="</td><td><input maxLength='8' onChange='characters["+this.index+"].setRoll1(this.value);checkTheTarget("+this.index+")'placeHolder='XdY+Z'size='8' type='text' value="+this.roll1+">"
boxContents+="</td><td><input maxLength='200' onChange='characters["+this.index+"].setRollName2(this.value);checkTheTarget("+this.index+")'placeHolder=' dmgType+Ability and dmgConditions' size='40' type='text' value='"+this.rollName2+"'>"
boxContents+="</td><td><input maxLength='8' onChange='characters["+this.index+"].setRoll2(this.value);checkTheTarget("+this.index+")'placeHolder='XdY+Z'size='8' type='text' value="+this.roll2+">"
boxContents+="</td><td><input maxLength='8' onClick='addRollPrompt("+this.index+")'size='8' type='button' value='Add this roll?'>";
if(this.rolls.length===0){boxContents+="</td></tr><tr><td><i>No custom rolls listed.</i>"
}
else
{for(var i=0; i<this.rolls.length; i++){boxContents+="</td></tr><tr><td><input type='button' onClick='makeRoll("+this.index+", "+i+")'value='Roll?'>"
boxContents+="</td><td><input maxLength='200' onChange='characters["+this.index+"].rollNames["+i+"]=this.value' size='40' type='text' value='"+this.rollNames[i]+"'>";
boxContents+="</td><td><input maxLength='8' onChange='characters["+this.index+"].rolls["+i+"]=this.value' size='8' type='text' value='"+this.rolls[i]+"'>";
boxContents+="</td><td><input maxLength='200' onChange='characters["+this.index+"].rollNames2["+i+"]=this.value' size='40' type='text' value='"+this.rollNames2[i]+"'>";
boxContents+="</td><td><input maxLength='8' onChange='characters["+this.index+"].rolls2["+i+"]=this.value' size='8' type='text' value='"+this.rolls2[i]+"'>";
boxContents+="</td><td><input type='button' onClick='deleteRollPrompt("+this.index+", "+i+")'value='Delete this roll?'>"
}
}

boxContents+="</td></tr></table></td></tr></table></span></td><td><span id=toggled5"+this.index+" style='display:"+this.toggled5+"'>";

boxContents+="<table><tr><td>"
boxContents+="</td></tr><tr><td><a href='https://tetra-cube.com/dnd/dnd-char-gen.html' target='_blank'>Tetra-Cube.Com's Random Personality Generator</a>";
boxContents+="</td></tr><tr><td>Background:<select onChange='characters["+this.index+"].setBackground(this.value)'><option>"+this.background+"<option>Acolyte<option>Charlatan<option>City Investigator<option>City Watch<option>Cloistered Scholar<option>Courtier<option>Criminal, Blackmailer<option>Criminal, Burglar<option>Criminal, Enforcer<option>Criminal, Fence<option>Criminal, Highway Robber<option>Criminal, Hired Killer<option>Criminal, Pickpocket<option>Criminal, Smuggler<option>Criminal, Spy<option>Entertainer, Actor<option>Entertainer, Dancer<option>Entertainer, Fire-Eater<option>Entertainer, Gladiator<option>Entertainer, Instrumentalist<option>Entertainer, Jester<option>Entertainer, Juggler<option>Entertainer, Poet<option>Entertainer, Singer<option>Entertainer, Storyteller<option>Entertainer, Tumbler<option>Faction Agent<option>Folk Hero, Farmer<option>Guild, Alchemist<option>Guild, Brewer<option>Guild, Calligrapher<option>Guild, Carpenter<option>Guild, Cartographer<option>Guild, Cobbler<option>Guild, Cook<option>Guild Crafter<option>Guild, Glassblower<option>Guild, Jeweler<option>Guild, Leatherworker<option>Guild, Mason<option>Guild, Painter<option>Guild, Potter<option>Guild, Smith<option>Guild, Tinker<option>Guild, Weaver<option>Guild, or Woodcarver<option>Hermit<option>Noble, Knight<option>Noble, Retainer<option>Outlander, Bounty Hunter<option>Outlander, Exile<option>Outlander, Forester<option>Outlander, Guide<option>Outlander, Homesteader<option>Outlander, Hunter-Gatherer<option>Outlander, Pilgrim<option>Outlander, Trapper<option>Outlander, Tribal Marauder<option>Outlander, Tribal Nomad<option>Sage, Alchemist<option>Sage, Astronomer<option>Sage, Discredited Academic<option>Sage, Librarian<option>Sage, Professor<option>Sage, Researcher<option>Sage, Scribe<option>Sage, Wizard Apprentice<option>Sailor, Cartographer<option>Sailor, Pirate<option>Soldier, Cavalry<option>Soldier, Healer<option>Soldier, Infantry<option>Soldier, Officer<option>Soldier, Quartermaster<option>Soldier, Scout<option>Urchin</select>";
boxContents+="</td></tr><tr><td><input maxLength='200' onChange='characters["+this.index+"].setBackground(this.value)' placeHolder='other background' size='40' type='text'>";
boxContents+="</td></tr><tr><td>Background Features:<input maxLength='200' onChange='characters["+this.index+"].setBackF(this.value)' size='40' type='text' value='"+this.backF+"'>";
boxContents+="</td></tr><tr><td>Bonds:<textArea cols='40' rows='3' onChange='characters["+this.index+"].setBonds(this.value)'>"+this.bonds+"</textArea>";
boxContents+="</td></tr><tr><td>Flaws:<textArea cols='40' rows='3' onChange='characters["+this.index+"].setFlaws(this.value)'>"+this.flaws+"</textArea>";
boxContents+="</td></tr><tr><td>Ideals:<textArea cols='40' rows='3' onChange='characters["+this.index+"].setIdeals(this.value)'>"+this.ideals+"</textArea>";
boxContents+="</td></tr><tr><td>Feats:<textArea cols='40' rows='3' onChange='characters["+this.index+"].setFeats(this.value)'>"+this.feats+"</textArea>";
boxContents+="</td></tr><tr><td>Equipment:<textArea cols='40' rows='3' onChange='characters["+this.index+"].setEquipment(this.value)'>"+this.equipment+"</textArea>";
boxContents+="</td></tr><tr><td><input type='button' onClick='characters["+this.index+"].save();checkTheTarget("+this.index+")'value='Save this character?'>";
boxContents+="</td></tr><tr><td><input type='button' value='Delete this character?'onClick='removeChar("+this.index+");checkTheTarget("+this.index+")'>";

boxContents+="</td></tr></table></span></td><td><span id=toggled6"+this.index+" style='display:"+this.toggled6+"'>";

boxContents+="<table><tr><td>Class:<select onChange='characters["+this.index+"].setClass(this.value)'><option>"+this.class+"<option>Barbarian, Ancestral Guardian<option>Barbarian, Berserker<option>Barbarian, Storm Herald<option>Barbarian, Bear Totem Warrior<option>Barbarian, Eagle Totem Warrior<option>Barbarian, Wolf Totem Warrior<option>Barbarian, Zealot<option>Bard, Glamour<option>Bard, Lore<option>Bard, Satire</option><option>Bard, Swords<option>Bard, Valor<option>Bard, Whispers<option>Cleric, Arcana</option><option>Cleric, Death</option><option>Cleric, Forge<option>Cleric, Grave<option>Cleric, Knowledge<option>Cleric, Life<option>Cleric, Light<option>Cleric, Nature<option>Cleric, Tempest<option>Cleric, Trickery<option>Cleric, War<option>Druid, Arctic<option>Druid, Coast<option>Druid, Desert<option>Druid, Forest<option>Druid, Grassland<option>Druid, Moon<option>Druid, Mountain<option>Druid, Swamp<option>Druid, Underdark<option>Fighter, Arcane Archer<option>Fighter, Battle Master<option>Fighter, Cavalier<option>Fighter, Champion<option>Fighter, Eldritch Knight<option>Fighter, Samurai<option>Monk, Cobalt Soul</option><option>Monk, Drunken Master<option>Monk, Four Elements<option>Monk, Kensei<option>Monk, Open Hand<option>Monk, Shadow<option>Monk, Sun Soul<option>Paladin, Ancients<option>Paladin, Crown</option><option>Paladin, Devotion<option>Paladin, Oathbreaker<option>Paladin, Vengence<option>Ranger, Beast Master<option>Ranger, Fey Wanderer<option>Ranger, Hunter<option>Ranger, Monster Slayer<option>Ranger, Swarmkeeper<option>Rogue, Arcane Trickster<option>Rogue, Assassin<option>Rogue, Mastermind<option>Rogue, Phantom<option>Rogue, Thief<option>Rogue, Scout<option>Rogue, Soulknife<option>Rogue, Swashbuckler<option>Sorcerer, Draconic<option>Sorcerer, Fire<option>Sorcerer, Shadow Magic<option>Sorcerer, Storm<option>Sorcerer, Wild<option>Warlock, Archfey<option>Warlock, Fiend<option>Warlock,GenieOfAir<option>Warlock,GenieOfEarth<option>Warlock,GenieOfFire<option>Warlock,GenieOfWater<option>Warlock, Great Old Ones</option><option>Warlock, Hexblade</option><option>Warlock, Undying</option><option>Witch, White Magic</option><option>Witch, Black Magic</option><option>Wizard, Abjurer<option>Wizard, Bladesinger</option><option>Wizard, Conjurer<option>Wizard, Diviner<option>Wizard, Enchanter<option>Wizard, Evoker<option>Wizard, Illusionist<option>Wizard, Necromancer</option><option>Wizard, Theurgist<option>Wizard, Transmuter</select>";
boxContents+="</td></tr><tr><td><input maxLength='200' onChange='characters["+this.index+"].setClass(this.value)' placeHolder='other class' size='40' type='text'>";
boxContents+="</td></tr><tr><td>Class Features:"+this.features+"";
boxContents+="</td></tr></table></span></span>"
this.box.setContents(boxContents);
}
function _refresh(){document.getElementById(this.elementId).innerHTML=this.contents;
}
function _rollInit(){return d(20)+parseInt(this.curIni)+parseInt(this.sit)}
function _save(){toSave=this.getSaveText();showSavePrompt(this.name, toSave)}
function _setAbility(x){this.ability=x;
this.refresh()}
function _setAC(x){this.ac=x;
this.curAc=x;
this.refresh()}
function _setAlignment(x){this.alignment=x;
this.setAlignmentDescription(x);
if(this.alignment.match(/Neutral/i)){this.setAlignmentDescription("I will help others, but avoid serious personal risks or loyalties that don\'t benefit me.")}
if(this.alignment.match(/Chaotic Evil/i)){this.setAlignmentDescription("I violently follow my greed, hatred, or bloodlust, promoting my own freedom and control over others.")}
if(this.alignment.match(/Chaotic Good/i)){this.setAlignmentDescription("I follow my conscience regardless of others\' expectations. Freedom and compassion matter more than rules.")}
if(this.alignment.match(/Chaotic Neutral/i)){this.setAlignmentDescription("I follow my shifting whims with little concern about rules or later consequences.")}
if(this.alignment.match(/Lawful Evil/i)){this.setAlignmentDescription("I take what I want up to the maximum allowed by law or loyalty, promoting order and control over others.")}
if(this.alignment.match(/Lawful Good/i)){this.setAlignmentDescription("I do what s right as expected by society to promote order and compassion for all.")}
if(this.alignment.match(/Lawful Neutral/i)){this.setAlignmentDescription("I obey laws, traditions or my own strict code to promote order and society above all else.")}
if(this.alignment.match(/Neutral Evil/i)){this.setAlignmentDescription("I lack compassion and do whatever I want, promoting control over others above all else.")}
if(this.alignment.match(/Neutral Good/i)){this.setAlignmentDescription("I help others according to their needs and promote compassion above all else.")}
if(this.alignment.match(/Unaligned/i)){this.setAlignmentDescription("I act according to my instinct to survive and nurture my young.")}
this.refresh()}
function _setAlignmentDescription(x){this.alignmentDescription=x;
this.refresh()}
function _setArmor(x){this.armor=x;
this.refresh()}
function _setBackground(x){this.background=x;
if(this.background.match(/Acolyte/)){this.setBackF('Shelter of the Faithful');
this.setBackL('2 languages');
this.setBackS('Insight, Religion');
this.setBackT('')}
if(this.background.match(/City Investigator/)){this.setBackF('(Watchere s Eye)understand laws, posts and criminal guilds of any place');
this.setBackL('any 2');
this.setBackS('Athletics, Investigation');
this.setBackT('Uniform, Horn summoning help, Manacles, 10GP')}
if(this.background.match(/City Watch/)){this.setBackF('(Watchere s Eye)understand laws, posts and criminal guilds of any place');
this.setBackL('any 2');
this.setBackS('Athletics, Insight');
this.setBackT('Uniform, Horn summoning help, Manacles, 10GP')}
if(this.background.match(/Charlatan/)){this.setBackF('False Identity, Favorite Schemes');
this.setBackL('');
this.setBackS('Deception, Sleight of Hand');
this.setBackT('Disguise Kit, Forgery Kit')}
if(this.background.match(/Cloistered Scholar/)){this.setBackF('(Library Access)preferential treatment accessing lore');
this.setBackL('any 2');
this.setBackS('History and 1 from Arcana, Nature, Religion');
this.setBackT('Scholar Robes, Writing Kit, Borrowed book on current study, 10GP')}
if(this.background.match(/Courtier/)){this.setBackF('(Courtfunctionary)bureaucracy, access to records, current government interests and intrigues');
this.setBackL('any 2');
this.setBackS('Insight, Persuasion');
this.setBackT('Fine Clothes, 5GP')}
if(this.background.match(/Guild Crafter/)){this.setBackF('(Respect of the Craft Folk)finest free room and board among crafters');
this.setBackL('Dwarvish or 1 language');
this.setBackS('History, Insight');
this.setBackT('Traveler Clothes, 5GP, Gem of 10GP')}
if(this.background.match(/Criminal, Spy/)){this.setBackF('Criminal Contact, Criminal Specialty');
this.setBackL('');
this.setBackS('Deception, Stealth');
this.setBackT('1 from Cards, Darts, Dice, or Dragonchess, Thieves Tools')}
if(this.background.match(/Criminal/)){this.setBackF('Criminal Contact, Criminal Specialty');
this.setBackL('');
this.setBackS('Deception, Stealth');
this.setBackT('1 from Cards, Darts, Dice, or Dragonchess, Thieves Tools')}
if(this.background.match(/Entertainer/)){this.setBackF('Entertainer Routines, By Popular Demand');
this.setBackL('');
this.setBackS('Acrobatics, Performance');
this.setBackT('Disguise Kit, 1 musical instrument')}
if(this.background.match(/Faction Agent/)){this.setBackF('(Courtfunctionary)bureaucracy, access to records, current government interests and intrigues');
this.setBackL('any 2');
this.setBackS('Insight and 1 int wis or cha based skill');
this.setBackT('Badge of faction, code book, common clothes, 15GP')}
if(this.background.match(/Far Traveler/)){this.setBackF('');
this.setBackL('1 language');
this.setBackS('Insight, Perception');
this.setBackT('traveler clothes 1 musical instrument or gaming set, maps jewelry of 10GP, 5GP')}
if(this.background.match(/Folk/)){this.setBackF('Defining Event, Rustic Hospitality');
this.setBackL('');
this.setBackS('Animal Handling, Survival');
this.setBackT('Artisan Tools 1 from Alchemist, Brewer, Calligrapher, Carpenter, Cartographer, Cobbler, Cook, Glassblower, Jeweler, Leatherworker, Mason, Painter, Potter, Smith, Tinker, Weaver, or Woodcarver, Land Vehicles')}
if(this.background.match(/Guild/)){this.setBackF('Guild Business, Guild Membership');
this.setBackL('1 language');
this.setBackS('Insight, Persuasion');
this.setBackT('Artisan Tools 1 from Alchemist, Brewer, Calligrapher, Carpenter, Cartographer, Cobbler, Cook, Glassblower, Jeweler, Leatherworker, Mason, Painter, Potter, Smith, Tinker, Weaver, or Woodcarver')}
if(this.background.match(/Hermit/)){this.setBackF('Life of Seclusion, Discovery');
this.setBackL('1 language');
this.setBackS('Medicine, Religion');
this.setBackT('Herbalism Kit')}
if(this.background.match(/Noble/)){this.setBackF('Position of Privilege');
this.setBackL('1 language');
this.setBackS('History, Persuasion');
this.setBackT('1 from Cards, Darts, Dice, or Dragonchess')}
if(this.background.match(/Outlander/)){this.setBackF('Origin, Wanderer');
this.setBackL('1 language');
this.setBackS('Athletics, Survival');
this.setBackT('1 musical instrument')}
if(this.background.match(/Sage/)){this.setBackF('Specialty, Researcher');
this.setBackL('2 languages');
this.setBackS('Arcana, History');
this.setBackT('')}
if(this.background.match(/Sailor/)){this.setBackF('Ship s Passage');
this.setBackL('');
this.setBackS('Athletics, Perception');
this.setBackT('Navigator Tools, Vehicles(Water)')}
if(this.background.match(/Soldier/)){this.setBackF('Specialty, Military Rank');
this.setBackL('');
this.setBackS('Athletics, Intimidation');
this.setBackT('1 from Cards, Darts, Dice, or Dragonchess, Vehicles(Land)')}
if(this.background.match(/Urchin/)){this.setBackF('City Secrets');
this.setBackL('');
this.setBackS('Sleight of Hand, Stealth');
this.setBackT('Disguise Kit, Thieves Tools')}
this.refresh()}
function _setBackF(x){this.backF=x;
this.refresh()}
function _setBackL(x){this.backL=x;
this.refresh()}
function _setBackS(x){this.backS=x;
this.refresh()}
function _setBackT(x){this.backT=x;
this.refresh()}
function _setBonds(x){this.bonds=x;
this.bonds=this.bonds.replace(/\'/g, '');
this.refresh()}
function _setCha(x){this.cha=x;
this.curCha=x;calcMod(x);
this.chaMod=mod;
if(this.spellAbility==='int'){this.setSpellAbilityNumber(this.intMod)}
if(this.spellAbility==='wis'){this.setSpellAbilityNumber(this.wisMod)}
if(this.spellAbility==='cha'){this.setSpellAbilityNumber(this.chaMod)}
this.refresh()}
function _setClass(x){this.class=x;
if(this.class.match(/Witch/)){this.setEquipment('whip and blowgun.or light crossbow 20/20 bolts.or simple weapon.component pouch.or a totem.scholar s pack.or dungeoneer s pack.leather armor.any simple weapon.dagger');
if(this.class.match(/White Magic/)){a="@2nd(Spells)<b onClick='Bless()'>Bless</b>, <b onClick='CureWounds()'>Cure Wounds</b></td></tr><tr><td>@3rd(Remedy)1/1, short rest recharge, 1act,60ft, heal 1d10+your witch lvl</td></tr><tr><td>@3rd(Hex Spells)<b onClick='LesserRestoration()'>Lesser Restoration</b>, <b onClick='SpiritualWeapon()'>Spiritual Weapon</b></td></tr><tr><td>@4th(Hex Spells)<b onClick='DeathWard()'>Death Ward</b>, <b onClick='GuardianOfFaith()'>Guardian of Faith</b></td></tr><tr><td>@5th(Hex Spells)<b onClick='Hallow()'>Hallow</b>, <b onClick='RaiseDead()'>Raise Dead</b>";
b='@6th(Talisman of Protection)1 @a time, a being AC+2 with no shield, save+1d4';
c='@10th(Benevolent Surge)1 react, you, or your familiar, or your ally takes dmg, regain 1d10+chaMod HP, 1/1 short rest recharge';
dx='@14th(Witch s Gift)when healed by you, a being gains AC+3 utteo your nt'
}
if(this.class.match(/Black Magic/)){a="@2nd(Hex Spells)<b onClick='GentleRepose()'>Gentle Repose</b>, <b onClick='MagicWeapon()'>Magic Weapon</b></td></tr><tr><td>@3rd(Agony)60ft, conSave or conce,@DisAdv, atboit roll a die, on odd number, tgt atks @DisAdv</td></tr><tr><td>@3rd(Hex Spells)<b onClick='AnimateDead()'>Animate Dead</b>, <b onClick='VampiricTouch()'>Vampiric Touch</b></td></tr><tr><td>@4th(Hex Spells)<b onClick='Blight()'>Blight</b>, <b onClick='DeathWard()'>Death Ward</b></td></tr><tr><td>@5th(Hex Spells)<b onClick='Cloudkill()'>Cloudkill</b>, <b onClick='Contagion()'>Contagion</b>";
b='@6th(Voodoo Doll)60ft, 10/10turns, tgt the doll, tgt takes 1/2 dmg, tgt saves @DisAdv if you have tgt s har or its item attached to the doll';
c='@10th(Share Pain)1/1, short rest recharge, tgt a being to take your dmg on a failed cha Save';
dx='@14th(Disrupt Life)1act,1 spell slot, 20ft-radi you tgt vsCon 1/2dmg,dmg or 1d10 necrotic per spell slot+your chaMod'
}
this.setFeatures("</td></tr><tr><td>@1st(Spellcasting)@1st(Hexes)2 Cantrips, and opt to replace 1 hex for another when lvling up<b onClick='FalseLife()'>False Life</b>, <b onClick='InflictWounds()'>Inflict Wounds</b></td></tr><tr><td>@1st(Witch s Curse)(Hideous)save vs your fright spells @DisAdv, 1tgt vsWis or frightened utteoint or(Hollow)when tgt is reduced to 0HP, you gain temp HP witch lvl+chaMod or(Possessed)learn+1 1st lvl witch spell, 4th, 8th, 12th, and 16th which do not count against your known spells</td></tr><tr><td>@2nd(Cackle)bonus,60ft, spell time+1 round</td></tr><tr><td>@2nd(Familiar)bonus,your familiar can react atk or cast</td></tr><tr><td>"+a+"</td></tr><tr><td>@4th(Ability Score Improvement)abi+2 or abi+1 and another abi+1@4th,@8th,@12th,@16th,@19th</td></tr><tr><td>"+b+"</td></tr><tr><td>@7th(Improved Familiar)your familiar conce,trates your spell</td></tr><tr><td>@9th(Cauldron)Alchemy Points @9th 3 @12th 4 @15th 5 @18th 6 1AP 1 potion of Animal Friendship, or Healing, or Poison @13th 2AP 1 potion Heroism and Mind Reading, Philters of Love 24hr potency</td></tr><tr><td>@11th(Grand Hex)@11th 1 @15th 2 @18th 3<b onClick='Abate()'>Abate</b>, <b onClick='BeckonFamiliar()'>Beckon Familiar</b>, <b onClick='Bleeding()'>Bleeding</b>, <b onClick='CharmPerson()'>Charm</b>, <b onClick='Cripple()'>Cripple</b>, <b onClick='DireFamiliar()'>Dire Familiar</b>, <b onClick='Discord()'>Discord</b>, <b onClick='DisguiseSelf()'>Disguise</b>, <b onClick='Disorient()'>Disorient</b>, <b onClick='Duplicity()'>Duplicity</b>, <b onClick='Fear()'>Evil Eye</b>, <b onClick='Fortune()'>Fortune</b>, <b onClick='GoUnseen()'>Go Unseen</b>, <b onClick='Hesitate()'>Hesitate</b>, <b onClick='Mire()'>Mire</b>, <b onClick='Misfortune()'>Misfortune</b>, <b onClick='Nails()'>Nails</b>, <b onClick='Obfuscate()'>Obfuscate</b>, <b onClick='Pestilence()'>Pestilence</b>, <b onClick='Ruin()'>Ruin</b>, <b onClick='Slumber()'>Slumber</b>, <b onClick='Telepathy()'>Telepathy</b>, <b onClick='Tremors()'>Tremors</b>, <b onClick='Ward()'>Ward</b>(Grand Hexes)<b onClick='Coven()'>Coven</b>, <b onClick='DualHex()'>Dual Hex</b>, <b onClick='InsidiousHex()'>Insidious Hex</b>, <b onClick='IntoAToad()'>IntoAToad</b>, <b onClick='RemoteHex()'>Remote Hex</b>, <b onClick='SlowDeath()'>Slow Death</b>, <b onClick='WeaveOfFate()'>Weave of Fate</b>, <b onClick='WitchsBroom()'>Witch s Broom</b>, <b onClick='WitchsHut()'>Witch s Hut</b></td></tr><tr><td>"+c+"</td></tr><tr><td>"+d+"</td></tr><tr><td>@20th(Hex Master)tgts save vs your hexes @DisAdv");
this.setHitDice(this.lvl+'d8+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('light armor, simplewpns, blowguns, shortswords, whips');
this.setSaving('wis+pro, cha+pro');
this.setStrPro('');
this.setDexPro('');
this.setConPro('');
this.setIntPro('');
this.setWisPro('pro');
this.setChaPro('pro');
this.setSkills('2 from Arcana, Deception, Insight, Intimidation, Persuasion, Nature, Religion');
this.setSpellAbility('cha')}

if(this.class.match(/Barbarian/)){this.setEquipment('greataxe or martial melee weapon.2 handaxes or simple weapon.explorer pack.4/4 javelins');
if(this.class.match(/Ancestral/)){a='@3rd(Primal Path)of the(Ancestral Guardian)</td></tr><tr><td>@3rd(Ancestral Protectors)during rage your tgt atks your allies @DisAdv and allies have resistance 1/2 dmg';
b='@6th(Spirit Shield)during rage use your react to reduce 1 ally s dmg by 2d6 within 30ft, 3d6 @10th, 4d6 @14th';
c='@10th(Consult the Spirits)cast Augury or Clairvoyance then short rest with wisdom spell ability';
dx='@14th(Vengeful Ancestors)as with Spirit Shield only the atkers take dmg equal to your 1 ally s dmg reduction'
}
if(this.class.match(/Berserker/)){a='@3rd(Primal Path)of the (Berserker)</td></tr><tr><td>@3rd(Frenzy)while raging, 1 bonus atk';
b='@6th(Mindless Rage)while raging, immune charm fear';
c='@10th(Intimidating Prescence)30ft, vsWis vs your DC8cha+pro, or tgt frightened, tteo your nt';
dx='@14th(Retaliation)when hit, react melee atk'
}
if(this.class.match(/Bear\sTotem/)){a='@3rd(Primal Path) of the (Bear Totem Warrior)</td></tr><tr><td>@3rd(Spirit Seeker)<b onClick=BeastSense()>Beast Sense</b> as a ritual. <b onClick=SpeakWithAnimals()>Speak with Animals</b> as a ritual</td></tr><tr><td>@3rd(Totem Spirit)(Bear)raging, resist all dmg but psychic';
b='@6th(Aspect of the Beast)BEAR carry and lift x 2, str@Adv';
c='@10th(Spirit Walker)<b onClick=CommuneWithNature()>Commune with Nature</b> as a ritual';
dx='@14th(Totemic Attunement)BEAR raging, tgt atks @DisAdv other than you'
}
if(this.class.match(/Eagle\sTotem/)){a='@3rd(Primal Path) of the (Eagle Totem Warrior)</td></tr><tr><td>@3rd(Spirit Seeker)<b onClick=BeastSense()>Beast Sense</b> as a ritual. <b onClick=SpeakWithAnimals()>Speak with Animals</b> as a ritual</td></tr><tr><td>@3rd(Totem Spirit)(Eagle)raging, opp atkd @DisAdv, Dash as bonus';
b='@6th(Aspect of the Beast)EAGLE see 1mi, details 100ft, no Perception @DisAdv vs dim light';
c='@10th(Spirit Walker)<b onClick=CommuneWithNature()>Commune with Nature</b> as a ritual';
dx='@14th(Totemic Attunement)EAGLE raging, fly speed is walk speed drop after each turn'
}
if(this.class.match(/Wolf\sTotem/)){a='@3rd(Primal Path) of the (Wolf Totem Warrior)</td></tr><tr><td>@3rd(Spirit Seeker)<b onClick=BeastSense()>Beast Sense</b> as a ritual. <b onClick=SpeakWithAnimals()>Speak with Animals</b> as a ritual</td></tr><tr><td>@3rd(Totem Spirit(Wolf)adjac allies atk@Adv';
b='@6th(Aspect of the Beast)WOLF track @fast pace, Stealth @normal pace';
c='@10th(Spirit Walker)<b onClick=CommuneWithNature()>Commune with Nature</b> as a ritual';
dx='@14th(Totemic Attunement)WOLF raging, on hit, knock prone as bonus'
}
if(this.class.match(/Storm Herald/)){a='@3rd(Primal Path)of the (Storm Herald)</td></tr><tr><td>@3rd(Storm Aura)10ft-radi storm from self but not through total cover, during rage.(Desert)do 2 fire dmg in the 10ft-radi as bonus,3 dmg @5th, 4 dmg @10th, 5 dmg @15th, 6 dmg @20th(Sea)tgt 1 within 10ft DC8+'+characters[targeted].spellAbility+'+pro vsDex 1d6 lightning or save for half, 2d6 dmg @10th, 3d6 @15th, 4d6 @20th(Tundra)2 allies in 10ft aura gain 2temp hp, 3temp hp @5th, 4temp hp @10th, 5temp hp @15th, 6temp hp @20th';
b='@6th(Storm Soul)(Desert)resist 1/2 dmg from fire and no extreme he@suffering.(Sea)resist 1/2 dmg from lightning, breathe underwater, swim speed 30ft.(Tundra)resist 1/2 cold dmg, no extreme cold suffering, 5ft-cubebe of water to ice melts 1min';
c='@10th(Shielding Storm)as with Storm Soul only allies within the aura also have the resistance';
dx='@14th(Raging Storm)(Desert)atker in your aura hits you and you use your react to DC8+con+pro vsvsDex or take 1/2 your lvl fire dmg.(Sea)atker in your aura hits you and you use your react to DC8+con+pro vsStr or atker knocked prone.(Tundra)DC8+con+pro vsStr or atker speed 0 until tsoynt'
}
if(this.class.match(/Zealot/)){a='@3rd(Primal Path)of the(Zealot)</td></tr><tr><td>@3rd(Divine Fury)during rage deal xtra 1d6+1/2 your lvl necrotic or radiant dmg</td></tr><tr><td>@3rd(Warrior of the Gods)caster does not need material components to raise you from the dead';
b='@6th(Fanatical Focus)during rage 1/1 reroll failed save';
c='@10th(Zealous Presence)bonus 10 allies in 60ft-radi rolls@Adv ttso your next turn';
dx='@14th(Rage Beyond Death)during rage 0hp not unconscious and do not die until rage ends with 0hp'
}
this.setFeatures('</td></tr><tr><td>@1st(Rage)while unarmored, enter rage as bonus,str@Adv, dmg+rage dmg, resist bludg, pierc, slash, lasts til taking no dmg and not atking@1st 2/2,@3rd 3/3,@6th 4/4,@12th 5/5,@17th 6/6recover rages /long rest<p>(Rage Dmg)@1st(+2),@9th(+3),@16th(+4)</td></tr><tr><td>@1st(Unarmored Defense)AC10+dex+con</td></tr><tr><td>@2nd(Danger Sense)vsDex@Adv vs seen trap spells</td></tr><tr><td>@2nd(Reckless atk)str melee atk@Adv, atkd@Adv</td></tr><tr><td>'+a+'</td></tr><tr><td>@4th(Ability Score Improvement)abi+2 or abi+1 and another abi+1 or 1 feat@4th,@8th,@12th,@16th,@19th</td></tr><tr><td>@5th(Extra atk)</td></tr><tr><td>@5th(Fast Movement)unarmored, speed+10ft</td></tr><tr><td>'+b+'</td></tr><tr><td>@7th(Feral Instinct)init@Adv, act normally surprised</td></tr><tr><td>@9th(Brutal Critical)dmg @9th +1d,@13th +2d,@17th +3d</td></tr><tr><td>'+c+'</td></tr><tr><td>@11th(Relentless Rage)1/1 0 hp DC10 vsCon 1 hp, DC+5 each use before/long rest</td></tr><tr><td>'+dx+'</td></tr><tr><td>@15th(Persistent Rage)</td></tr><tr><td>@18th(Indomitable Might)higher of str roll or str score</td></tr><tr><td>@20th(Primal Champion)str+4(max24), con+4(max24)');
this.setActionNotes("(Rages) 2/2 (Rage Dmg)dmg+2")
this.setHitDice(this.lvl+'d12+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('light armor, medium armor, shields, and all wpns');
this.setSaving('str+pro, con+pro');
this.setStrPro('pro');
this.setDexPro('');
this.setConPro('pro');
this.setIntPro('');
this.setWisPro('');
this.setChaPro('');
this.setSkills('2 from Animal Handling, Athletics, Intimidation, Nature, Perception, or Survival')}
if(this.class.match(/Bard/)){this.setEquipment('rapier or longsword or simple weapon.diplom@pack or entertainer pack.lute or musical instrument.leather armor.dagger');
if(this.class.match(/Glamour/)){a='@3rd(Bardic College)of(Glamour)</td></tr><tr><td>@3rd(Mantle of Inspiration)costs 1BI, bonus,1 to your cha mod tgts within 60ft-radi gain 5temp hp and react to move speed without opp atks, 8temp hp @5th, 11temp hp @10th, and 14temp hp @15th</td></tr><tr><td>3rd(Enthralling Performance)1min 60ft-radi of 1 to your cha mod of tgts DC8+cha+pro vs vsWis or become charmed, effect ends 1hr or if you harm tgts or its allies';
b='@6th(Mantle of Majesty)bonus cast Command without expending slot, conce,ntration, cast Command each round for 1min';
c='@14th(Unbreakable Majesty)1min all new atkers must DC8+cha+pro vsCha save or must atk your ally, but save @DisAdv vs your spells next turn'
}
if(this.class.match(/Lore/)){a='@3rd(Bardic College)of (Lore)</td></tr><tr><td>@3rd(Bonus Proficiencies)3 skills+pro</td></tr><tr><td>@3rdCUTTING WORDS 1BI, react, 60ft, tgt roll-BI';
b='@6th.ADDITIONAL MAGical SECRETS 2 any class spells';
c='@14th.PEERLESS SKILL 1BD, abi check+BI'
}
if(this.class.match(/Satire/)){a='@3rd(Bardic College)of (Satire)</td></tr><tr><td>@3rd(Bonus Proficiencies)Sleight of Hand+pro.Thieves Tools+pro.1 additional skill+pro</td></tr><tr><td>@3rd(Tumbling Fool)1 turn.Dash and Disengage.climb speed is walking speed.half dmg from falling';
b='@6th(Fool s Insight)Detect Thoughts your chaMod/chaMod times then take an 8hr rest to recharge, if tgt saves, it suffers a socal gaffe';
c='@14th(Fool s Luck)add 1BD to your failed save throw, but DM appliesthis 1BD result to your future success roll and you must describe your gaffe'
}
if(this.class.match(/Swords/)){a='@3rd(Bardic College)of(Swords)</td></tr><tr><td>@3rd(Bonus Proficiencies)medium armor, scimitar and proficient weapon is spell focus</td></tr><tr><td>@3rd(Fighting Style)(Dueling)+2 dmg from 1 weapon with no other weapon or(Two-weapon Fighting)2nd(atk add abi mod to dmg</td></tr><tr><td>3rd(Blade Flourish)speed+10ft during atk, on hit use 1 fourish per turn.(Defensive Flourish)expend 1 Bardic Inspiration point and add the roll to xtra dmg and add roll to your AC ttso your next turn.(slash Flourish)expend 1 Bardic Inspiration point and dmg adjac tgts.(Mobile Flourish)expend 1 Bardic Inspiration point and add it to tgt dmg then push tgt 5ft+BI roll, use react to be adjac to tgt again';
b='@6th(Extra atk)';
c='@14th(Master s Flourish)option to roll a free d6 instead of BI roll for flourishes'
}
if(this.class.match(/Valor/)){a='@3rd(Bardic College)of (Valor)</td></tr><tr><td>@3rd(Bonus Proficiencies)Medium armor, shields, martialwpns</td></tr><tr><td>@3rd(Combat Inspiration)1BI, react, ally roll+BI or react AC+BI';
b='@6th.Extra atk';
c='@14th(Battle Magic)cast, bonus weapon atk'
}
if(this.class.match(/Whispers/)){a='@3rd(Bardic College)of(Whispers)</td></tr><tr><td>@3rd(Psychic Blades)expend 1 Bardic Inspiration point and do xtra 2d6 psychic dmg 1/rnd, @5th 3d6, @10th 5d6, @15th 8d6</td></tr><tr><td>@3rd(Words of Terror)1min DC8+cha+pro vsWis or frightend of you or other 1hr or until atkd or its ally atkd';
b='@6th(Mantle of Whispers)a tgt dies within 30ft, you assume its form 1hr tgt Insight versus your Deception+5 to see disguise, recharge after short rest';
c='@14th(Shadow Lore)1act ion, 1tgt DC8+cha+pro vsWis or charmed and will do reasonable requests because tgt thinks you know its secret, 8hrs or until it or its ally atkd, recharge after/long rest'
}
BardSpells="<h3>Cantrips Known:@1st(2),@4th(3),@10th(4)</h3>"
BardSpells+="<b onClick=ViciousMockery()>ViciousMockery</b>,"
BardSpells+="<b onClick=DancingLights()>DancingLights</b>,"
BardSpells+="<b onClick=Light()>Light</b>,"
BardSpells+="<b onClick=MageHand()>MageHand</b>,"
BardSpells+="<b onClick=Mending()>Mending</b>,"
BardSpells+="<b onClick=Message()>Message</b>,"
BardSpells+="<b onClick=MinorIllusion()>MinorIllusion</b>,"
BardSpells+="<b onClick=Prestidigitation()>Prestidigitation</b>,"
BardSpells+="<b onClick=TrueStrike()>TrueStrike</b>"
BardSpells+="<h3>1stSlot:@1st(2/2),@2nd(3/3),@3rd(4/4)</h3>"
BardSpells+="<b onClick=AnimalFriendship()>AnimalFriendship</b>,"
BardSpells+="<b onClick=Bane()>Bane</b>,"
BardSpells+="<b onClick=CharmPerson()>CharmPerson</b>,"
BardSpells+="<b onClick=ComprehendLanguages()>ComprehendLanguages</b>,"
BardSpells+="<b onClick=CureWounds()>CureWounds</b>,"
BardSpells+="<b onClick=DetectMagic()>DetectMagic</b>,"
BardSpells+="<b onClick=DisguiseSelf()>DisguiseSelf</b>,"
BardSpells+="<b onClick=FaerieFire()>FaerieFire</b>,"
BardSpells+="<b onClick=FeatherFall()>FeatherFall</b>,"
BardSpells+="<b onClick=HealingWord()>HealingWord</b>,"
BardSpells+="<b onClick=Heroism()>Heroism</b>,"
BardSpells+="<b onClick=TashasHideousLaughter()>TashasHideousLaughter</b>,"
BardSpells+="<b onClick=Identify()>Identify</b>,"
BardSpells+="<b onClick=IllusoryScript()>IllusoryScript</b>,"
BardSpells+="<b onClick=Longstrider()>Longstrider</b>,"
BardSpells+="<b onClick=SilentImage()>SilentImage</b>,"
BardSpells+="<b onClick=Sleep()>Sleep</b>,"
BardSpells+="<b onClick=SpeakWithAnimals()>SpeakWithAnimals</b>,"
BardSpells+="<b onClick=Thunderwave()>Thunderwave</b>,"
BardSpells+="<b onClick=UnseenServant()>UnseenServant</b>"
BardSpells+="<h3>2ndSlot:@3rd(2/2),@4th(3/3)</h3>"
BardSpells+="<b onClick=AnimalMessenger()>AnimalMessenger</b>,"
BardSpells+="<b onClick=BlindnessDeafness()>BlindnessDeafness</b>,"
BardSpells+="<b onClick=CalmEmotions()>CalmEmotions</b>,"
BardSpells+="<b onClick=DetectThoughts()>DetectThoughts</b>,"
BardSpells+="<b onClick=EnhanceAbility()>EnhanceAbility</b>,"
BardSpells+="<b onClick=Enthrall()>Enthrall</b>,"
BardSpells+="<b onClick=HeatMetal()>HeatMetal</b>,"
BardSpells+="<b onClick=HoldPerson()>HoldPerson</b>,"
BardSpells+="<b onClick=Invisibility()>Invisibility</b>,"
BardSpells+="<b onClick=Knock()>Knock</b>,"
BardSpells+="<b onClick=LesserRestoration()>LesserRestoration</b>,"
BardSpells+="<b onClick=LocateAnimalsOrPlants()>LocateAnimalsOrPlants</b>,"
BardSpells+="<b onClick=LocateObject()>LocateObject</b>,"
BardSpells+="<b onClick=MagicMouth()>MagicMouth</b>,"
BardSpells+="<b onClick=SeeInvisibility()>SeeInvisibility</b>,"
BardSpells+="<b onClick=Shatter()>Shatter</b>,"
BardSpells+="<b onClick=Silence()>Silence</b>,"
BardSpells+="<b onClick=Suggestion()>Suggestion</b>,"
BardSpells+="<b onClick=ZoneOfTruth()>ZoneOfTruth</b>"
BardSpells+="<h3>3rdSlot:@5th(2/2),@6th(3/3)</h3>"
BardSpells+="<b onClick=BestowCurse()>BestowCurse</b>,"
BardSpells+="<b onClick=Clairvoyance()>Clairvoyance</b>,"
BardSpells+="<b onClick=DispelMagic()>DispelMagic</b>,"
BardSpells+="<b onClick=Fear()>Fear</b>,"
BardSpells+="<b onClick=GlyphOfWarding()>GlyphOfWarding</b>,"
BardSpells+="<b onClick=HypnoticPattern()>HypnoticPattern</b>,"
BardSpells+="<b onClick=MajorImage()>MajorImage</b>,"
BardSpells+="<b onClick=Nondetection()>Nondetection</b>,"
BardSpells+="<b onClick=PlantGrowth()>PlantGrowth</b>,"
BardSpells+="<b onClick=Sending()>Sending</b>,"
BardSpells+="<b onClick=SpeakWithDead()>SpeakWithDead</b>,"
BardSpells+="<b onClick=SpeakWithPlants()>SpeakWithPlants</b>,"
BardSpells+="<b onClick=StinkingCloud()>StinkingCloud</b>,"
BardSpells+="<b onClick=LeomundsTinyHut()>LeomundsTinyHut</b>,"
BardSpells+="<b onClick=Tongues()>Tongues</b>"
BardSpells+="<h3>4thSlot:@7th(1/1),@8th(2/2),@9th(3/3)</h3>"
BardSpells+="<b onClick=Compulsion()>Compulsion</b>,"
BardSpells+="<b onClick=Confusion()>Confusion</b>,"
BardSpells+="<b onClick=DimensionDoor()>DimensionDoor</b>,"
BardSpells+="<b onClick=FreedomOfMovement()>FreedomOfMovement</b>,"
BardSpells+="<b onClick=GreaterInvisibility()>GreaterInvisibility</b>,"
BardSpells+="<b onClick=HallucinatoryTerrain()>HallucinatoryTerrain</b>,"
BardSpells+="<b onClick=LocateCreature()>LocateCreature</b>,"
BardSpells+="<b onClick=Polymorph()>Polymorph</b>"
BardSpells+="<h3>5thSlot:@9th(1/1),@10th(2/2),@18th(3/3)</h3>"
BardSpells+="<b onClick=AnimateObjects()>AnimateObjects</b>,"
BardSpells+="<b onClick=Awaken()>Awaken</b>,"
BardSpells+="<b onClick=DominatePerson()>DominatePerson</b>,"
BardSpells+="<b onClick=Dream()>Dream</b>,"
BardSpells+="<b onClick=Geas()>Geas</b>,"
BardSpells+="<b onClick=GreaterRestoration()>GreaterRestoration</b>,"
BardSpells+="<b onClick=HoldMonster()>HoldMonster</b>,"
BardSpells+="<b onClick=LegendLore()>LegendLore</b>,"
BardSpells+="<b onClick=MassCureWounds()>MassCureWounds</b>,"
BardSpells+="<b onClick=Mislead()>Mislead</b>,"
BardSpells+="<b onClick=ModifyMemory()>ModifyMemory</b>,"
BardSpells+="<b onClick=PlanarBinding()>PlanarBinding</b>,"
BardSpells+="<b onClick=RaiseDead()>RaiseDead</b>,"
BardSpells+="<b onClick=Scrying()>Scrying</b>,"
BardSpells+="<b onClick=Seeming()>Seeming</b>,"
BardSpells+="<b onClick=TeleportationCircle()>TeleportationCircle</b>"
BardSpells+="<h3>6thSlot:@11th(1/1),@19th(2/2)</h3>"
BardSpells+="<b onClick=Eyebite()>Eyebite</b>,"
BardSpells+="<b onClick=FindThePath()>FindThePath</b>,"
BardSpells+="<b onClick=GuardsAndWards()>GuardsAndWards</b>,"
BardSpells+="<b onClick=IrresistibleDance()>IrresistibleDance</b>,"
BardSpells+="<b onClick=MassSuggestion()>MassSuggestion</b>,"
BardSpells+="<b onClick=ProgrammedIllusion()>ProgrammedIllusion</b>,"
BardSpells+="<b onClick=TrueSeeing()>TrueSeeing</b>"
BardSpells+="<h3>7thSlot:@13th(1/1),@20th(2/2)</h3>"
BardSpells+="<b onClick=ArcaneSword()>ArcaneSword</b>,"
BardSpells+="<b onClick=Etherealness()>Etherealness</b>,"
BardSpells+="<b onClick=Forcecage()>Forcecage</b>,"
BardSpells+="<b onClick=MordenkainensMagnificentMansion()>MordenkainensMagnificentMansion</b>,"
BardSpells+="<b onClick=MirageArcane()>MirageArcane</b>,"
BardSpells+="<b onClick=ProjectImage()>ProjectImage</b>,"
BardSpells+="<b onClick=Regenerate()>Regenerate</b>,"
BardSpells+="<b onClick=Resurrection()>Resurrection</b>,"
BardSpells+="<b onClick=Symbol()>Symbol</b>,"
BardSpells+="<b onClick=Teleport()>Teleport</b>"
BardSpells+="<h3>8thSlot:@15th(1/1)</h3>"
BardSpells+="<b onClick=DominateMonster()>DominateMonster</b>,"
BardSpells+="<b onClick=Feeblemind()>Feeblemind</b>,"
BardSpells+="<b onClick=Glibness()>Glibness</b>,"
BardSpells+="<b onClick=MindBlank()>MindBlank</b>,"
BardSpells+="<b onClick=PowerWordStun()>PowerWordStun</b>"
BardSpells+="<h3>9thSlot:@17th(1/1)</h3>"
BardSpells+="<b onClick=Foresight()>Foresight</b>,"
BardSpells+="<b onClick=PowerWordKill()>PowerWordKill</b>,"
BardSpells+="<b onClick=TruePolymorph()>TruePolymorph</b>,"
this.setFeatures('</td></tr><tr><td><p>Spells Known:@1st(4),@2nd(5),@3rd(6),@4th(7),@5th(8),@6th(9),@7th(10),@8th(11),@9th(12),@10th(14),@11(15),@13th(16)@14th(18),@15th(19),@17th(20),@18th(22)</td></tr><tr><td>'+BardSpells+'</td></tr><tr><td>@1st(Bardic Inspiration)1 or chaMod @1st(d6),@5th(d8),@(10th d10),@(15th d12)ally ads 1 BI to their roll</td></tr><tr><td>@2nd(Jack of All Trades)non pro abi checks+half pro</td></tr><tr><td>@2nd(Song of Rest)during rest, heal allies who hear ,@2nd(d6),@9th(d8),@13th(d10),@17th(d12)</td></tr><tr><td>@3rd(Expertise)2 skills+pro are+exp ,@3rd(2),@10th(2 more)</td></tr><tr><td>'+a+'</td></tr><tr><td>@4th(Ability Score Improvement)abi+2 or abi+1 and another abi+1@4th,@8th,@12th,@16th,@19th</td></tr><tr><td>@5th(Font of Inspiration)regain bardic inspiration during a short rest</td></tr><tr><td>@6th(Countercharm)act 30ft save vs charm fear</td></tr><tr><td>'+b+'</td></tr><tr><td>@10th(Magical Secrets)learn 2 spells any class @your lvl@10th(2),@14th(2 more)</td></tr><tr><td>'+c+'</td></tr><tr><td>@20th(Superior Inspiration)@0 Bardic Inspiration gain 1 each encounter');
this.setHitDice(this.lvl+'d8+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('light armor, simplewpns, hand crossbows, longswords, rapiers, and shortswords');
this.setSaving('dex+pro, cha+pro');
this.setStrPro('');
this.setDexPro('pro');
this.setConPro('');
this.setIntPro('');
this.setWisPro('');
this.setChaPro('pro');
this.setSkills('any 3 skills');
this.setSpellAbility('cha')}
if(this.class.match(/Cleric/))

{if(this.class.match(/Arcana/))
{a="@1st(Arcana Domain)(Extra Spells)<b onClick='DetectMagic()'>Detect Magic</b>, <b onClick='MagicMissile()'>Magic Missile</b><p>(Bonus Proficiencies)Arcana+pro2 Cantrips from the Wizard list</td></tr><tr><td>@2nd(Channel Divinity)<p>(Arcane Abjuration)1CD 1act 1 celestial, elemental, fey, or fiend within 30ft must save or be turned for 1 min or until dmgd, must dash away, no reacts@5th, you banish the 1/2CR being for 1min,@8th 1CR@11th 2CR@14th 3CR@17th 4CR<p>";
b="@3rd (Extra Spells)<b onClick='MagicWeapon()'>Magic Weapon</b>, <b onClick='NystulsMagicAura()'>Nystul s Magic Aura</b>";
c="@5th (Extra Spells)<b onClick='DispelMagic()'>Dispel Magic</b>, <b onClick='MagicCircle()'>Magic Circle</b></td></tr><tr><td>@6th(Spell Breaker)when healing ally, end one spell on the ally of the same spell lvl as your healing spell slot or lower</td></tr><tr><td>7th (Extra Spells)<b onClick='ArcaneEye()'>Arcane Eye</b>, <b onClick='LeomundsSecretChest()'>Leomund s Secret Chest</b></td></tr><tr><td>@8th(Potent Spellcasting)your cantrip dmg+wisMod</td></tr><tr><td>@9th (Extra Spells)<b onClick='PlanarBinding()'>Planar Binding</b>, <b onClick='TeleportationCircle()'>Teleportation Circle</b>";
dx="@17th(Arcane Mastery)choose one 6th, one 7th, one 8th, one 9th lvl wizard spells to your domain spell list"
}
if(this.class.match(/Death/))
{a="@1st(Death Domain Spells)<b onClick='FalseLife()'>False Life</b>, <b onClick='RayOfSickness()'>Ray of Sickness</b></td></tr><tr><td>@1st(Bonus Proficiencies)martialwpns</td></tr><tr><td>@1st(Reaper)learn 1 necrom cantrip from any class list and tgt 2 adjac</td></tr><tr><td>@2nd(Channel Divinity Touch of Death)melee atk+5+1/2class lvl necro dmg";
b="@3rd(Death Domain Spells)<b onClick='BlindnessDeafness()'>Blindness Deafness</b>, <b onClick='RayOfEnfeeblement()'>Ray of Enfeeblement</b>";
c="@5th(Death Domain Spells)<b onClick='AnimateDead()'>Animate Dead</b>, <b onClick='VampiricTouch()'>Vampiric Touch</b></td></tr><tr><td>@6th(Inescapable Destruction)your necrotic atks ignore resistance</td></tr><tr><td>@7th(Death Domain Spells)<b onClick='Blight()'>Blight</b>, <b onClick='DeathWard()'>Death Ward</b></td></tr><tr><td>@8th(Divine Strike),@8th melee atk+1d8 necrotic dmg @14th melee atk+2d8 necrotic dmg</td></tr><tr><td>@9th(Death Domain Spells)<b onClick='AntilifeShell()'>Antilife Shell</b>, <b onClick='Cloudkill()'>Cloudkill</b>";
dx="@17th(Improved Reaper)1st thru 5th necro spells can tgt 2 adjac"
}
if(this.class.match(/Forge/)){a="@1st(Forge Domain)(Extra Spells)<b onClick='Identify()'>Identify</b>, <b onClick='SearingSmite()'>Searing Smite</b></td></tr><tr><td>@1st(Bonus Proficiencies)heavy armor smith s tools</td></tr><tr><td>@1st(Blessings of the Forge)turn 1 weapon or 1 armor into a+1 magical item permanently/long rest</td></tr><tr><td>@2nd(Artisan s Blessing)1CD 1hr ritual construct 1 weapon or 1 suit of armor or 10 ammo or tools, must be metal and under 100gp";
b="@3rd(Forge Domain)(Extra Spells)<b onClick='HeatMetal()'>HeatMetal</b>, <b onClick='MagicWeapon()'>Magic Weapon</b>";
c="@5th(Forge Domain)(Extra Spells)<b onClick='ElementalWeapon()'>Elemental weapon</b>, <b onClick='ProtectionFromEnergy()'>Protection from Energy</b></td></tr><tr><td>@6th(Soul of the Forge)resistance fire dmg heavy armor AC+1</td></tr><tr><td>7th(Forge Domain)(Extra Spells)<b onClick='Fabricate()'>Fabricate</b>, <b onClick='WallOfFire()'>Wall of Fire</b></td></tr><tr><td>@8th(Divine Strike)xtra 1d8 fire dmg @14th 2d8</td></tr><tr><td>@9th(Forge Domain)(Extra Spells)<b onClick='AnimateObject()'>Animate Object</b>, <b onClick='Creation()'>Creation</b>";
dx="@17th(Saint of Forge and Fire)immune fire dmg heavy armor resist bludg, pierc, slash from non-magicalwpns"
}
if(this.class.match(/Grave/)){a="@1st1(Grave Domain Spells)<b onClick='Bane()'>Bane</b>, <b onClick='FalseLife()'>False Life</b></td></tr><tr><td>@1st(Circle of Mortality)restore 0hp allies with max dice number</td></tr><tr><td>@1st(Eyes of the Grave)detect undead 60ft-radi utteo your nt 1 to wis mod times/long rest</td></tr><tr><td>@2nd(Path to the Grave)1CD 1act ion 30ft 1tgt vulnerable dmg utteo your nt";
b="@3rd(Grave Domain Spells)<b onClick='GentleRepose()'>Gentle Repose</b>, <b onClick='RayOfEnfeeblement()'>Ray of Enfeeblement</b>";
c="@5th(Grave Domain Spells)<b onClick='Revivify()'>Revivify</b>, <b onClick='VampiricTouch()'>Vampiric Touch</b></td></tr><tr><td>@6th(Sentinel @Death s Door)1ally 30ft turn crit hit into normal hit and no crit effects 1 to wis mod times/long rest</td></tr><tr><td>@8th(Potent Spellcasting)cantrip dmg+wis mod</td></tr><tr><td>@9th(Grave Domain Spells)<b onClick='AntilifeShell()'>Antilife Shell</b>, <b onClick='RaiseDead()'>Raise Dead</b>";
dx="@17th(Keeper of Souls)1tgt dies 60ft, you transfer tgt s hitdice to heal ally recharge ttsoynt"
}
if(this.class.match(/Knowledge/)){a='@1st(Blessings of Knowledge)2 languages, 2 skills+pro from Arcana, History, Nature or Religion</td></tr><tr><td>@1st<b onClick=Command()>Command</b> @1st<b onClick=Identify()>Identify</b></td></tr><tr><td>@2nd(Knowledge of the Ages)1CD, 1act,60ft vsWis or read surface thoughts and Suggestion 1min';
b='@3rd[x]Augury ,@3rd[x]Suggestion';
c='@5th[x]Nondetection @5th[x]Speak with Dead</td></tr><tr><td>@6th.READ THOUGHTS 1/1 1CD, 1act,60ft, vsWis or read surface thoughts, 10/10turns, Suggestion, no slot cost no save</td></tr><tr><td>@7th[x]Arcane Eye @7th[x]Confusion</td></tr><tr><td>@8th.POTENT SPELL CASTING cantrip dmg+wisMod</td></tr><tr><td>@9th[x]Legend Lore @9th<b onClick=Scrying()>Scrying</b>';
dx='@17th.VISIONS OF THE PAST 1/1/long rest, touch, wisScore is min, info on recent events'
}
if(this.class.match(/Cleric\,\sLife/)){a="@1st(Bonus Proficiency)heavy armor</td></tr><tr><td>@1st(Disciple of Life)healing prayers get+2+spell lvl</td></tr><tr><td>@1st(Extra Spells)<b onClick=Bless()>Bless</b>, <b onClick=CureWounds()>Cure Wounds</b></td></tr><tr><td>@2nd(Preserve Life)1CD, 1act,30ft, heal 5x lvl allies max half maxhp, less undead and constructs";

b="@3rd(Extra Spells)<b onClick='LesserRestoration()'>Lesser Restoration</b>, <b onClick=SpiritualWeapon()>Spiritual Weapon</b></td></tr>";
c="@5th(Extra Spells)<b onClick='BeaconOfHope()'>Beacon of Hope</b>, <b onClick=Revivify()>Revivify</b></td></tr><tr><td>@6th(Blessed Healer)when healing, you heal yourself 2+spell lvl</td></tr><tr><td>@7th(Extra Spells)<b onClick='DeathWard()'>Death Ward</b>, <b onClick='GuardianOfFaith()'>Guardian of Faith</b></td></tr><tr><td>@8th(Divine Strike)1/turn weapon dmg+1d8 radiant @14th+2d8)</td></tr><tr><td>@9th(Extra Spells)<b onClick=MassCureWounds()>Mass Cure Wounds</b>,<b onClick=RaiseDead()>Raise Dead</b>";
dx='@17th(Supreme Healing)heal max roll'
}
if(this.class.match(/Light/)){a='@1st.BONUS CANTRIP Light, if know, other cantrip</td></tr><tr><td>@1st(Warding Flare)(wisMod/wisMod)/long rest, when atkd, 30ft, react atkd @DisAdv</td></tr><tr><td>@1st[x]Burning Hands</td></tr><tr><td>@1st[x]Faerie Fire</td></tr><tr><td>@2nd.RADIANCE OF THE DAWN 1CD 30ft Darkness dispelled DC8wis+pro vsCon 1/2dmg,less full cover radiant 2d10+c lvl';
b='@3rd[x]Flaming Sphere ,@3rd[x]Scorching Ray';
c="@5th[x]Daylight @5th<b onClick='Fireball()'>Fireball</b></td></tr><tr><td>@6th.IMPROVED FLARE use for allies</td></tr><tr><td>@7th<b onClick='GuardianOfFaith()'>Guardian of Faith</b> @7th[x]Wall of Fire</td></tr><tr><td>@8th.POTENT SPELLCASTING cantrip dmg+wisMod</td></tr><tr><td>@9th<b onClick=FlameStrike()>Flame Strike</b> @9th<b onClick=Scrying()>Scrying</b>";
dx='@17th.CORONA OF LIGHT 1act,10/10turns, 60ft rad+30ft dim light save @DisAdv vs fire radiant'
}
if(this.class.match(/Nature/)){a='@1st.ACOLYTE OF NATURE 1 cantrip, 2 skills+pro from Animal Handling, Nature, Survival</td></tr><tr><td>@1st(Bonus Proficiency)heavy armor</td></tr><tr><td>@1st[x]Animal Friendship @1st[x]Speak with Animals</td></tr><tr><td>@2nd.CHARM ANIMALS AND PLANTS 1CD, 30ft vsWis charmed 10/10turns or dmgd';
b='@3rd[x]Barkskin ,@3rd[x]Spike Growth</td></tr><tr><td>@5th[x]Plant Growth';
c="@5th[x]Wind Wall</td></tr><tr><td>@6th.DAMPEN ELEMENTS you or ally 30ft rad, react, resist acid, cold, lighting or thunder</td></tr><tr><td>@7th[x]Dominate Beast @7th[x]Grasping Vine</td></tr><tr><td>@8th(Divine Strike)1/turn weapon dmg+1d8 cold, fire or lightning.(@14th)+2d8</td></tr><tr><td>@9th[x]Insect Plague @9th<b onClick=TreeStride()'>TreeStride</b>";
dx='@17th.MASTER OF NATURE bonus command the charmed animals and plants'
}
if(this.class.match(/Tempest/)){a="Detect Magic</td></tr><tr><td>@1st<b onClick='FogCloud()'>Fog Cloud</b> @1st<b onClick='Thunderwave()'>Thunderwave</b></td></tr><tr><td>@2nd(Destructive Wrath)1CD, deal max thunder dmg";
b="@3rd<b onClick='GustOfWind()'>Gust of Wind</b> ,@3rd<b onClick='Shatter()'>Shatter</b>";
c="@5th[x]Call Lightning @5th[x]Sleet Storm</td></tr><tr><td>@6th.THUNDERBOLT STRIKE when lightning dmg, option to push large or less 10ft</td></tr><tr><td>@7th[x]Control Water @7th<b onClick=IceStorm()'>IceStorm</b></td></tr><tr><td>@8th(Divine Strike)1/turn weapon dmg+1d8thunder.(@14th)+2d8</td></tr><tr><td>@9th[x]Destructive Wave @9th[x]Insect Plague";
dx='@17th.STORMBORN fly speed is walk speed'
}
if(this.class.match(/Trickery/)){a="@1st(Blessings of the Trickster)ally stealth@Adv 1hr<p><b onClick='CharmPerson()'>Charm Person</b>, <b onClick='DisguiseSelf()'>Disguise Self</b></td></tr><tr><td>@2nd(Invoke Duplicity)1CD conce,10/10turns bonus move 30ft atk@Adv";
b="@3rd<b onClick='MirrorImage()'>Mirror Image</b>, <b onClick='PassWithoutTrace()'>Pass without Trace</b>";
c="<p><b onClick='Blink()'>Blink</b>, <b onClick='DispelMagic()'>Dispel Magic</b></td></tr><tr><td>@6th(Cloak of Shadows)1CD invisible till t e o y n turn or atk or cast</td></tr><tr><td>@7th<b onClick='DimensionDoor()'>Dimension Door</b>, <b onClick='Polymorph()'>Polymorph</b></td></tr><tr><td>@8th(Divine Strike)1/turn weapon dmg+1d8poision.(@14th)+2d8</td></tr><tr><td>@9th<b onClick='DominatePerson()'>Dominate Person</b>, <b onClick='ModifyMemory()'>Modify Memory</b>";
dx='@17th(Improved Duplicity)move 4 clones 30ft/turn max 120ft</td></tr><tr><td>'
}
if(this.class.match(/War/)){a="@1st(Bonus Proficiencies)martialwpns heavy armor</td></tr><tr><td>@1st(War Priest)when atking 1 bonus atk</td></tr><tr><td>@1st<b onClick='DivineFavor()'>Divine Favor</b>, <b onClick='ShieldOfFaith()'>Shield of Faith</b></td></tr><tr><td>2nd(Guided Strike)1CD atk+10";
b="@3rd<b onClick='MagicWeapon()'>Magic Weapon</b>, <b onClick='SpiritualWeapon()'>Spiritual Weapon</b>";
c="@5th<b onClick='CrusadersMantle()'>Crusader s Mantle</b>, <b onClick='SpiritGuardians()'>Spirit Guardians</b></td></tr><tr><td>@6th(War God s Blessing)1CD ally 30ft atk+10</td></tr><tr><td>@7th<b onClick='FreedomOfMovement()'>Freedom of Movement</b>, <b onClick='Stoneskin()'>Stoneskin</b></td></tr><tr><td>@8th(Divine Strike)1/turn weapon dmg+1d8 same dmg type @14th+2d8</td></tr><tr><td>@9th<b onClick='FlameStrike()'>Flame Strike</b>, <b onClick='HoldMonster()'>Hold Monster</b>";
dx="@17th(Avatar of Battle)resist bludg, slash, pierc nonmagical weapon"
}

ClericSpells="<h3>Cantrips Known:@1st(3),@4th(4),@10th(5)</h3>"
ClericSpells+="<b onClick=Guidance()>Guidance</b>,"
ClericSpells+="<b onClick=Resistance()>Resistance</b>,"
ClericSpells+="<b onClick=SacredFlame()>SacredFlame</b>,"
ClericSpells+="<b onClick=SpareTheDying()>SpareTheDying</b>,"
ClericSpells+="<b onClick=Thaumaturgy()>Thaumaturgy</b>,"
ClericSpells+="<b onClick=Light()>Light</b>,"
ClericSpells+="<b onClick=Mending()>Mending</b>"
ClericSpells+="<h3>1stSlot:@1st(2/2),@2nd(3/3),@3rd(4/4)</h3>"
ClericSpells+="<b onClick=Bane()>Bane</b>,"
ClericSpells+="<b onClick=Bless()>Bless</b>,"
ClericSpells+="<b onClick=Command()>Command</b>,"
ClericSpells+="<b onClick=CreateorDestroyWater()>CreateorDestroyWater</b>,"
ClericSpells+="<b onClick=CureWounds()>CureWounds</b>,"
ClericSpells+="<b onClick=DetectEvilAndGood()>DetectEvilAndGood</b>,"
ClericSpells+="<b onClick=DetectMagic()>DetectMagic</b>,"
ClericSpells+="<b onClick=DetectPoisonAndDisease()>DetectPoisonAndDisease</b>,"
ClericSpells+="<b onClick=GuidingBolt()>GuidingBolt</b>,"
ClericSpells+="<b onClick=HealingWord()>HealingWord</b>,"
ClericSpells+="<b onClick=InflictWounds()>InflictWounds</b>,"
ClericSpells+="<b onClick=ProtectionFromEvilAndGood()>ProtectionFromEvilAndGood</b>,"
ClericSpells+="<b onClick=PurifyFoodAndDrink()>PurifyFoodAndDrink</b>,"
ClericSpells+="<b onClick=Sanctuary()>Sanctuary</b>,"
ClericSpells+="<b onClick=ShieldOfFaith()>ShieldOfFaith</b>"
ClericSpells+="<h3>2ndSlot:@3rd(2/2),@4th(3/3)</h3>"
ClericSpells+="<b onClick=Aid()>Aid</b>,"
ClericSpells+="<b onClick=Augury()>Augury</b>,"
ClericSpells+="<b onClick=BlindnessDeafness()>BlindnessDeafness</b>,"
ClericSpells+="<b onClick=CalmEmotions()>CalmEmotions</b>,"
ClericSpells+="<b onClick=ContinualFlame()>ContinualFlame</b>,"
ClericSpells+="<b onClick=EnhanceAbility()>EnhanceAbility</b>,"
ClericSpells+="<b onClick=FindTraps()>FindTraps</b>,"
ClericSpells+="<b onClick=GentleRepose()>GentleRepose</b>,"
ClericSpells+="<b onClick=HoldPerson()>HoldPerson</b>,"
ClericSpells+="<b onClick=LesserRestoration()>LesserRestoration</b>,"
ClericSpells+="<b onClick=LocateObject()>LocateObject</b>,"
ClericSpells+="<b onClick=PrayerOfHealing()>PrayerOfHealing</b>,"
ClericSpells+="<b onClick=ProtectionFromPoison()>ProtectionFromPoison</b>,"
ClericSpells+="<b onClick=Silence()>Silence</b>,"
ClericSpells+="<b onClick=SpiritualWeapon()>SpiritualWeapon</b>,"
ClericSpells+="<b onClick=WardingBond()>WardingBond</b>,"
ClericSpells+="<b onClick=ZoneOfTruth()>ZoneOfTruth</b>"
ClericSpells+="<h3>3rdSlot:@5th(2/2),@6th(3/3)</h3>"
ClericSpells+="<b onClick=AnimateDead()>AnimateDead</b>,"
ClericSpells+="<b onClick=BeaconOfHope()>BeaconOfHope</b>,"
ClericSpells+="<b onClick=BestowCurse()>BestowCurse</b>,"
ClericSpells+="<b onClick=Clairvoyance()>Clairvoyance</b>,"
ClericSpells+="<b onClick=CreateFoodAndWater()>CreateFoodAndWater</b>,"
ClericSpells+="<b onClick=Daylight()>Daylight</b>,"
ClericSpells+="<b onClick=DispelMagic()>DispelMagic</b>,"
ClericSpells+="<b onClick=GlyphOfWarding()>GlyphOfWarding</b>,"
ClericSpells+="<b onClick=MagicCircle()>MagicCircle</b>,"
ClericSpells+="<b onClick=MassHealingWord()>MassHealingWord</b>,"
ClericSpells+="<b onClick=MeldIntoStone()>MeldIntoStone</b>,"
ClericSpells+="<b onClick=ProtectionFromEnergy()>ProtectionFromEnergy</b>,"
ClericSpells+="<b onClick=RemoveCurse()>RemoveCurse</b>,"
ClericSpells+="<b onClick=Revivify()>Revivify</b>,"
ClericSpells+="<b onClick=Sending()>Sending</b>,"
ClericSpells+="<b onClick=SpeakWithDead()>SpeakWithDead</b>,"
ClericSpells+="<b onClick=SpiritGuardians()>SpiritGuardians</b>,"
ClericSpells+="<b onClick=Tongues()>Tongues</b>,"
ClericSpells+="<b onClick=WaterWalk()>WaterWalk</b>"
ClericSpells+="<h3>4thSlot:@7th(1/1),@8th(2/2),@9th(3/3)</h3>"
ClericSpells+="<b onClick=Banishment()>Banishment</b>,"
ClericSpells+="<b onClick=ControlWater()>ControlWater</b>,"
ClericSpells+="<b onClick=DeathWard()>DeathWard</b>,"
ClericSpells+="<b onClick=Divination()>Divination</b>,"
ClericSpells+="<b onClick=FreedomOfMovement()>FreedomOfMovement</b>,"
ClericSpells+="<b onClick=GuardianOfFaith()>GuardianOfFaith</b>,"
ClericSpells+="<b onClick=LocateCreature()>LocateCreature</b>,"
ClericSpells+="<b onClick=StoneShape()>StoneShape</b>"
ClericSpells+="<h3>5thSlot:@9th(1/1),@10th(2/2),@18th(3/3)</h3>"
ClericSpells+="<b onClick=Commune()>Commune</b>,"
ClericSpells+="<b onClick=Contagion()>Contagion</b>,"
ClericSpells+="<b onClick=DispelEvilAndGood()>DispelEvilAndGood</b>,"
ClericSpells+="<b onClick=FlameStrike()>FlameStrike</b>,"
ClericSpells+="<b onClick=Geas()>Geas</b>,"
ClericSpells+="<b onClick=GreaterRestoration()>GreaterRestoration</b>,"
ClericSpells+="<b onClick=Hallow()>Hallow</b>,"
ClericSpells+="<b onClick=InsectPlague()>InsectPlague</b>,"
ClericSpells+="<b onClick=LegendLore()>LegendLore</b>,"
ClericSpells+="<b onClick=MassCureWounds()>MassCureWounds</b>,"
ClericSpells+="<b onClick=PlanarBinding()>PlanarBinding</b>,"
ClericSpells+="<b onClick=RaiseDead()>RaiseDead</b>,"
ClericSpells+="<b onClick=Scrying()>Scrying</b>"
ClericSpells+="<h3>6thSlot:@11th(1/1),@19th(2/2)</h3>"
ClericSpells+="<b onClick=BladeBarrier()>BladeBarrier</b>,"
ClericSpells+="<b onClick=CreateUndead()>CreateUndead</b>,"
ClericSpells+="<b onClick=FindThePath()>FindThePath</b>,"
ClericSpells+="<b onClick=Forbiddance()>Forbiddance</b>,"
ClericSpells+="<b onClick=Harm()>Harm</b>,"
ClericSpells+="<b onClick=Heal()>Heal</b>,"
ClericSpells+="<b onClick=HeroesFeast()>HeroesFeast</b>,"
ClericSpells+="<b onClick=PlanarAlly()>PlanarAlly</b>,"
ClericSpells+="<b onClick=TrueSeeing()>TrueSeeing</b>,"
ClericSpells+="<b onClick=WordOfRecall()>WordOfRecall</b>"
ClericSpells+="<h3>7thSlot:@13th(1/1),@20th(2/2)</h3>"
ClericSpells+="<b onClick=ConjureCelestial()>ConjureCelestial</b>,"
ClericSpells+="<b onClick=DivineWord()>DivineWord</b>,"
ClericSpells+="<b onClick=Etherealness()>Etherealness</b>,"
ClericSpells+="<b onClick=FireStorm()>FireStorm</b>,"
ClericSpells+="<b onClick=PlaneShift()>PlaneShift</b>,"
ClericSpells+="<b onClick=Regenerate()>Regenerate</b>,"
ClericSpells+="<b onClick=Resurrection()>Resurrection</b>,"
ClericSpells+="<b onClick=Symbol()>Symbol</b>"
ClericSpells+="<h3>8thSlot:@15th(1/1)</h3>"
ClericSpells+="<b onClick=AntimagicField()>AntimagicField</b>,"
ClericSpells+="<b onClick=ControlWeather()>ControlWeather</b>,"
ClericSpells+="<b onClick=Earthquake()>Earthquake</b>,"
ClericSpells+="<b onClick=HolyAura()>HolyAura</b>"
ClericSpells+="<h3>9thSlot:@17th(1/1)</h3>"
ClericSpells+="<b onClick=AstralProjection()>AstralProjection</b>,"
ClericSpells+="<b onClick=Gate()>Gate</b>,"
ClericSpells+="<b onClick=MassHeal()>MassHeal</b>,"
ClericSpells+="<b onClick=TrueResurrection()>TrueResurrection</b>"

this.setFeatures('<h3>Spells Known:wis+lvl</h3></td></tr><tr><td>'+ClericSpells+'</td></tr><tr><td>'+a+'</td></tr><tr><td>@2nd(Channel Divinity),@2nd(1/1)@5th(2/2)@18th(3/3)</td></tr><tr><td>@2nd(Turn Undead)1CD, 30ft-radi, vsWis or frightened, @DisAdv while cleric is in sight, dash away, 10/10turns</td></tr><tr><td>'+b+'</td></tr><tr><td>@4th(Ability Score Improvement)abi+2 or abi+1 and another abi+1@4th,@8th,@12th,@16th,@19th</td></tr><tr><td>@5th(Destroy Undead)1CD,@5th CR1/2,@8th CR1-1/2,@11th CR2-1/2,@14th CR3-1/2,@17th CR4-1/2</td></tr><tr><td>'+c+'</td></tr><tr><td>@10th(Divine Intervention)d100 roll your lvl or lower,divine helps</td></tr><tr><td>'+dx+' @20th auto success');
this.setActionNotes('1st Slots 2/2');
this.setEquipment('mace or warhammer.scale mail or leather armor or chain mail.light crossbow 20 bolts or simple weapon.priest pack or explorer pack.shield.holy symbol');
this.setHitDice(this.lvl+'d8+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('light armor, medium armor, shields, simplewpns');
this.setSaving('wis+pro, cha+pro');
this.setStrPro('');
this.setDexPro('');
this.setConPro('');
this.setIntPro('');
this.setWisPro('pro');
this.setChaPro('pro');
this.setSkills('2 from History, Insight, Medicine, Persuasion, or Religion');
this.setSpellAbility('wis')}
if(this.class.match(/Druid/)){if(this.class.match(/Arctic/)){a="@3rd(Circle of the Arctic)(Extra Spells)<b onClick=HoldPerson()>Hold Person</b>, <b onClick=SpikeGrowth()>Spike Growth</b>";
b="@5th<b onClick=SleetStorm()>Sleet Storm</b>, <b onClick=Slow()>Slow</b>";
c="@7th<b onClick=FreedomOfMovement()>Freedom of Movement</b>, <b onClick=IceStorm()>Ice Storm</b>";
dx="@9th<b onClick=CommuneWithNature()>Commune with Nature</b>, <b onClick=ConeOfCold()>Cone of Cold</b>"
}
if(this.class.match(/Coast/)){a="@3rd(Circle of the Coast)(Extra Spells)<b onClick=MirrorImage()>Mirror Image</b>, <b onClick=MistyStep()>Misty Step</b>";
b="@5th<b onClick=WaterBreathing()>Water Breathing</b>, <b onClick=WaterWalk()>Water Walk</b>";
c="@7th<b onClick=ControlWater()>Control Water</b>, <b onClick=FreedomOfMovement()>Freedom of Movement</b>";
dx="@9th<b onClick=ConjureElemental()>Conjure Elemental</b>, <b onClick=Scrying()>Scrying</b>"
}
if(this.class.match(/Desert/)){a="@3rd(Circle of the Desert)(Extra Spells)<b onClick='Blur()'>Blur</b>, <b onClick='Silence()'>Silence</b>"
b="@5th<b onClick='CreateFoodAndWater()'>Create Food and Water</b>, <b onClick='ProtectionFromEnergy()'>Protection from Energy</b>";
c="@7th<b onClick='Blight()'>Blight</b>, <b onClick='HallucinatoryTerrain()'>Hallucinatory Terrain</b>";
dx="@9th<b onClick='InsectPlague()'>Insect Plague</b>, <b onClick='WallOfStone()'>Wall of Stone</b>"
}
if(this.class.match(/Forest/)){a="@3rd(Circle of the Forest)(Extra Spells)<b onClick='Barkskin()'>Barkskin</b>, <b onClick='SpiderClimb()'>Spider Climb</b>";
b="@5th<b onClick='CallLightning()'>Call Lightning</b>, <b onClick='PlantGrowth()'>Plant Growth</b>";
c="@7th<b onClick='Divination()'>Divination</b>, <b onClick='FreedomOfMovement()'>Freedom of Movement</b>";
dx="@9th<b onClick='CommuneWithNature()'>Commune with Nature</b>, <b onClick='TreeStride()'>Tree Stride</b>"
}
if(this.class.match(/Grassland/)){a="3rd(Circle of Grasslands)(Extra Spells)<b onClick='Invisibility()'>Invisibility</b>, <b onClick='PassWithoutTrace()'>Pass without Trace</b>";
b="@5th<b onClick='Daylight()'>Daylight</b>, <b onClick='Haste()'>Haste</b>";
c="@7th<b onClick='Divination()'>Divination</b>, <b onClick='FreedomOfMovement()'>Freedom of Movement</b>";
dx="@9th<b onClick='Dream()'>Dream</b>, <b onClick='InsectPlague()'>InsectPlague</b>"
}
if(this.class.match(/Moon/)){this.setFeatures('@1st(Druidic Language)</td></tr><tr><td>@2nd(Comb@Wild Shape)bonus heal 1d8/spell slot, bonus 2/2 short rest, for lvl hours/2, no spell casting inthis form, @0hp revert to your original curHP ,@2nd(CR1),@6th(CR your lvl/3)</td></tr><tr><td></td></tr><tr><td>@4th(Ability Score Improvement)abi+2 or abi+1 and another abi+1@4th,@8th,@12th,@16th,@19th</td></tr><tr><td>@6th(Primal Strike)beast form atks are magical</td></tr><tr><td>@10th(Elemental Wild Shape)costs 2 wild shape points, transform into an Air, Fire, Water or Earth Elemental</td></tr><tr><td>@14th(Thousand Forms)<b onClick=AlterSelf()>Alter Self</b></td></tr><tr><td>@18th(Timeless Body)age 1 year for every 10<p>@18th(Beast Spells)cast spells in wild shape</td></tr><tr><td>@20th(Archdruid)unlimited wild shape')}
if(this.class.match(/Mountain/)){a="@2nd(Circle of the Mountains)(Extra Spells)<b onClick='SpiderClimb()'>Spider Climb</b>, <b onClick='SpikeGrowth()'>Spike Growth</b>";
b="@5th<b onClick='LightningBolt()'>LightningBolt</b>, <b onClick='MeldIntoStone()'>Meld into Stone</b>";
c="@7th<b onClick='StoneShape()'>Stone Shape</b>, <b onClick='StoneSkin()'>Stone Skin</b>";
dx="@9th<b onClick='Passwall()'>Passwall</b>, <b onClick='WallOfStone()'>Wall of Stone</b>"
}
if(this.class.match(/Swamp/)){a="@3rd(Circle of Swamps)<b onClick='Darkness()'>Darkness</b>, <b onClick='MelfsAcidArrow()'>Melf s Acid Arrow";
b="@5th<b onClick='WaterWalk()'>Walter Walk</b>, <b onClick='StinkingCloud()'>Stinking Cloud</b>";
c="@7th<b onClick='FreedomOfMovement()'>Freeedom of Movement</b>, <b onClick='LocateCreature()'>Locate Creature</b>";
dx="@9th<b onClick='InsectPlague()'>Insect Plague</b>, <b onClick='Scrying()'>Scrying</b>"
}
if(this.class.match(/Underdark/)){a="@3rd(Circle of the Underdark)<b onClick='SpiderClimb()'>Spider Climb</b>, <b onClick='Web()'>Web";
b="@5th<b onClick='GaseousForm()'>Gaseous Form</b>, <b onClick='StinkingCloud()'>Stinking Cloud</b>";
c="@7th<b onClick='GreaterInvisibility()'>Greater Invisibility</b>, <b onClick='StoneShape()'>Stone Shape</b>";
dx="@9th<b onClick='CloudKill()'>Cloud Kill</b>, <b onClick='InsectPlague()'>Insect Plague</b>"
}
DruidSpells="<h3>Cantrips Known:@1st(2),@4th(3),@10th(4)</h3>"
DruidSpells+="<b onClick=Druidcraft()>Druidcraft</b>,"
DruidSpells+="<b onClick=ProduceFlame()>ProduceFlame</b>,"
DruidSpells+="<b onClick=Shillelagh()>Shillelagh</b>,"
DruidSpells+="<b onClick=Guidance()>Guidance</b>,"
DruidSpells+="<b onClick=Mending()>Mending</b>,"
DruidSpells+="<b onClick=PoisonSpray()>PoisonSpray</b>,"
DruidSpells+="<b onClick=Resistance()>Resistance</b>"
DruidSpells+="<h3>1stSlot:@1st(2/2),@2nd(3/3),@3rd(4/4)</h3>"
DruidSpells+="<b onClick=AnimalFriendship()>AnimalFriendship</b>,"
DruidSpells+="<b onClick=CharmPerson()>CharmPerson</b>,"
DruidSpells+="<b onClick=CreateorDestroyWater()>CreateorDestroyWater</b>,"
DruidSpells+="<b onClick=CureWounds()>CureWounds</b>,"
DruidSpells+="<b onClick=DetectMagic()>DetectMagic</b>,"
DruidSpells+="<b onClick=DetectPoisonAndDisease()>DetectPoisonAndDisease</b>,"
DruidSpells+="<b onClick=Entangle()>Entangle</b>,"
DruidSpells+="<b onClick=FaerieFire()>FaerieFire</b>,"
DruidSpells+="<b onClick=FogCloud()>FogCloud</b>,"
DruidSpells+="<b onClick=Goodberry()>Goodberry</b>,"
DruidSpells+="<b onClick=HealingWord()>HealingWord</b>,"
DruidSpells+="<b onClick=Jump()>Jump</b>,"
DruidSpells+="<b onClick=Longstrider()>Longstrider</b>,"
DruidSpells+="<b onClick=PurifyFoodAndDrink()>PurifyFoodAndDrink</b>,"
DruidSpells+="<b onClick=SpeakWithAnimals()>SpeakWithAnimals</b>,"
DruidSpells+="<b onClick=Thunderwave()>Thunderwave</b>"
DruidSpells+="<h3>2ndSlot:@3rd(2/2),@4th(3/3)</h3>"
DruidSpells+="<b onClick=AnimalMessenger()>AnimalMessenger</b>,"
DruidSpells+="<b onClick=Barkskin()>Barkskin</b>,"
DruidSpells+="<b onClick=Darkvision()>Darkvision</b>,"
DruidSpells+="<b onClick=EnhanceAbility()>EnhanceAbility</b>,"
DruidSpells+="<b onClick=FindTraps()>FindTraps</b>,"
DruidSpells+="<b onClick=FlameBlade()>FlameBlade</b>,"
DruidSpells+="<b onClick=FlamingSphere()>FlamingSphere</b>,"
DruidSpells+="<b onClick=GustOfWind()>GustOfWind</b>,"
DruidSpells+="<b onClick=HeatMetal()>HeatMetal</b>,"
DruidSpells+="<b onClick=HoldPerson()>HoldPerson</b>,"
DruidSpells+="<b onClick=LesserRestoration()>LesserRestoration</b>,"
DruidSpells+="<b onClick=LocateAnimalsorPlants()>LocateAnimalsorPlants</b>,"
DruidSpells+="<b onClick=LocateObject()>LocateObject</b>,"
DruidSpells+="<b onClick=Moonbeam()>Moonbeam</b>,"
DruidSpells+="<b onClick=PasswithoutTrace()>PasswithoutTrace</b>,"
DruidSpells+="<b onClick=ProtectionFromPoison()>ProtectionFromPoison</b>,"
DruidSpells+="<b onClick=SpikeGrowth()>SpikeGrowth</b>"
DruidSpells+="<h3>3rdSlot:@5th(2/2),@6th(3/3)</h3>"
DruidSpells+="<b onClick=CallLightning()>CallLightning</b>,"
DruidSpells+="<b onClick=ConjureAnimals()>ConjureAnimals</b>,"
DruidSpells+="<b onClick=Daylight()>Daylight</b>,"
DruidSpells+="<b onClick=DispelMagic()>DispelMagic</b>,"
DruidSpells+="<b onClick=MeldintoStone()>MeldintoStone</b>,"
DruidSpells+="<b onClick=PlantGrowth()>PlantGrowth</b>,"
DruidSpells+="<b onClick=ProtectionFromEnergy()>ProtectionFromEnergy</b>,"
DruidSpells+="<b onClick=SleetStorm()>SleetStorm</b>,"
DruidSpells+="<b onClick=SpeakWithPlants()>SpeakWithPlants</b>,"
DruidSpells+="<b onClick=WaterBreathing()>WaterBreathing</b>,"
DruidSpells+="<b onClick=WaterWalk()>WaterWalk</b>,"
DruidSpells+="<b onClick=WindWall()>WindWall</b>"
DruidSpells+="<h3>4thSlot:@7th(1/1),@8th(2/2),@9th(3/3)</h3>"
DruidSpells+="<b onClick=Blight()>Blight</b>,"
DruidSpells+="<b onClick=Confusion()>Confusion</b>,"
DruidSpells+="<b onClick=ConjureMinorElementals()>ConjureMinorElementals</b>,"
DruidSpells+="<b onClick=ConjureWoodlandBeings()>ConjureWoodlandBeings</b>,"
DruidSpells+="<b onClick=ControlWater()>ControlWater</b>,"
DruidSpells+="<b onClick=DominateBeast()>DominateBeast</b>,"
DruidSpells+="<b onClick=FreedomOfMovement()>FreedomOfMovement</b>,"
DruidSpells+="<b onClick=GiantInsect()>GiantInsect</b>,"
DruidSpells+="<b onClick=HallucinatoryTerrain()>HallucinatoryTerrain</b>,"
DruidSpells+="<b onClick=IceStorm()>IceStorm</b>,"
DruidSpells+="<b onClick=LocateCreature()>LocateCreature</b>,"
DruidSpells+="<b onClick=Polymorph()>Polymorph</b>,"
DruidSpells+="<b onClick=StoneShape()>StoneShape</b>,"
DruidSpells+="<b onClick=Stoneskin()>Stoneskin</b>,"
DruidSpells+="<b onClick=WallOfFire()>WallOfFire</b>,"
DruidSpells+="<b onClick=AntilifeShell()>AntilifeShell</b>"
DruidSpells+="<h3>5thSlot:@9th(1/1),@10th(2/2),18th(3/3)</h3>"
DruidSpells+="<b onClick=Awaken()>Awaken</b>,"
DruidSpells+="<b onClick=CommuneWithNature()>CommuneWithNature</b>,"
DruidSpells+="<b onClick=ConjureElemental()>ConjureElemental</b>,"
DruidSpells+="<b onClick=Contagion()>Contagion</b>,"
DruidSpells+="<b onClick=Geas()>Geas</b>,"
DruidSpells+="<b onClick=GreaterRestoration()>GreaterRestoration</b>,"
DruidSpells+="<b onClick=InsectPlague()>InsectPlague</b>,"
DruidSpells+="<b onClick=MassCureWounds()>MassCureWounds</b>,"
DruidSpells+="<b onClick=PlanarBinding()>PlanarBinding</b>,"
DruidSpells+="<b onClick=Reincarnate()>Reincarnate</b>,"
DruidSpells+="<b onClick=Scrying()>Scrying</b>,"
DruidSpells+="<b onClick=TreeStride()>TreeStride</b>,"
DruidSpells+="<b onClick=WallOfStone()>WallOfStone</b>"
DruidSpells+="<h3>6thSlot:@11th(1/1),@19th(2/2)</h3>"
DruidSpells+="<b onClick=ConjureFey()>ConjureFey</b>,"
DruidSpells+="<b onClick=FindThePath()>FindThePath</b>,"
DruidSpells+="<b onClick=Heal()>Heal</b>,"
DruidSpells+="<b onClick=HeroesFeast()>HeroesFeast</b>,"
DruidSpells+="<b onClick=MoveEarth()>MoveEarth</b>,"
DruidSpells+="<b onClick=Sunbeam()>Sunbeam</b>,"
DruidSpells+="<b onClick=TransportviaPlants()>TransportviaPlants</b>,"
DruidSpells+="<b onClick=WallOfThorns()>WallOfThorns</b>,"
DruidSpells+="<b onClick=WindWalk()>WindWalk</b>"
DruidSpells+="<h3>7thSlot:@13th(1/1),@20th(2/2)</h3>"
DruidSpells+="<b onClick=FireStorm()>FireStorm</b>,"
DruidSpells+="<b onClick=MirageArcane()>MirageArcane</b>,"
DruidSpells+="<b onClick=PlaneShift()>PlaneShift</b>,"
DruidSpells+="<b onClick=Regenerate()>Regenerate</b>,"
DruidSpells+="<b onClick=ReverseGravity()>ReverseGravity</b>"
DruidSpells+="<h3>8thSlot:@15th(1/1)</h3>"
DruidSpells+="<b onClick=AnimalShapes()>AnimalShapes</b>,"
DruidSpells+="<b onClick=AntipathySympathy()>AntipathySympathy</b>,"
DruidSpells+="<b onClick=ControlWeather()>ControlWeather</b>,"
DruidSpells+="<b onClick=Earthquake()>Earthquake</b>,"
DruidSpells+="<b onClick=Feeblemind()>Feeblemind</b>,"
DruidSpells+="<b onClick=Sunburst()>Sunburst</b>"
DruidSpells+="<h3>9thSlot:@17th(1/1)</h3>"
DruidSpells+="<b onClick=Foresight()>Foresight</b>,"
DruidSpells+="<b onClick=Shapechange()>Shapechange</b>,"
DruidSpells+="<b onClick=StormOfVengeance()>StormOfVengeance</b>,"
DruidSpells+="<b onClick=TrueResurrection()>TrueResurrection</b>,"
this.setFeatures('</td></tr><tr><td>'+DruidSpells+'</td></tr><tr><td>@1st(Druidic Language)</td></tr><tr><td>@2nd(Wild Shape)2/2 short rest, for lvl hours/2, no spell casting inthis form, @0hp revert to your original curHP,@2nd(CR1/4)no flying swimming@4th(CR1/2)no flying,@8th(CR1)</td></tr><tr><td>@2nd(Circle of the Land)<p>(Bonus Cantrip)<p>(Natural Recovery)regain half lvl spell slot lvls after short rest</td></tr><tr><td>'+a+'</td></tr><tr><td>@4th(Ability Score Improvement)abi+2 or abi+1 and another abi+1@4th,@8th,@12th,@16th,@19th</td></tr><tr><td>'+b+'</td></tr><tr><td>@6th(Land s Stride)ignore difficult terrain, pass plants without dmg, ignore slowed, immune to Entangle</td></tr><tr><td>'+c+'</td></tr><tr><td>'+dx+'</td></tr><tr><td>@10th(Nature s Ward)immune to charmed, frightened, poisoned, diseased</td></tr><tr><td>@14th(Nature s Sanctury)vsWis atking tgt must atk another</td></tr><tr><td>@18th(Timeless Body)age 1 year for every 10<p>@18th(Beast Spells)cast spells in wild shape</td></tr><tr><td>@20th(Archdruid)unlimited wild shape');
this.setEquipment('wooden shield or simple weapon.sciitar or simple melee weapon.leather armor.explorer pack.Druidic focus');
this.setHitDice(this.lvl+'d8+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('light non-metal armor, medium non-metal armor, non-metal shields, clubs, daggers, darts, javelins, maces, quarterstaffs, scimitars, sickles, slings, spears, an herbalism kit');
this.setSaving('int+pro, wis+pro');
this.setStrPro('');
this.setDexPro('');
this.setConPro('');
this.setIntPro('pro');
this.setWisPro('pro');
this.setChaPro('');
this.setSkills('2 from Arcana, Animal Handling, Insight, Medicine, Nature, Perception, Religion, or Survival');
this.setSpellAbility('wis')}
if(this.class.match(/Fighter/)){if(this.class.match(/Archer/)){a='(Arcane Archer)<p>(Arcane Shot)Arcana+pro or Nature+pro and Prestidigitation or DruidCraft recharge shots after short rest,@3rd 2 options@7th 3 options@10th 4 options@15th 5 options@18th 6 options<p>(Arcane Shot Options)(Banishing Arrow)DC8+int+pro vsCha or hit tgt is banished to a harmless Feywild place utteo your nt@18th tgt takes 2d6 force dmg(Beguiling Arrow)+2d6 psychic dmg and ally 30ft charms tgt DC8+yourInt+pro vsWis ttteo your nt or ally atks target(Enfeebling Arrow)+2d6 necro dmg and DC8+int+pro vsCon or tgt does half dmg ttteo your nt @18th+4d6 necro dmg(Grasping Arrow)+2d6 poison dmg, speed-10ft+2d6 slash moving 1ft or more 1act to remove brambles Athletics vs your DC8+int+pro or 1min@18th+4d6 poison dmg(pierc Arrow)DC8+int+proDC8+'+characters[targeted].spellAbility+'+pro vsDex or tgts take invisible arrow dmg+1d6 dmg @18th+2d6 dmg(Seeking Arrow)1tgt seen in past 1min, DC8+int+proDC8+'+characters[targeted].spellAbility+'+pro vsDex 1/2dmg,dmg arrow+1d6force and tgt location is still unknown@18th+2d6(Shadow Arrow)+2d6psychic dmg and DC8+int+pro vsWis or blinded 5ft ttso your next turn@18th+4d6psychic';
b='@7th(Curving Shot)bonus reroll atk against another tgt within 60ft<p>@7th(Magic Arrow)arrow becomes magical to defe@non-magical resistance and immunity';
c='';
dx='@15th(EverReady Shot)if no shots, regain 1 arcane shot';
e=''
}
if(this.class.match(/Battle/)){a='(Battle Master)<p>(Superiority Die Value)@3rd d8,@10th d10,@18th d12<p>(# of Superiority Dice)/long rest,@3rd 4/4,@7th 5/5,@15th 6/6<p>(Known Maneuvers)using str or dex,@3rd 3,@7th 5,@10th 7,@15th 9<p>(Maneuvers)<p>(Commander Strike)1SD, forgo atk, ally reacts dmg+SD<p>(Disarming atk)1SD, dmg+SD+pro vsStr or drops item<p>(Distractive Strike)1SD, dmg+SD, next ally atk@Adv on target<p>(Evasive Footwork)1SD, when moving, AC+SD<p>(Feinting atk)1SD, bonus,same turn next atk@Adv, dmg+SD<p>(Goading atk)1SD, dmg+SD, vsWis or atks allies @DisAdv other than you<p>(Lunging atk)1SD, +5ft, dmg+SD<p>(Maneuvering atk)1SD, dmg+SD, allies move half not opp atkd.<p>(Menacing atk)1SD, dmg+SD, vsWis or frightened tteo your nt<p>(Parry)1SD, when hit, your dam-SD-dexMod<p>(Precision atk)1SD, atk+SD<p>(Pushing atk)1SD, dmg+SD, Large 10x10ft or less vsStr or pushed 15ft<p>(Rally)1SD, bonus ally temp hp+SD+chaMod<p>(Riposte)1SD, when missed, react melee atk, dmg+SD<p>(Sweeping atk)1SD, on hit, adjac tgt dmg is SD<p>(Trip atk)1SD, on hit, Large 10x10ft or less vsStr or prone, dmg+SD</td></tr><tr><td>@3rd(Student of War)Artisans Tools+pro';
b='@7th(Know Your Enemy)observe 1min, DM tells 2 stats of target';
c='';
dx='@15th(Relentless)@15th 1/1, roll init with 0SD is 1SD';
e=''
}
if(this.class.match(/Cavalier/)){a='(Cavalier)</td></tr><tr><td>@3rd (Bonus Proficiency) 1 from Animal Handling, History, Insight, Performance, or Persuasion or 1 Language</td></tr><tr><td>@3rd(Born to the Saddle)avoid falling from horse@Adv or take no dmg from a 10ft fall from horse</td></tr><tr><td>@3rd(Unwavering Mark)on tgt hit, tgt atks all but you @DisAdv and if dmg, you can bonus atk+half your xtra fighter lvl dmg utteo your nt, str mod times/long rest';
b='@7th(Warding Maneuver)you or adjac ally 1d8+AC, resistance if hit, con mod times/long rest';
c='@10th(Hold the Line)adjac moving tgts provoke opp atks, on hit, tgt speed 0 theoit';
dx='@15th(Ferocious Charger)charge and hit tgt from @least 10ft and DC8+str+pro vsStr or tgt knocked prone 1/turn';
e='@18th(Vigilant Defender)use a react on each tgt turn to make an opp atk'
}
if(this.class.match(/Samurai/)){a='(Samurai)</td></tr><tr><td>@3rd (Bonus Proficiency) 1 from History, Insight, Performance, Persuasion, or 1 Language</td></tr><tr><td>(Fighting Spirit)bonus atk@Adv tteoyt 3/encounter/long rest and ,@3rd 5 temp hp @10th 10 temp hp @15th 15 temp';
b='@7th(Elegant Courtier)Persuasion+cha+wis+pro and wis+pro, or int+pro or cha+pro';
c='@10th(Tireless Spirit)if none, regain 1 Fighting Spirit';
dx='@15th(Rapid Strike)exchange atk@Adv for a second normal atk';
e='@18th(Strength before Death)@0hp, react take xtra turn/long rest'
}
if(this.class.match(/Champion/)){a='Champion</td></tr><tr><td>@3rd(Improved Critical)2Xdmg on nat 19 or 20';
b='@7th(Remarkable Athlete)+half pro to non-pro str, dex, con, long jumpft+strMod';
c='@10th(Additional Fighting Style)1';
dx='@15th(Superior Critical)crit on natural 18, 19 or 20';
e='@18th(Survivor)@half hp not 0hp, utso each turn heal 5+conMod'
}
if(this.class.match(/Knight/)){a='Eldritch Knight</td></tr><tr><td>@3rdweapon BOND ignore disarm, bonus summon, 2 bonds ok';
b='@7th.WAR MAGIC cast cantrip, bonus weapon atk';
c='@10th.ELDRITCH STRIKE on weapon hit, tgt saves @DisAdv vs your next spell';
dx='@15th.ARCANE CHARGE use action surge then teleport 30ft</td></tr><tr><td>Relentless</td></tr><tr><td>@(15th 1/1)roll init with 0SD is 1SD';
e='@18th.IMPROVED WAR MAGIC cast spell, make bonus weapon atk'
}
this.setFeatures('</td></tr><tr><td>@1st(Fighting Style)<br>(Archery)ranged atk+2or(Defense)while armored, AC+1<br>or(Dueling)melee dmg+2<br>or(Great Weapon Fighting)reroll on 1 or 2<br>or(Protection)with shield, adjac allies atkd @DisAdv<br>or(Two Weapon Fighting)secondary dmg+abiMod</td></tr><tr><td>@2nd(Second Wind)1/1 short rest, bonus,heal 1d10+lvl</td></tr><tr><td>@2nd(Action Surges)@2nd 1/1,@17th 2/2</td></tr><tr><td>@3rd(Martial Archetype)'+a+'</td></tr><tr><td>@4th(Ability Score Improvement)@4th,@6th,@8th@12th@14th@16th@19th</td></tr><tr><td>@5th(Extra atks)@5th 2,@10th 3,@20th 4</td></tr><tr><td>'+b+'</td></tr><tr><td>@9th(Indomitable)re-roll failed save/long rest@9th 1,@13th 2,@17th 3</td></tr><tr><td>'+c+'</td></tr><tr><td>'+dx+'</td></tr><tr><td>'+e+'');
this.setActionNotes("(Fighting Style)(?),(Second Wind)0/0,(Action Surges)0/0,(Extra Atks)0,(Indomitable)0/0(Relentless)0/0");
this.setEquipment('chain mail or leather.Longbow.20 arrows.martial weapon and shield or 2 martialwpns.light crossbow 20 bolts or 2 handaxes.dungeoneer pack or explorer pack');
this.setHitDice(this.lvl+'d10+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('all armor, shields, simplewpns, martialwpns');
this.setSaving('str+pro, con+pro');
this.setStrPro('pro');
this.setDexPro('');
this.setConPro('pro');
this.setIntPro('');
this.setWisPro('');
this.setChaPro('');
this.setSkills('2 from Acrobatics, Animal Handling, Insight, Intimidation, Perception, or Survival')}
if(this.class.match(/Monk/)){if(this.class.match(/Elements/)){a='Four Elements</td></tr><tr><td>@3rdDISCIPLE Of THE ELEMENTS when learning a new one, you can swap 1 you know with a new one ,@6th(1 more)@(11th 1 more)@(17th 1 more)</td></tr><tr><td>Monk lvl cost.5th-8th 3ki.9th-12th 4ki.13th-16th 5ki.17th-20th 6ki</td></tr><tr><td>@3rd ELEMENTAL ATTUNEMENT shower of sparks, puff of air or light or snuff torch, or chill or warm 1lb objects or mist, fire, earth 1ft-cube shaped into crude form ,@3rd FANGS OF THE FIRE SNAKE 1Ki, unarmed ranged 10ft fire dmg+1d10/1Ki ,@3rd FIST OF UNBROKEN AIR 1act,2Ki, 30ftDC8+'+characters[targeted].spellAbility+'+pro vsStr 1/2dmg,3d10bludge+1d10/1Ki and not pushed 20ft prone ,@3rd RUSH OF THE GALE SPIRITS 2Ki Gust of Wind ,@3rd SHAPE OF THE FLOWING RIVER 1Ki ice to water or water to ice 30x120ft ,@3rd SWEEPING CINDER STRIKE 2Ki Burning Hands ,@3rd WATER WHIP 1act @Ki 30ftDC8+'+characters[targeted].spellAbility+'+pro vsDex 1/2dmg,3d10bludge+1d10/1Ki and not prone or pulled 25ft';
b='@6th CLENCH OF THE NORTH WIND 6Ki Cone of Cold ,@6th GONG OF THE SUMMIT 3Ki Shatter @11th ETERNAL MOUNTAIN DEFENSE 5Ki, self, Stoneskin';
c='@11th FLAMES OF THE PHOENIX 4Ki Fireball @11th MIST STANCE 4Ki, self, Gaseous Form @11th RIDE THE WIND 4Ki, self, Fly';
dx='@17th BREATH OF WINTER 6Ki Cone of Cold @17th RIVER OF HUNGRY FLAME 5Ki Wall of Fire @17th WAVE OF ROLLING EARTH 6Ki Wall of Stone'
}
if(this.class.match(/Cobalt/)){a='(Cobalt Soul)</td></tr><tr><td>@3rd(Mystical Erudition)tgt is hit, spend 1 Ki Point, vsCon or you learn tgt type or ac or senses or highest or lowest save modifier or vulnerabilities or resistance or immunities ,@6th learn 2 aspects @11th 3 @17th 4';
b='@6th(Extort Truth)tgt is hit twice, spend 2 Ki Points, tgt knows it can not lie for 1min</td></tr><tr><td>@6th(Mind of Mercury)take a number int mod of reacts per trigger @cost of 1 Ki Point after the first react, spend 1 Ki Point, Investigation@Adv';
c='@11th(Preternatural Counter)atker misses you, you use your react to atk';
dx='@17th(Debilitating Barrage)hit tgt with 3 or more atks, spend 3 ki points, tgt atks @DisAdv utteo your nt and vsCon or vulnerable to a dmg type of your choice 1min, unless resistant or immune which is revealed when you choose'
}
if(this.class.match(/Drunken/)){a='(Drunken Master)</td></tr><tr><td>@3rd(Bonus Proficiencies)Performance+pro and Brewer s Supplies+pro</td></tr><tr><td>@3rd(Drunken Technique)Flurry of Blows then bonus Disengage, walk speed+10ft tteoyct';
b='@6th(Tipsy Sway)(Leap to Yourft)prone spend 5ft not half movement speed(Redirect atk)1 Ki react tgt hits its ally';
c='@11th(Drunkard s Luck)2 ki remove disadv from your roll';
dx='@17th(Intoxicated Frenzy)make 5 Flurry of Blow atks each to a different target'
}
if(this.class.match(/Kensei/)){a='(Kensei)Caligraphy+pro or Painting+pro</td></tr><tr><td>@3rd(Path of the Kensei)choose 2, 1 melee weapon+pro and one ranged weapon+pro as kensei monkwpns, but not heavy or specialwpns,@6th one more weapon@11th one more weapon@17th one more weapon(Agile Parry)unarmed strike as part of the atk with a kensei monk weapon gives you AC+2(Kensei s Shot)bonus,kensei ranged weapon+1d4 dmg uteoyt';
b='@6th(One with the Blade)1Ki kensei weapon becomes(Magic)al versus immunity and resistance to non-magicalwpns(Deft Strike)1Ki kensei weapon does+xtra Martial Arts die dmg 1/turn';
c='@11th(Sharpen the Blade)atk and dmg rolls+xtra 1 to 3Ki';
dx='@17th(Unerring Accuracy)miss with kensei weapon and reroll 1/turn'
}
if(this.class.match(/Sun Soul/)){a='@3rd(Radiant Sun Bolt)+dex+pro 30ft 1d4 radiant dmg, increases with Martial Arts dice, 1Ki bonus atk';
b='@6th(Searing Arc Strike)2Ki Burning Hands spell as bonus,spend more Ki to increase slot lvl of Burning Hands, max Ki spent is 1/2 your monk lvl';
c='@11th(Searing Sunburst)150ft, tgts in 20ft-radi DC8+dex+pro vsCon or 2d6 radiant dmg, total cover tgts auto save, spend Ki to increase dmg+2d6 to a maximum spent 3Ki';
dx='@17th(Sun Shield)30ft aura of light or extinquish light, if hit, react deal 5+wismod radiant dmg'
}
if(this.class.match(/Open/)){a='Open Hand</td></tr><tr><td>@3rdOPEN HAND TECHNIQUE on hit,DC8+'+characters[targeted].spellAbility+'+pro vsDex or prone or vsStr or pushed 15ft or no reacts tteo your nt';
b='@6th.WHOLENESS OF BODY 1/1/long rest, 1act,heal 3 x lvl';
c='@11th.TRANQUILITY 1/1/long rest, Sanctuary';
dx='@17th.QUIVERING PALM on unarmed hit, 3Ki, after days are lvl, vsCon for 10d10 necrotic or 0hp, or end harmlessly'
}
if(this.class.match(/Shadow/)){a='Shadow</td></tr><tr><td>@3rdSHADOW ARTS 2Ki Darkness or Darkvision or Pass without Trace or Silence, learn Minor Illusion';
b='@6th.SHADOW STEP on 1st melee atk, in dim light or darkness, teleport 60ft';
c='@11th.CLOAK OF SHADOWS 1act,in dim or darkness, invisible';
dx='@17th.OPPORTUNIST when adjac tgt hit by ally, react 1 melee atk'
}
this.setFeatures('</td></tr><tr><td>@1st(Unarmored Defense)unarmored no shield, AC10+dexMod+wisMod<p>(Martial Arts Damage Dice)unnarmed+bonus unarmed or simple weapon+bonus unarmed+dexMod or strMod weapon dam or 1d4 dam@1st 1d4@5th 1d6@11th 1d8@17th 1d10</td></tr><tr><td>@2nd(Ki Powers)save vs DC8+wis+pro<p>(Ki Points)1 per Monk Level, are recovered after a short 4 hour rest<p>(Flurry of Blows)1Ki, 1 more bonus narmed<p>(Patient Defense)1Ki, Dodge is bonus<p>(Step of the Wind)1Ki, Disengage or Dash as bonus,jumpft x 2<p>@(Unarmored Movement)when unarmored no shield,@2nd +10ft,@6th+15ft@9th move across walls and water without falling@10th +20ft@14th +25ft @18th +30ft</td></tr><tr><td>@3rd(Monastic Tradition)Way of the'+a+'<p>(Deflect Missiles)react, ranged hit dmg-1d10+dexMod, @0 dam catch and bonus ranged 20/60ft atk+pro</td></tr><tr><td>@4th(Slow Fall)fall dmg-5 x lvl<p>@4th(Ability Score Improvement)@4th,@8th,@12th,@16th,@19th</td></tr><tr><td>@5th Extra atk</td></tr><tr><td>@5th(Stunning Strike)1Ki, vsCon or stunned tteo your nt</td></tr><tr><td>@6th(Ki-Empowered Strikes)unarmed is magical</td></tr><tr><td>'+b+'</td></tr><tr><td>@7th(Evasion)dex 1/2dmg,is no dmg</td></tr><tr><td>@7th(Stillness of Mind)1act,self, end 1 charm or fear</td></tr><tr><td>@10th(Purity of Body)immune disease poison</td></tr><tr><td>'+c+'</td></tr><tr><td>@13th(Tongue of the Sun and Moon)understand all languages, tgts understand yours</td></tr><tr><td>@14th(Diamond Soul)all saves+pro, 1Ki reroll 1 save</td></tr><tr><td>@15th(Timeless Body)immune magical aging, no age penalties, no need food water</td></tr><tr><td>'+dx+'</td></tr><tr><td>@18th(Empty Body)4Ki invisible 10/10turns, resist all but force, 8Ki Astral Projection you and 1 ally</td></tr><tr><td>@20th(Perfect Self)roll init 0Ki is 4Ki');
this.setEquipment('shortsword or simple weapon.dungeoneer pack or explorer pack.10/10 darts');
this.setHitDice(this.lvl+'d8+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('simplewpns, shortswords');
this.setSaving('str+pro, dex+pro');
this.setStrPro('pro');
this.setDexPro('pro');
this.setConPro('');
this.setIntPro('');
this.setWisPro('');
this.setChaPro('');
this.setSkills('2 from Acrobatics, Athletics, History, Insight, Religion, or Stealth');
this.setSpellAbility('wis')}
if(this.class.match(/Paladin/)){if(this.class.match(/Ancients/)){a='@3rd(Nature s Wrath) 1CD, 1act,10ft, str orDC8+'+characters[targeted].spellAbility+'+pro vsDex end of each of its turns or restrained</td></tr><tr><td>@3rdTURN THE FAITHLESS 1CD, fey or fiend 30ft vsWis or Dash true form revealed</td></tr><tr><td>@3rd<b onClick=EnsnaringStrike()>Ensnaring Strike</b> ,@3rd[x]Speak with Animals';
b='@5th[x]Moonbeam @5th<b onClick=MistyStep()>Misty Step</b>';
c='@7th.AURA OF WARDING 10ft you and allies resist spell dam @7th(10ft)@(18th 30ft)</td></tr><tr><td>@9th[x]Plant Growth @9th<b onClick=ProtectionFromEnergy()>Protection from Energy</b>';
dx="@13th<b onClick=IceStorm()'>IceStorm</b> @13th[x]Stoneskin";
e="@15th.UNDYING SENTINEL 1/1/long rest, 0hp is 1hp, no aging penalties, immune magical aging</td></tr><tr><td>@17th <b onClick=CommuneWithNature()>Commune with Nature</b> @17th<b onClick=TreeStride()'>TreeStride</b></td></tr><tr><td>@20th.ELDER CHAMPION 1/1/long rest, 10/10turns, heal 10hp/turn, spells 1act is bonus,10ft tgts save @DisAdv vs your paladin spells and channel divinity";
}
if(this.class.match(/Conquest/)){a="@3rd(Oath Spells)</td></tr><tr><td>@3rd(Channel Divinity)";
b='';
c='@7th(Aura of Conquest)';
dx='';
e='@15th(Scornful Rebuke)</td></tr><tr><td>18th(Aura of Conquest)</td></tr><tr><td>@20th(Invincible Conqueror)'
}
if(this.class.match(/Crown/)){a="@3rd(Channel Divinity:Champion Challenge)1CD, chosen tgts within 30ft save vsWis or tgts must stay within 30ft of you ,@3rd(Channel Divinity:Turn the Tide)1CD, bonus,hearing allies with half or fewer HP within 30ft heal 1d6+chaMod</td></tr><tr><td>@3rd(Oath of the Crown Spells)<b onClick='Command()'>Command</b>, <b onClick='CompelledDuel()'>Compelled Duel</b>";
b="@5th(Oath of the Crown Spells)<b onClick='WardingBond()'>Warding Bond</b>, <b onClick='ZoneOfTruth()'>Zone of Truth</b>";
c="@7th(Divine Allegiance)1 react, you take the dmg an adjac ally would take";
dx="@13th(Oath of the Crown Spells)<b onClick='Banishment()'>Banishment</b>, <b onClick='GuardianOfFaith()'>Guardian of Faith</b>";
e="@15th(Unyielding Spirit)save vs Paralysis or Stun@Adv</td></tr><tr><td>@17th(Oath of the Crown Spells)<b onClick='CircleOfPower()'>Circle of Power</b>, <b onClick='Geas()'>Geas</b></td></tr><tr><td>@20th(Exalted Champion)1act,resist bludgeon, pierc, slash dmg from non-magicalwpns, allies within 30ft save vs Death@Adv, you and allies within 30ft vsWis@Adv, recharge on/long rest"
}
if(this.class.match(/Devotion/)){a="@3rd(Sacred Weapon)1act,1CD, 10/10turns, magical atk+chaMod, light 20ft rad+dim light 20ft rad</td></tr><tr><td>@3rd(Turn the Unholy)1CD, 30ft undead vsWis or Dash 30ft away no reacts, 10/10turns or dmgd</td></tr><tr><td>@3rd<b onClick='ProtectionFromEvilAndGood()'>Protection from Evil and Good</b> ,@3rd<b onClick='Sanctuary()'>Sanctuary</b>";
b="@5th<b onClick='LesserRestoration()'>Lesser Restoration</b> @5th<b onClick=ZoneOfTruth()'>ZoneOfTruth</b>";
c="@7th(Aura of Devotion)@10th 10ft,@18th 30ft</td></tr><tr><td>@9th<b onClick='BeaconOfHope()'>Beacon of Hope</b> @9th<b onClick='DispelMagic()'>DispelMagic</b>";
dx="@13th<b onClick=FreedomOfMovement()>Freedom of Movement</b>@13th<b onClick='GuardianOfFaith()'>Guardian of Faith</b>";
e="@15th(Purity of Spirit)permanent Protection from Evil and Good</td></tr><tr><td>@17th<b onClick='Commune()'>Commune</b> @17th<b onClick=FlameStrike()>Flame Strike</b></td></tr><tr><td>@20th(Holy Nimbus)1/1/long rest, 30ft-radi light+30ft-radi dim light tgts take 10 dam if starting turn in light save@Adv vs fiend and undead spells)"
}
if(this.class.match(/Oathbreaker/)){a="@3rd CD Option:<b onClick='ControlUndead()>Control Undead</b> or CD Option:<b onClick='DreadfulAspect()'>Dreadful Aspect</b>xtra Spell:<b onClick='HellishRebuke()'>Hellish Rebuke</b>xtra Spell:<b onClick='InflictWounds()'>Inflict Wounds</b>";
b="@5th <b onClick='CrownOfMadness()'>Crown of Madness</b>, <b onClick='Darkness()'>Darkness</b></td></tr><tr><td>@7th(Aura of Hate)allies 10ft melee wpn dmg+paladin cha, @18th 30ft";
c="@9th <b onClick='AnimateDead()'>Animate Dead</b>, <b onClick='BestowCurse()'>Bestow Curse</b>";
dx="@13th <b onClick='Blight()'>Blight</b>, <b onClick='Confusion()'>Confusion</b></td></tr><tr><td>@15th(Supernatural Resistance)resist bludg, pierc, slash dmg from non-magical wpns";
e="@17th <b onClick='Contagion()'>Contagion</b>, <b onClick='DominatePerson()'>Dominate Person</b></td></tr><tr><td>@20th(Dread Lord)1 min, gloom reduces light 30ft-radi, tgts in gloom take 4d10 psychic dmg if frightened, sighted tgts atk@DisAdv, paladin shadows atk as bonus 3d10+cha dmg"
}
if(this.class.match(/Vengence/)){a='@3rd(Oath of Vengence)</td></tr><tr><td>@3rd(Abjure Enemy)1act,1CD, 60ft vsWis 1/2dmg,speed or frightened speed 0, fiends and undead @DisAdv</td></tr><tr><td>@3rd(Vow of Enmity)bonus,1tgt, 10ft, 1CD, atk@Adv, 10/10turns</td></tr><tr><td>@3rd(Extra Spells)<b onClick=Bane()>Bane</b>, <b onClick=HuntersMark()>Hunter s Mark</b>';
b='@5th(Extra Spells)<b onClick=HoldPerson()>Hold Person</b> <b onClick=MistyStep()>Misty Step</b>';
c='@7th(Relentless Avenger)while opp atking, move half speed, immune opp atkd</td></tr><tr><td>@9th(Extra Spells)<b onClick=Haste()>Haste</b> <b onClick=ProtectionFromEnergy()>Protection from Energy</b>';
dx="@13th(Extra Spells)<b onClick=Banishment()>Banishment</b>, <b onClick='DimensionDoor()'>Dimension Door</b>";
e='@15th(Soul of Vengence)while Vow of Enmity, react melee atk</td></tr><tr><td>@17th(Extra Spells)<b onClick=HoldMonster()>Hold Monster</b> <b onClick=Scrying()>Scrying</b></td></tr><tr><td>@20th(Avenging Angel)1/1 1hr, fly @speed 60ft, 30ft-radi aura vsWis or frightened atkd@Adv'
}
PaladinSpells="<h3>1stSlot:@2nd(2/2),@3rd(3/3),@5th(4/4)</h3>"
PaladinSpells+="<b onClick=Bless()>Bless</b>,"
PaladinSpells+="<b onClick=Command()>Command</b>,"
PaladinSpells+="<b onClick=CureWounds()>CureWounds</b>,"
PaladinSpells+="<b onClick=DetectEvilAndGood()>DetectEvilAndGood</b>,"
PaladinSpells+="<b onClick=DetectMagic()>DetectMagic</b>,"
PaladinSpells+="<b onClick=DetectPoisonAndDisease()>DetectPoisonAndDisease</b>,"
PaladinSpells+="<b onClick=DivineFavor()>DivineFavor</b>,"
PaladinSpells+="<b onClick=Heroism()>Heroism</b>,"
PaladinSpells+="<b onClick=ProtectionFromEvilAndGood()>ProtectionFromEvilAndGood</b>,"
PaladinSpells+="<b onClick=PurifyFoodAndDrink()>PurifyFoodAndDrink</b>,"
PaladinSpells+="<b onClick=ShieldOfFaith()>ShieldOfFaith</b>"
PaladinSpells+="<h3>2ndSlot:@5th(2/2),@7th(3/3)</h3>"
PaladinSpells+="<b onClick=Aid()>Aid</b>,"
PaladinSpells+="<b onClick=BrandingSmite()>BrandingSmite</b>,"
PaladinSpells+="<b onClick=FindSteed()>FindSteed</b>,"
PaladinSpells+="<b onClick=LesserRestoration()>LesserRestoration</b>,"
PaladinSpells+="<b onClick=LocateObject()>LocateObject</b>,"
PaladinSpells+="<b onClick=MagicWeapon()>MagicWeapon</b>,"
PaladinSpells+="<b onClick=ProtectionFromPoison()>ProtectionFromPoison</b>,"
PaladinSpells+="<b onClick=ZoneOfTruth()>ZoneOfTruth</b>"
PaladinSpells+="<h3>3rdSlot:@9th(2/2),@11th(3/3)</h3>"
PaladinSpells+="<b onClick=CreateFoodAndWater()>CreateFoodAndWater</b>,"
PaladinSpells+="<b onClick=Daylight()>Daylight</b>,"
PaladinSpells+="<b onClick=DispelMagic()>DispelMagic</b>,"
PaladinSpells+="<b onClick=MagicCircle()>MagicCircle</b>,"
PaladinSpells+="<b onClick=RemoveCurse()>RemoveCurse</b>,"
PaladinSpells+="<b onClick=Revivify()>Revivify</b>"
PaladinSpells+="<h3>4thSlot:@13th(1/1),@15th(2/2),@17th(3/3)</h3>"
PaladinSpells+="<b onClick=Banishment()>Banishment</b>,"
PaladinSpells+="<b onClick=DeathWard()>DeathWard</b>,"
PaladinSpells+="<b onClick=LocateCreature()>LocateCreature</b>"
PaladinSpells+="<h3>5thSlot:@17th(1/1),@19th(2/2)</h3>"
PaladinSpells+="<b onClick=DispelEvilAndGood()>DispelEvilAndGood</b>,"
PaladinSpells+="<b onClick=Geas()>Geas</b>,"
PaladinSpells+="<b onClick=RaiseDead()>RaiseDead</b>"
this.setFeatures('</td></tr><tr><td>Cantrips Known: none<br>Spells Known: all Paladin Spells, just need to level up to aquire the slots to spend</td></tr><tr><td>'+PaladinSpells+'</td></tr><tr><td>@1st(Divine Sense)60ft aura detect celestial, fiend, undead, Hallow spell desecrated consecrated places or objects, tteo your nt(1+chaMod/1+chaMod)/long rest</td></tr><tr><td>@1st(Lay on Hands)touch less undead and constructs heal from a pool of 5x lvl points(6/6)/long rest, 5 pool points/cure 1 disease or neutralize 1 poison</td></tr><tr><td>@2nd(Fighting Style)<br>(Defense)while armored AC+1<br>or(Dueling)weapon dmg+2<br>or(Great Weapon Fighting)re-roll dmg on 1 or 2<br>or(Protection)with shield adjac allies atkd @DisAdv</td></tr><tr><td>@2nd(Divine Smite)after melee hit spend 1 slot dmg+2d8 radia+1d8/slot max 5d8+1d8 if fiend or undead@(11th+1d8 radiant)</td></tr><tr><td>@3rd(Divine Health)immune disease</td></tr><tr><td>@3rd(Channel Divinity)1/1 short rest</td></tr><tr><td>'+a+'</td></tr><tr><td>@4th(Ability Score Improvement)abi+2 or abi+1 and another abi+1@4th,@8th,@12th,@16th,@19th</td></tr><tr><td>@5th(Extra atk)</td></tr><tr><td>'+b+'</td></tr><tr><td>@6th(Aura of Protection)5ft, you and allies save+chaMod,@6th 10ft@18th 30ft</td></tr><tr><td>'+c+'</td></tr><tr><td>@10th(Aura of Courage)you and allies immune fright@10th 10ft@18th 30ft</td></tr><tr><td>'+dx+'</td></tr><tr><td>@14th(Cleansing Touch)1 or chaMod/1 or chaMod/long rest end 1 spell on you or ally</td></tr><tr><td>'+e);
this.setEquipment('martial weapon and shield or 2 martialwpns.5/5 javelins or simple melee weapon.priest pack or explorer pack.chain mail.holy symbol');
this.setHitDice(this.lvl+'d10+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('all armor, shields, and all wpns');
this.setSaving('wis+pro, cha+pro');
this.setStrPro('');
this.setDexPro('');
this.setConPro('');
this.setIntPro('');
this.setWisPro('pro');
this.setChaPro('pro');
this.setSkills('2 from Athletics, Insight, Intimidation, Medicine, Persuasion, or Religion');
this.setSpellAbility('cha')}
if(this.class.match(/Beast/)){a='@3rd(Ranger s Companion)CR1/4 medium or less hawk, mastiff, panther, ac+ranger pro, atks+ranger pro, dmg+ranger pro, saves, skill checks+ranger pro, maxHP is beast s or your lvl x 4, command as bonus on your turn protects incapacitated you';
b='@7th(Exceptional Training)bonus command Companion to Dash, Disengage, Dodge or Help';
c='@11th(Beastial Fury)Companion makes 2 atks';
dx='@15th(Share Spells)30ft self spells also affect Companion'
}
if(this.class.match(/Ranger/)){if(this.class.match(/Fey\sWanderer/)){a='@3rd <b onClick=CharmPerson()>Charm Person</b>(Feywild Gifts)pg. 58 of Tasha(Otherworldly Glamour)cha check+wisDeception+proor Performance+Proor Persuasion+pro';
b='@7th(Beguiling Twist)save@Adv vs charmed or frightened, 120ft DC8+abi+pro vsWis or tgt charmed or frightened 1min new save @end of each turn';
c='@11th(Fey Reinforcements)<b onClick=SummonFey()>Summon Fey</b> 1/1/long rest, no spell slot cost';
dx='@15th(Misty Wanderer)<b onClick=MistyStep()>Misty Step</b> you and 1tgt 5ft wis mod/wismod/long rest, teleport to any occupied space on the encounter map'
}
if(this.class.match(/Hunter/)){a='@3rd(Hunter s Prey)choose one. (Colossus Slayer)1/turn hp less max+1d8 dmg. (Giant Killer)visible large+melee atks you, react atk. (Horde Breaker)1/turn melee atk, bonus atk adjac';
b='@7th(Defensive Tactics)choose one. (Escape the Horde)opp atkd @DisAdv. (Multiatk)when hit, ac+4 vs atker. (Steel Will)save@Adv vs fear';
c='@11th(Volley)range atk all 10ft@11th(Whirlwind atk)melee atk all adjac';
dx='@15th(Superior Hunter s Defense)choose one. (Evasion)vsDex 1/2dmg,is no dmg. (Stand Against the Tide)when missed, react, tgt same atks target. (Uncanny Dodge)react take half dmg'
}
if(this.class.match(/Monster\sSlayer/)){a="@3rd(Monster Slayer Magic)<b onClick='ProtectionFromEvilAndGood()'>Protection from Evil or Good</b>,@3rd(Hunter s Sense)1act,60ft, 1tgt, learn immunities, resistances, vulnerabilities, race unless hidden from divination magic,@3rd(Slayer s Prey)bonus,1tgt, 60ft, your 1st atk/turn xtra 1d6 dmg";
b="@5th(Monster Slayer Magic)<b onClick='ZoneOfTruth()'>Zone of Truth</b>@7th(Supernatural Defense)you save+1d6 versus your Slayer s Prey@9th(Monster Slayer Magic)<b onClick='MagicCircle()'>Magic Circle</b></td></tr><tr><td>";
c="@11th(Magic-User s Nemesis)thwart spell or thwart teleport within 60ft DC8+your spell ability+pro vsWis, recharge short rest";
dx="@13th(Monster Slayer Magic)<b onClick='Banishment()'>Banishment</b>>@15th(Slayer s Counter)1react, Slayer s Prey forces your saving throw, make atk before making saving throw, a hit is also a save success"
}
if(this.class.match(/Swarmkeeper/)){a="@3rd(Gathered Swarm)+1d6 pierc, or vsStr tgt moved 15ft, or you are moved 5ft,@3rd(Swarmkeeper Magic)<b onClick=MageHand()>Mage Hand</b> in swarm spirt form,@3rd <b onClick=FaerieFire()>Faerie Fire</b>@5th <b onClick=Web()>Web</b>@9th <b onClick=GaseousForm()>Gaseous Form</b>@13th <b onClick=ArcaneEye()>Arcane Eye</b>@17th <b onClick=InsectPlague()>Insect Plague</b>";
b="@7th(Writhing Tide)flying speed 10ft, hover 1min or incapacitated lvl pro/ lvl pro/long rest";
c="@11th(Mighty Swarm)+1d8 dmg, or move 15ft and knock prone, or you move 5ft under half cover";
dx="@15th(Swarming Dispersal)1 react resist all dmg and 30ft teleport to open space"
}
RangerSpells="<h3>1stSlot:@2nd(2/2)@3rd(3/3)@5th(4/4)</h3>"
RangerSpells+="<b onClick=Alarm()>Alarm</b>,"
RangerSpells+="<b onClick=AnimalFriendship()>AnimalFriendship</b>,"
RangerSpells+="<b onClick=CureWounds()>CureWounds</b>,"
RangerSpells+="<b onClick=DetectMagic()>DetectMagic</b>,"
RangerSpells+="<b onClick=DetectPoisonAndDisease()>DetectPoisonAndDisease</b>,"
RangerSpells+="<b onClick=FogCloud()>FogCloud</b>,"
RangerSpells+="<b onClick=Goodberry()>Goodberry</b>,"
RangerSpells+="<b onClick=HuntersMark()>HuntersMark</b>,"
RangerSpells+="<b onClick=Jump()>Jump</b>,"
RangerSpells+="<b onClick=Longstrider()>Longstrider</b>,"
RangerSpells+="<b onClick=SpeakWithAnimals()>SpeakWithAnimals</b>"
RangerSpells+="<h3>2ndSlot:@5th(2/2),@7th(3/3)</h3>"
RangerSpells+="<b onClick=AnimalMessenger()>AnimalMessenger</b>,"
RangerSpells+="<b onClick=Barkskin()>Barkskin</b>,"
RangerSpells+="<b onClick=Darkvision()>Darkvision</b>,"
RangerSpells+="<b onClick=FindTraps()>FindTraps</b>,"
RangerSpells+="<b onClick=LesserRestoration()>LesserRestoration</b>,"
RangerSpells+="<b onClick=LocateAnimalsOrPlants()>LocateAnimalsOrPlants</b>,"
RangerSpells+="<b onClick=LocateObject()>LocateObject</b>,"
RangerSpells+="<b onClick=PassWithoutTrace()>PassWithoutTrace</b>,"
RangerSpells+="<b onClick=ProtectionFromPoison()>ProtectionFromPoison</b>,"
RangerSpells+="<b onClick=Silence()>Silence</b>,"
RangerSpells+="<b onClick=SpikeGrowth()>SpikeGrowth</b>"
RangerSpells+="<h3>3rdSlot:@9th(2/2),@11th(3/3)</h3>"
RangerSpells+="<b onClick=ConjureAnimals()>ConjureAnimals</b>,"
RangerSpells+="<b onClick=Daylight()>Daylight</b>,"
RangerSpells+="<b onClick=Nondetection()>Nondetection</b>,"
RangerSpells+="<b onClick=PlantGrowth()>PlantGrowth</b>,"
RangerSpells+="<b onClick=ProtectionfromEnergy()>ProtectionfromEnergy</b>,"
RangerSpells+="<b onClick=SpeakWithPlants()>SpeakWithPlants</b>,"
RangerSpells+="<b onClick=WaterBreathing()>WaterBreathing</b>,"
RangerSpells+="<b onClick=WaterWalk()>WaterWalk</b>,"
RangerSpells+="<b onClick=WindWall()>WindWall</b>"
RangerSpells+="<h3>4thSlot:@13th(1/1),@15th(2/2)</h3>"
RangerSpells+="<b onClick=ConjureWoodlandBeings()>ConjureWoodlandBeings</b>,"
RangerSpells+="<b onClick=FreedomOfMovement()>FreedomOfMovement</b>,"
RangerSpells+="<b onClick=LocateCreature()>LocateCreature</b>,"
RangerSpells+="<b onClick=Stoneskin()>Stoneskin</b>"
RangerSpells+="<h3>@5thSlot@17th(1/1)</h3>"
RangerSpells+="<b onClick=CommuneWithNature()>CommuneWithNature</b>,"
RangerSpells+="<b onClick=TreeStride()>TreeStride</b>"
this.setFeatures('</td></tr><tr><td>Cantrips Known:none<p>Spells Known:@2nd 2,@3rd 3,@5th 4,@7th 5,@9th 6,@11th 7,@13th 8,@15th 9,@17th 10,@19th 11</td></tr><tr><td>'+RangerSpells+'</td></tr><tr><td>@1st(Favored Enemy)Survival@Adv to track, Intelligence@Adv to speak enemy language@1st 1 enemy,@6th 2 enemies@14th 3 enemies<p>or (Favored Foe)your lvl pro/ lvl pro per short rest, hit 1tgt marked 1min conce,@1st+1d4 dmg,@6th+1d6 dmg@14th+1d8 dmg</td></tr><tr><td>@1st(Natural Explorer)ignore difficult terrain, always alert, alone Stealth normal pace, forage x 2, know number, size, time of tracked enemy@1st 1 terrain type,@6th 2 terrain types@10th 3terrain types<p>or @1st(Deft Explorer)@1st(Canny)1 skill+pro becomes skill+exp, speak, read, write+2 languages,@6th(Roving)climb, swim=walk speed+5ft @10th(Tireless)1 act, temp hp 1d8+wis, lvl pro/lvl pro per short rest</td></tr><tr><td>@2nd(Fighting Style)(Archery)ranged+2or(Defense)armored AC+1or(Blind Fighting)blindsight 10ft unless tgt total coveror(Druidic Warrior)2 Druid Cantrips+wis+proor(Dueling)dmg+2or(Thrown Weapon Fighting)draw and atk, ranged+2 dmgor(Two-Weapon Fighting)secondary dmg+abiMod</td></tr><tr><td>'+a+'<p>(Primal Awareness)xtra Ranger spells,@3rd <b onClick=SpeakWithAnimals()>Speak with Animals</b>@5th <b onClick=BeastSense()>Beast Sense</b>@9th <b onClick=SpeakWithPlants()>Speak with Plants</b>@13th <b onClick=LocateCreature()>Locate Creature</b>@17th <b onClick=CommuneWithNature()>Commune with Nature</b></td></tr><tr><td>@4th(Ability Score Improvement)abi+1 and another abi+1 or abi+2@4th,@8th,@12th,@16th,@19th<p>@4th(Martial Versatility)replace your fighting style with another</td></tr><tr><td>@5th(Extra atk)</td></tr><tr><td>'+b+'</td></tr><tr><td>@8th(Land s Stride)difficult terrain no penalty, save@Adv vs plant spells</td></tr><tr><td>@10th(Primeval Awareness)1act,1slot, 10/10turns, know beings in area 1mi, favored terrain 6mi<p>@10th(Hide in Plain Sight)10/10turns camo, unmoving, stealth+10or(Nature s Veil)bonus , invisible until start next turn lvl pro/ lvl pro/long rest</td></tr><tr><td>'+c+'</td></tr><tr><td>@14th(Vanish)Hide as bonus,not nonmagically tracked</td></tr><tr><td>'+dx+'</td></tr><tr><td>@18th(Feral Senses)invisible 30ft no@Adv vs you</td></tr><tr><td>@20th(Foe Slayer)1/turn dmg+wisMod');
this.setEquipment('scale mail or leather armor.2 shortswords or 2 simple meleewpns.dungeoneer pack or explorer pack.Longbow 20 arrows');
this.setHitDice(this.lvl+'d10+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('light armor, medium armor, shields, all wpns');
this.setSaving('str+pro, dex+pro');
this.setStrPro('pro');
this.setDexPro('pro');
this.setConPro('');
this.setIntPro('');
this.setWisPro('');
this.setChaPro('');
this.setSkills('2 from Animal Handling, Athletics, Insight, Investigation, Nature, Perception, Stealth, or Survival');
this.setSpellAbility('wis')}
ArcaneTricksterSpells="<h3>Cantrips Known:@3rd(MageHand+2),@10th(3)</h3>"
ArcaneTricksterSpells+="<b onClick=AcidSplash()>AcidSplash</b>,"
ArcaneTricksterSpells+="<b onClick=BladeWard()>BladeWard</b>,"
ArcaneTricksterSpells+="<b onClick=BoomingBlade()>BoomingBlade</b>,"
ArcaneTricksterSpells+="<b onClick=ChillTouch()>ChillTouch</b>,"
ArcaneTricksterSpells+="<b onClick=ControlFlames()>ControlFlames</b>,"
ArcaneTricksterSpells+="<b onClick=CreateBonfire()>CreateBonfire</b>,"
ArcaneTricksterSpells+="<b onClick=DancingLights()>DancingLights</b>,"
ArcaneTricksterSpells+="<b onClick=Daze()>Daze</b>,"
ArcaneTricksterSpells+="<b onClick=FireBolt()>FireBolt</b>,"
ArcaneTricksterSpells+="<b onClick=Friends()>Friends</b>,"
ArcaneTricksterSpells+="<b onClick=Frostbite()>Frostbite</b>,"
ArcaneTricksterSpells+="<b onClick=GreenFlameBlade()>GreenFlameBlade</b>,"
ArcaneTricksterSpells+="<b onClick=Gust()>Gust</b>,"
ArcaneTricksterSpells+="<b onClick=MinorIllusion()>MinorIllusion</b>,"
ArcaneTricksterSpells+="<b onClick=Infestation()>Infestation</b>,"
ArcaneTricksterSpells+="<b onClick=KissOfVanti()>KissOfVanti</b>,"
ArcaneTricksterSpells+="<b onClick=Light()>Light</b>,"
ArcaneTricksterSpells+="<b onClick=LightningLure()>LightningLure</b>,"
ArcaneTricksterSpells+="<b onClick=MageHand()>MageHand</b>,"
ArcaneTricksterSpells+="<b onClick=Mending()>Mending</b>,"
ArcaneTricksterSpells+="<b onClick=Message()>Message</b>,"
ArcaneTricksterSpells+="<b onClick=MindSliver()>MindSliver</b>,"
ArcaneTricksterSpells+="<b onClick=MoldEarth()>MoldEarth</b>,"
ArcaneTricksterSpells+="<b onClick=PoisonSpray()>PoisonSpray</b>,"
ArcaneTricksterSpells+="<b onClick=Prestidigitation()>Prestidigitation</b>,"
ArcaneTricksterSpells+="<b onClick=RayOfFrost()>RayOfFrost</b>,"
ArcaneTricksterSpells+="<b onClick=Shadow()>Shadow</b>,"
ArcaneTricksterSpells+="<b onClick=ShapeWater()>ShapeWater</b>,"
ArcaneTricksterSpells+="<b onClick=ShockingGrasp()>ShockingGrasp</b>,"
ArcaneTricksterSpells+="<b onClick=SwordBurst()>SwordBurst</b>,"
ArcaneTricksterSpells+="<b onClick=Thunderclap()>Thunderclap</b>,"
ArcaneTricksterSpells+="<b onClick=TollTheDead()>TollTheDead</b>,"
ArcaneTricksterSpells+="<b onClick=TrueDodge()>TrueDodge</b>,"
ArcaneTricksterSpells+="<b onClick=TrueStrike()>TrueStrike</b>"
ArcaneTricksterSpells+="<h3>1stSlot:@3rd(2),@4th(3),@7th(4)</h3>"
ArcaneTricksterSpells+="<b onClick=CharmPerson()>CharmPerson</b>,"
ArcaneTricksterSpells+="<b onClick=ColorSpray()>ColorSpray</b>,"
ArcaneTricksterSpells+="<b onClick=DisguiseSelf()>DisguiseSelf</b>,"
ArcaneTricksterSpells+="<b onClick=TashasHideousLaughter()>TashasHideousLaughter</b>,"
ArcaneTricksterSpells+="<b onClick=IdInsinuation()>IdInsinuation</b>,"
ArcaneTricksterSpells+="<b onClick=IllusoryScript()>IllusoryScript</b>,"
ArcaneTricksterSpells+="<b onClick=Puppet()>Puppet</b>,"
ArcaneTricksterSpells+="<b onClick=SilentImage()>SilentImage</b>,"
ArcaneTricksterSpells+="<b onClick=Sleep()>Sleep</b>,"
ArcaneTricksterSpells+="<b onClick=SuddenAwakening()>SuddenAwakening</b>"
ArcaneTricksterSpells+="<h3>2ndSlot:@7th(2),@10th(3)</h3>"
ArcaneTricksterSpells+="<b onClick=ArcanistsMagicAura()>ArcanistsMagicAura</b>,"
ArcaneTricksterSpells+="<b onClick=Blur()>Blur</b>,"
ArcaneTricksterSpells+="<b onClick=CrownOfMadness()>CrownOfMadness</b>,"
ArcaneTricksterSpells+="<b onClick=HoldPerson()>HoldPerson</b>,"
ArcaneTricksterSpells+="<b onClick=Invisibility()>Invisibility</b>,"
ArcaneTricksterSpells+="<b onClick=MagicMouth()>MagicMouth</b>,"
ArcaneTricksterSpells+="<b onClick=MindThrust()>MindThrust</b>,"
ArcaneTricksterSpells+="<b onClick=MirrorImage()>MirrorImage</b>,"
ArcaneTricksterSpells+="<b onClick=PhantasmalForce()>PhantasmalForce</b>,"
ArcaneTricksterSpells+="<b onClick=ShadowBlade()>ShadowBlade</b>,"
ArcaneTricksterSpells+="<b onClick=Suggestion()>Suggestion</b>,"
ArcaneTricksterSpells+="<b onClick=TashasMindWhip()>TashasMindWhip</b>"
ArcaneTricksterSpells+="<h3>3rdSlot:@13th(2),@16th(3)</h3>"
ArcaneTricksterSpells+="<b onClick=Catnap()>Catnap</b>,"
ArcaneTricksterSpells+="<b onClick=EnemiesAbound()>EnemiesAbound</b>,"
ArcaneTricksterSpells+="<b onClick=Fear()>Fear</b>,"
ArcaneTricksterSpells+="<b onClick=HypnoticPattern()>HypnoticPattern</b>,"
ArcaneTricksterSpells+="<b onClick=MajorImage()>MajorImage</b>,"
ArcaneTricksterSpells+="<b onClick=PhantomSteed()>PhantomSteed</b>"
ArcaneTricksterSpells+="<h3>4thSlot:@19th(1)</h3>"
ArcaneTricksterSpells+="<b onClick=CharmMonster()>CharmMonster</b>,"
ArcaneTricksterSpells+="<b onClick=Confusion()>Confusion</b>,"
ArcaneTricksterSpells+="<b onClick=DominateBeast()>DominateBeast</b>,"
ArcaneTricksterSpells+="<b onClick=EgoWhip()>EgoWhip</b>,"
ArcaneTricksterSpells+="<b onClick=HallucinatoryTerrain()>HallucinatoryTerrain</b>,"
ArcaneTricksterSpells+="<b onClick=GreaterInvisibility()>GreaterInvisibility</b>,"
ArcaneTricksterSpells+="<b onClick=PhantasmalKiller()>PhantasmalKiller</b>,"
if(this.class.match(/Rogue/)){if(this.class.match(/Arcane/)){a='@3rd(Mage Hand Legerdemain)30ft stow retreive object or pick locks or disarm traps</td></tr><tr><td>'+ArcaneTricksterSpells+'</td></tr><tr><td>';
b='@9th(Magical Ambush)when hidden, tgt saves @DisAdv vs your spell';
c='@13th(Versatile Trickster)bonus,30ft atk@Adv target';
dx='@17th(Spell Thief)1/1 react, spell vs your spell dc or negate and steal spell cast with your slots for 8hrs'
}
if(this.class.match(/Assassin/)){a='@3rd(Bonus Proficiencies)Disguise Poisoner Kit+pro</td></tr><tr><td>@3rd(Assassinate)1st atk lower init tgts@Adv and crit';
b='@9th(Infiltration Expert)7 days, 25gp, pose as wealthy merchant, etc'
c='@13th(Imposter)3hr study, copy speech, writing behavior roll Deception to avoid detection';
dx='@17th(Death Strike)surprised tgt lower init, vsCon or crit dam x 2'
}
if(this.class.match(/Mastermind/)){a='@3rd(Master of Intrigue)Disguise Forgery Kit and 1 from Cards, Darts, Dice, or Dragonchess+pro, 2 languages no accent</td></tr><tr><td>@3rdMASTER OF TACTICS Help action as bonus tgt 30ft';
b='@9th(Insightful Manipulator)1min, DM tells superior, equal, inferior 2 stats of target';
c='@13th(Misdirection)when melee atkd, react, tgt atks another adjac target';
dx='@17th(Soul of Deceit)immune telepathy and truth magic, Deception vs Insight to plant false info'
}
if(this.class.match(/Phantom/)){a="@3rd(Whispers of the Dead)any skill+pro or tools+pro 1 time per short 4 hour rest</td></tr><tr><td>@3rd(Wails from the Grave)sneak atk dmg tgt a second enemy within 30ft, roll half sneak atk dice for necrotic dmg, use your lvl pro times, recharge after long 8 hour rest";
b="@9th(Tokens of the Departed)react when enemy dies 30ft from you, create your lvl pro in soul trinkets, expend a soul trinket to adv vs death save throw and vsCons, or expend to use Wails from the Grave @no cost, or as action expend one and the spirit will answer truthfully or not truthfully one question ";
c="@13th(Ghost Walk)bonus become a spectre, hover and atk rolls are @DisAdv against you, fly speed 10ft, move through people and objects but take 1d10 force dmg if inside @end or turn, 10 min or end as bonus ion/long rest ";
dx="@17th(Death Knell)deal necrotic to both sneak atk enemy and adjac enemy within 30ft, after/long rest, 1 soul trinket appears"
}
if(this.class.match(/Scout/)){a='@3rd(Skirmisher)enemy ends turn 5ft from you, react move 1/2 speed no opp atk</td></tr><tr><td>@3rd(Survivalist)Nature+exp, Survival+sexp';
b='@9th(Superior Mobility)speed+10ft walk climb swim';
c='@13th(Ambush Master)init roll@Adv, atk@Adv 1st rnd 1st target';
dx='@17th(Sudden Strike)xtra atk bonus each turn'
}
if(this.class.match(/Soulknife/)){a='@3rd(Psionic Power)d6 Psionic Energy Dice 2*lvl pro/2*lvl pro/long rest,@3rd d6@5th d8@11th d10@17 d12<p>(Psi-Bolstered Knack)failed skill-pro or tool-pro roll+1 PsiEnergyDie, if success expend the PEDie<p>(Psychic Whispers)1act,telepathy with lvl pro number of speaking allies you can see for expended PEDie hours and up to 1 mile<p>(Psychic Blades)1d6+abi psychic dmg, 1d4 secondary psychic dmg';
b='@9th(Homing Strikes)psychic blade failed atk roll+PEDie, expend die on a hit<p>(Psychic Teleportation)bonus , throw blade 10xPEDieft to unoccupied space and teleport there';
c='@13th(Psychic Veil)1act,invisible 1hr until if you dmg or force save on target';
dx='@17th(Rend Mind)DC8+dex+pro vsWis or stunned 1min repe@save @end of each turn, using again costs 3PEDice before rest'
}
if(this.class.match(/Swashbuckler/)){a='@3rd(Fancy Footwork)Disengage as bonus even after 2 atks no opp atks by target</td></tr><tr><td>@3rd(Rakish Audacity)init+chaMod no adv required if tgt has no adjac allies';
b='@9th(Panache)Persuasion vs Insight of same language target/tgt atks @DisAdv unless you or tgt is charmed does not atk 10/10turns unless atkd';
c='@13th(Elegant Maneuver)bonus Acrobatics or Athletics@Adv';
dx='@17th(Master Duelist)1/1 short rest reroll atk@Adv if fail'
}
if(this.class.match(/Thief/)){a="@3rd(Fast Hands)spend Cunning Action to Sleight or Thieves Tools to disarm trap, open lock, or use object</td></tr><tr><td>@3rd(Second Story Work)climb @normal speed, jumpft+dexMod";
b="@9th(Supreme Sneak)when move half, Stealth@Adv";
c="@13th(Use Magic Device)use any class item";
dx="@17th(Thief s Reflexes)1st turn @init, 2nd(turn @init-10 1st round"
}
this.setFeatures('</td></tr><tr><td>@1st(Expertise)Thieves Tools+exp and 1 skill+exp or 2 skills+exp,@6th 2 more skills+exp</td></tr><tr><td>@1st(Sneak atk)1/turn when atking@Adv or ally adjac to tgt xtra dmg@1st+1d6,@3rd+2d6@5th+3d6@7th+4d6,@8th+5d6</td></tr><tr><td>@1st(Thieves Cant)gestures</td></tr><tr><td>@2nd(Cunning Action)bonus Dash, Disengage, or Hide after atk, under half cover, Stealth vs Perception or tgt can not atk</td></tr><tr><td>'+a+'</td></tr><tr><td>@3rd(Steady Aim)bonus,no movement atk@Adv after 0 movement till next turn</td></tr><tr><td>@4th(Ability Score Improvement)abi+2 or abi+1 and another abi+1 or 1 feat@4th,@6th,@8th@12th@16th@19th</td></tr><tr><td>@5th(Uncanny Dodge)1 react per turn 1/2dmg,dmg</td></tr><tr><td>@7th(Evasion)when atkd,vsDex 1/2dmg,is no dmg</td></tr><tr><td>'+b+'</td></tr><tr><td>@11th(Reliable Talent)abi+pro roll of 9 or less is 10</td></tr><tr><td>'+c+'</td></tr><tr><td>@14th(Blindsense)know location of invisibles 10ft</td></tr><tr><td>@15th(Slippery Mind)wis+pro</td></tr><tr><td>'+dx+'</td></tr><tr><td>@18th(Elusive)not atkd@Adv less incapacitated</td></tr><tr><td>@20th(Stroke of Luck)recharge short rest, roll failure is success');
this.setEquipment('rapier or shortsword.shortbow 20 arrows or shortsword.burglar pack or dungeoneer pack or explorer pack.leather armor.2 daggers.thieves tools');
this.setHitDice(this.lvl+'d8+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('daggers, darts, light crossbows, quarterstaffs, and slings');
this.setSaving('con+pro, cha+pro');
this.setStrPro('');
this.setDexPro('');
this.setConPro('pro');
this.setIntPro('');
this.setWisPro('');
this.setChaPro('pro');
this.setSkills('2 from Arcana, Deception, Insight, Intimidation, Persuasion, or Religion');
this.setSpellAbility('int')}
if(this.class.match(/Sorcerer/)){if(this.class.match(/Draconic/)){a='@1st.DRAGON ANCESTOR speak Draconic cha+exp speaking to dragons. Black(Acid). Blue(Lightning). Brass(Fire). Bronze(Lightning). Copper(Acid). Gold(Fire). Green(Poison). Red(Fire). Silver(Cold). White(Cold)</td></tr><tr><td>@1st.DRACONIC RESILIENCE+1hp/ lvl-up, ac13+dexMod';
b='@6th.ELEMENTAL AFFINITY dragon ancestry dmg+chaMod, 1SP resistthis dam 1hr';
c='@14th.DRAGON WINGS fly speed is walk speed, summon dismiss wings as bonus';
dx='@18th.DRACONIC PRESENCE 5SP, 60ft, con 10/10turns, vsWis or charmed or frightened'
}
if(this.class.match(/Sorcerer, Fire/)){a='@1st(Flame Affinity)bonus light or douse small flame 30ft<b onClick=ProduceFlame>Produce Flame</b>(Heart of Fire)change your spell dmg to fire dmgresist fire';
b='@6th(Heart of Battle)+1d6fire 1SP up to proMod/re-roll fire dmg on 1';
c='@14th(Spontaneous Combustion)chaMod/chaMod/long rest, on being hit, 1 react melee atkr takes 2d6+chaMod fire dmg';
dx='@18th(Ignited Spirit)1/1/long rest, 30ft, chaMod rnds you and allies save@Adv vs spells/+1d8 xtra dmg'
}
if(this.class.match(/Sorcerer, Shadow\sMagic/)){a='@1st(Eyes of the Dark)Darkvision 120ft,@3rd <b onClick=Darkness()>Darkness</b>expend 1 spell slot or 2 sorcery points to also see through the darkness<p>(Strength of the Grave)DC5+dmgd vsCha to drop to 1hp less radiant dmg or crit, 1/1 long rest';
b='@6th(Hound of Ill Omen)bonus,3 sorcery points, atks only 1tgt, 120ft, shadow dire wolf, medium, hp+half sorcery lvl, through anything as difficult terrain, 5 force dmg if ends turn in object, start turn tgt not hidden from hound, tgt vs your spells @DisAdv';
c='@14th(Shadow Walk)bonus,teleport 120ft in shadows';
dx='@18th(Umbral Form)6 sorcery points, bonus,shadow form resist dmg less force, radiant, move through creatures, objects difficult terrain, 5 force dmg if ending your turn in object, 1min'
}
if(this.class.match(/Wild/)){a='@1st(Sorcerous Origins)Wild Magic</td></tr><tr><td>@1st(Wild Surge)Players Handbook pg104</td></tr><tr><td>@1st(Tides of Chaos)roll@Adv/long rest';
b='@6th(Bend Luck)2SP, react, +or -1d4 on any ally or tgt roll';
c='@14th(Controlled Chaos)roll twice on wild surge table and choose 1 result';
dx='@18th(Spell Bombardment)1/turn roll again on any max roll and add to the dmg'
}
if(this.class.match(/Sorcerer, Storm/)){a='(Storm Sorcery)<p>@1st(Wind Speaker)you know the Primordial language<p>(Tempestuous Magic)fly up to 10ft not opp atkd';
b='@6th(Heart of the Storm)resist lightning thunder/when casting lightning or thunder, 10ft-radi half your lvl dmg<p>(Storm Guide)1act,20ft-radi, stop rain, direct wind 100ft-radi uteo your next turn';
c='@14th(Storm s Fury)melee atkd, react your lvl in lightning dmg and vsStr or pushed up to 20ft';
dx='@18th(Wind Soul)1/1/long rest, immune lightning and thunder, fly 60ft, reduce fly 30ft and 3+cha allies can fly 30ft'
}
SorcererSpells="<h3>Cantrips Known:@1st(4),@4th(5),@10th(6)</h3>"
SorcererSpells+="<b onClick=AcidSplash()>AcidSplash</b>,"
SorcererSpells+="<b onClick=ChillTouch()>ChillTouch</b>,"
SorcererSpells+="<b onClick=DancingLights()>DancingLights</b>,"
SorcererSpells+="<b onClick=FireBolt()>FireBolt</b>,"
SorcererSpells+="<b onClick=Light()>Light</b>,"
SorcererSpells+="<b onClick=MageHand()>MageHand</b>,"
SorcererSpells+="<b onClick=Mending()>Mending</b>,"
SorcererSpells+="<b onClick=Message()>Message</b>,"
SorcererSpells+="<b onClick=MinorIllusion()>MinorIllusion</b>,"
SorcererSpells+="<b onClick=PoisonSpray()>PoisonSpray</b>,"
SorcererSpells+="<b onClick=Prestidigitation()>Prestidigitation</b>,"
SorcererSpells+="<b onClick=RayOfFrost()>RayOfFrost</b>,"
SorcererSpells+="<b onClick=ShockingGrasp()>ShockingGrasp</b>,"
SorcererSpells+="<b onClick=TrueStrike()>TrueStrike</b>"
SorcererSpells+="<h3>1stSlot:@1st(2/2),@2nd(3/3),@3rd(4/4)</h3>"
SorcererSpells+="<b onClick=BurningHands()>BurningHands</b>,"
SorcererSpells+="<b onClick=CharmPerson()>CharmPerson</b>,"
SorcererSpells+="<b onClick=ColorSpray()>ColorSpray</b>,"
SorcererSpells+="<b onClick=ComprehendLanguages()>ComprehendLanguages</b>,"
SorcererSpells+="<b onClick=DetectMagic()>DetectMagic</b>,"
SorcererSpells+="<b onClick=DisguiseSelf()>DisguiseSelf</b>,"
SorcererSpells+="<b onClick=ExpeditiousRetreat()>ExpeditiousRetreat</b>,"
SorcererSpells+="<b onClick=FalseLife()>FalseLife</b>,"
SorcererSpells+="<b onClick=FeatherFall()>FeatherFall</b>,"
SorcererSpells+="<b onClick=FogCloud()>FogCloud</b>,"
SorcererSpells+="<b onClick=Jump()>Jump</b>,"
SorcererSpells+="<b onClick=MageArmor()>MageArmor</b>,"
SorcererSpells+="<b onClick=MagicMissile()>MagicMissile</b>,"
SorcererSpells+="<b onClick=Shield()>Shield</b>,"
SorcererSpells+="<b onClick=SilentImage()>SilentImage</b>,"
SorcererSpells+="<b onClick=Sleep()>Sleep</b>,"
SorcererSpells+="<b onClick=Thunderwave()>Thunderwave</b>"
SorcererSpells+="<h3>2ndSlot:@3rd(2/2),@4th(3/3)</h3>"
SorcererSpells+="<b onClick=AlterSelf()>AlterSelf</b>,"
SorcererSpells+="<b onClick=BlindnessDeafness()>BlindnessDeafness</b>,"
SorcererSpells+="<b onClick=Blur()>Blur</b>,"
SorcererSpells+="<b onClick=Darkness()>Darkness</b>,"
SorcererSpells+="<b onClick=Darkvision()>Darkvision</b>,"
SorcererSpells+="<b onClick=DetectThoughts()>DetectThoughts</b>,"
SorcererSpells+="<b onClick=EnhanceAbility()>EnhanceAbility</b>,"
SorcererSpells+="<b onClick=EnlargeReduce()>EnlargeReduce</b>,"
SorcererSpells+="<b onClick=GustOfWind()>GustOfWind</b>,"
SorcererSpells+="<b onClick=HoldPerson()>HoldPerson</b>,"
SorcererSpells+="<b onClick=Invisibility()>Invisibility</b>,"
SorcererSpells+="<b onClick=Knock()>Knock</b>,"
SorcererSpells+="<b onClick=Levitate()>Levitate</b>,"
SorcererSpells+="<b onClick=MirrorImage()>MirrorImage</b>,"
SorcererSpells+="<b onClick=MistyStep()>MistyStep</b>,"
SorcererSpells+="<b onClick=ScorchingRay()>ScorchingRay</b>,"
SorcererSpells+="<b onClick=SeeInvisibility()>SeeInvisibility</b>,"
SorcererSpells+="<b onClick=Shatter()>Shatter</b>,"
SorcererSpells+="<b onClick=SpiderClimb()>SpiderClimb</b>,"
SorcererSpells+="<b onClick=Suggestion()>Suggestion</b>,"
SorcererSpells+="<b onClick=Web()>Web</b>,"
SorcererSpells+="<b onClick=Blink()>Blink</b>"
SorcererSpells+="<h3>3rdSlot:@5th(2/2),@6th(3/3)</h3>"
SorcererSpells+="<b onClick=Clairvoyance()>Clairvoyance</b>,"
SorcererSpells+="<b onClick=Counterspell()>Counterspell</b>,"
SorcererSpells+="<b onClick=Daylight()>Daylight</b>,"
SorcererSpells+="<b onClick=DispelMagic()>DispelMagic</b>,"
SorcererSpells+="<b onClick=Fear()>Fear</b>,"
SorcererSpells+="<b onClick=Fireball()>Fireball</b>,"
SorcererSpells+="<b onClick=Fly()>Fly</b>,"
SorcererSpells+="<b onClick=GaseousForm()>GaseousForm</b>,"
SorcererSpells+="<b onClick=Haste()>Haste</b>,"
SorcererSpells+="<b onClick=HypnoticPattern()>HypnoticPattern</b>,"
SorcererSpells+="<b onClick=LightningBolt()>LightningBolt</b>,"
SorcererSpells+="<b onClick=MajorImage()>MajorImage</b>,"
SorcererSpells+="<b onClick=ProtectionFromEnergy()>ProtectionFromEnergy</b>,"
SorcererSpells+="<b onClick=SleetStorm()>SleetStorm</b>,"
SorcererSpells+="<b onClick=Slow()>Slow</b>,"
SorcererSpells+="<b onClick=StinkingCloud()>StinkingCloud</b>,"
SorcererSpells+="<b onClick=Tongues()>Tongues</b>,"
SorcererSpells+="<b onClick=WaterBreathing()>WaterBreathing</b>,"
SorcererSpells+="<b onClick=WaterWalk()>WaterWalk</b>"
SorcererSpells+="<h3>4thSlot:@7th(1/1),@8th(2/2)@9th(3/3)</h3>"
SorcererSpells+="<b onClick=Banishment()>Banishment</b>,"
SorcererSpells+="<b onClick=Blight()>Blight</b>,"
SorcererSpells+="<b onClick=Confusion()>Confusion</b>,"
SorcererSpells+="<b onClick=DimensionDoor()>DimensionDoor</b>,"
SorcererSpells+="<b onClick=DominateBeast()>DominateBeast</b>,"
SorcererSpells+="<b onClick=GreaterInvisibility()>GreaterInvisibility</b>,"
SorcererSpells+="<b onClick=IceStorm()>IceStorm</b>,"
SorcererSpells+="<b onClick=Polymorph()>Polymorph</b>,"
SorcererSpells+="<b onClick=Stoneskin()>Stoneskin</b>,"
SorcererSpells+="<b onClick=WallOfFire()>WallOfFire</b>"
SorcererSpells+="<h3>5thSlot:@9th(1/1),@10th(2/2),@18th(3/3)</h3>"
SorcererSpells+="<b onClick=AnimateObjects()>AnimateObjects</b>,"
SorcererSpells+="<b onClick=Cloudkill()>Cloudkill</b>,"
SorcererSpells+="<b onClick=ConeOfCold()>ConeOfCold</b>,"
SorcererSpells+="<b onClick=Creation()>Creation</b>,"
SorcererSpells+="<b onClick=DominatePerson()>DominatePerson</b>,"
SorcererSpells+="<b onClick=HoldMonster()>HoldMonster</b>,"
SorcererSpells+="<b onClick=InsectPlague()>InsectPlague</b>,"
SorcererSpells+="<b onClick=Seeming()>Seeming</b>,"
SorcererSpells+="<b onClick=Telekinesis()>Telekinesis</b>,"
SorcererSpells+="<b onClick=TeleportationCircle()>TeleportationCircle</b>,"
SorcererSpells+="<b onClick=WallOfStone()>WallOfStone</b>"
SorcererSpells+="<h3>6thSlot:@11th(1/1),@19th(2/2)</h3>"
SorcererSpells+="<b onClick=ChainLightning()>ChainLightning</b>,"
SorcererSpells+="<b onClick=CircleOfDeath()>CircleOfDeath</b>,"
SorcererSpells+="<b onClick=Disintegrate()>Disintegrate</b>,"
SorcererSpells+="<b onClick=Eyebite()>Eyebite</b>,"
SorcererSpells+="<b onClick=GlobeOfInvulnerability()>GlobeOfInvulnerability</b>,"
SorcererSpells+="<b onClick=MassSuggestion()>MassSuggestion</b>,"
SorcererSpells+="<b onClick=MoveEarth()>MoveEarth</b>,"
SorcererSpells+="<b onClick=Sunbeam()>Sunbeam</b>,"
SorcererSpells+="<b onClick=TrueSeeing()>TrueSeeing</b>"
SorcererSpells+="<h3>7thSlot:@13th(1/1)@20th(2/2)</h3>"
SorcererSpells+="<b onClick=DelayedBlastFireball()>DelayedBlastFireball</b>,"
SorcererSpells+="<b onClick=Etherealness()>Etherealness</b>,"
SorcererSpells+="<b onClick=FingerOfDeath()>FingerOfDeath</b>,"
SorcererSpells+="<b onClick=FireStorm()>FireStorm</b>,"
SorcererSpells+="<b onClick=PlaneShift()>PlaneShift</b>,"
SorcererSpells+="<b onClick=PrismaticSpray()>PrismaticSpray</b>,"
SorcererSpells+="<b onClick=ReverseGravity()>ReverseGravity</b>,"
SorcererSpells+="<b onClick=Teleport()>Teleport</b>"
SorcererSpells+="<h3>8thSlot:@15th(1/1)</h3>"
SorcererSpells+="<b onClick=DominateMonster()>DominateMonster</b>,"
SorcererSpells+="<b onClick=Earthquake()>Earthquake</b>,"
SorcererSpells+="<b onClick=IncendiaryCloud()>IncendiaryCloud</b>,"
SorcererSpells+="<b onClick=PowerWordStun()>PowerWordStun</b>,"
SorcererSpells+="<b onClick=Sunburst()>Sunburst</b>"
SorcererSpells+="<h3>9thSlot:@17th(1/1)</h3>"
SorcererSpells+="<b onClick=Gate()>Gate</b>,"
SorcererSpells+="<b onClick=MeteorSwarm()>MeteorSwarm</b>,"
SorcererSpells+="<b onClick=PowerWordKill()>PowerWordKill</b>,"
SorcererSpells+="<b onClick=TimeStop()>TimeStop</b>,"
SorcererSpells+="<b onClick=Wish()>Wish</b>"
this.setFeatures('</td></tr><tr><td>(Sorcerer)<p>Sorcery Points,@2nd 2+1 Sorcerery Point/lvl<p><p>Spells Known@1st 2lvl+1</td></tr><tr><td>'+SorcererSpells+'</td></tr><tr><td>'+a+'</td></tr><tr><td>@2nd(Font of Magic)exchange spell slots and Sorcery Points<p>@2nd(Spell Points) your lvl/your lvl</td></tr><tr><td>(Metamagic),@3rd 2@10th 3 @17th 4(Careful Spell)1SP, select chaMod tgts in spell area to be immune(Distant Spell)1SP, range x 2, touch is 30ft(Empowered Spell)1SP, discard dmg and reroll dmg chaMod times, in addition to other Metamagic(Extend Spell)1SP, duration x 2, max 24 hrs(Heightened Spell)3SP, tgt rolls 1st save @DisAdv(Quickened Spell)1SP, 1 act is 1 bonus cast(Subtile Spell)1SP, no verbal somatic cast needed(Twinned Spell)SP is spell lvl, non self spell, tgt another</td></tr><tr><td>@4th(Ability Score Improvement)abi+2 or abi+1 and another abi+1@4th,@8th,@12th,@16th,@19th</td></tr><tr><td>'+b+'</td></tr><tr><td>'+c+'</td></tr><tr><td>'+dx+'</td></tr><tr><td>@20th(Sorcerous Restoration)0SP is 4SP, recharge short rest');
this.setActionNotes('(Sorcrery Points),@2nd lvl+1/lvl+1, (1st Slot)0/0, (2nd Slot)0/0, (3rd Slot)0/0, (4th Slot)0/0, (5th Slot)0/0, (6th Slot)0/0, (7th Slot)0/0, (8th Slot)0/0, (9th Slot)0/0');
this.setEquipment('light crossbow 20 bolts or arcane focus.dungeoneer pack or explorer pack.2 daggers');
this.setHitDice(this.lvl+'d6+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('Draconic, daggers, darts, light crossbows, quarterstaffs, and slings');
this.setSaving('con+pro, cha+pro');
this.setStrPro('');
this.setDexPro('');
this.setConPro('pro');
this.setIntPro('');
this.setWisPro('');
this.setChaPro('pro');
this.setSkills('2 from Arcana, Deception, Insight, Intimidation, Persuasion, or Religion');
this.setSpellAbility('cha')}
if(this.class.match(/Warlock/)){if(this.class.match(/Archfey/)){a="@1st(Extra Spells)<b onClick='FaerieFire()'>Faerie Fire</b>, <b onClick='Sleep()'>Sleep</b></td></tr><tr><td>@2nd(Extra Spells)<b onClick='CalmEmotions()'>Calm Emotions</b>, <b onClick='PhantasmalForce()'>Phantasmal Force</b></td></tr><tr><td>@3rd(Extra Spells)<b onClick='Blink()'>Blink</b>, <b onClick='PlantGrowth()'>Plant Growth</b></td></tr><tr><td>@4th(Extra Spells)<b onClick='DominateBeast()'>Dominate Beast</b>, <b onClick='GreaterInvisibility()'>Greater Invisibility</b></td></tr><tr><td>@5th(Extra Spells)<b onClick='DominatePerson()'>Dominate Person</b>, <b onClick='Seeming()'>Seeming</b><p>(Fey Presence)10ft-radi vsWis or charmed or frightened tteo your nt";
b='@6th(Misty Escape)1/1 short rest, take dam, react teleport 60ft invisible til start your next turn or you atk';
c='@10th(Beguiling Defense)immune charm, react vsWis or charm charmers 10/10turns or dmgd';
dx='@14th(Dark Delirium)1/1 short rest, 60ft, vsWis charmed or frightened con 10/10turns or dmgd'
}
if(this.class.match(/Fiend/)){a="@1st(Extra Spells)<b onClick='BurningHands()'>Burning Hands</b>, <b onClick='Command()'>Command</b></td></tr><tr><td>@2nd(Extra Spells)<b onClick='BlindnessDeafness()'>BlindnessDeafness</b>, <b onClick='ScorchingRay()'>Scorching Ray</b></td></tr><tr><td>@3rd(Extra Spells)<b onClick='Fireball()'>Fireball</b>, <b onClick='StinkingCloud()'>Stinking Cloud</b></td></tr><tr><td>@4th(Extra Spells)<b onClick='FireShield()'>Fire Shield</b>, <b onClick='WallOfFire()'>Wall of Fire</b></td></tr><tr><td>@5th(Extra Spells)<b onClick='FlameStrike()'>Flame Strike</b>, <b onClick='Hallow()'>Hallow</b><p>@1st(Dark One s Blessing)kill tgt gain temp hp+chaMod+lvl";
b='@6th(Dark One s Own Luck)1/1/long rest, abi check or save+1d10';
c='@10th(Fiendish Resilience)1/1 resist 1 dmg type till next/long rest';
dx='@14th(Hurl through Hell)1/1/long rest, on hit, teleport non-fiend tgt through lower planes and back 10d10 psychic'
}

if(this.class.match(/GenieOfAir/)){a="@1st(Genie s Vessel)vessel AC is spellDC,vessel HP is lvl+lvlPro, spell focus object(Bottled Respite)act,vanish in 20ft-rad-cyl 20ft-h dimension in vessel and hear outside,store equipment treasure,2XlvlPro hrs,enter 1/1 long rest(Genies Wrath)1/turn,+lvlPro cold dmg</td></tr><tr><td>@1st(Extra Spells)<b onClick='DetectEvilAndGood()'>DetectEvilAndGood</b>, <b onClick='Thunderwave()'>Thunderwave</b></td></tr><tr><td>@2nd(Extra Spells)<b onClick='PhantasmalForce()'>PhantasmalForce</b>, <b onClick='GustOfWind()'>GustOfWind</b></td></tr><tr><td>@3rd(Extra Spells)<b onClick='CreateFoodAndWater()'>CreateFoodAndWater</b>, <b onClick='WindWalk()'>WindWalk</b></td></tr><tr><td>@4th(Extra Spells)<b onClick='PhantasmalKiller()'>PhantasmalKiller</b>, <b onClick='GreaterInvisibility()'>GreaterInvisibility</b></td></tr><tr><td>@5th(Extra Spells)<b onClick='Create()'>Create</b>, <b onClick='Seeming()'>Seeming</b></td></tr><tr><td>@9th(Extra Spells)<b onClick='Wish()'>Wish</b>";
b='@6th(Elemental Gift)resist thunder dmg,bonus,fly or hover 30ft,10min,lvlPro/lvlPro/long rest';
c='@10th(Sanctuary Vessel)30ft,5 allies can enter vessel,in 10min is short rest+lvlPro HP heal to HitDice heal';
dx='@14th(Limited Wish)act,effect of any class 6th lvl spell or lower,1d4 long rests'
}

if(this.class.match(/GenieOfEarth/)){a="@1st(Genie s Vessel)vessel AC is spellDC,vessel HP is lvl+lvlPro, spell focus object(Bottled Respite)act,vanish in 20ft-rad-cyl 20ft-h dimension in vessel and hear outside,store equipment treasure,2XlvlPro hrs,enter 1/1 long rest(Genies Wrath)1/turn,+lvlPro cold dmg</td></tr><tr><td>@1st(Extra Spells)<b onClick='DetectEvilAndGood()'>DetectEvilAndGood</b>, <b onClick='Sanctuary()'>Sanctuary</b></td></tr><tr><td>@2nd(Extra Spells)<b onClick='PhantasmalForce()'>PhantasmalForce</b>, <b onClick='SpikeGrowth()'>SpikeGrowth</b></td></tr><tr><td>@3rd(Extra Spells)<b onClick='CreateFoodAndWater()'>CreateFoodAndWater</b>, <b onClick='MeldIntoStone()'>MeldIntoStone</b></td></tr><tr><td>@4th(Extra Spells)<b onClick='PhantasmalKiller()'>PhantasmalKiller</b>, <b onClick='StoneShape()'>StoneShape</b></td></tr><tr><td>@5th(Extra Spells)<b onClick='Create()'>Create</b>, <b onClick='WallOfStone()'>WallOfStone</b></td></tr><tr><td>@9th(Extra Spells)<b onClick='Wish()'>Wish</b>";
b='@6th(Elemental Gift)resist bludgeoning dmg,bonus,fly or hover 30ft,10min,lvlPro/lvlPro/long rest';
c='@10th(Sanctuary Vessel)30ft,5 allies can enter vessel,in 10min is short rest+lvlPro HP heal to HitDice heal';
dx='@14th(Limited Wish)act,effect of any class 6th lvl spell or lower,1d4 long rests'
}

if(this.class.match(/GenieOfFire/)){a="@1st(Genie s Vessel)vessel AC is spellDC,vessel HP is lvl+lvlPro, spell focus object(Bottled Respite)act,vanish in 20ft-rad-cyl 20ft-h dimension in vessel and hear outside,store equipment treasure,2XlvlPro hrs,enter 1/1 long rest(Genies Wrath)1/turn,+lvlPro cold dmg</td></tr><tr><td>@1st(Extra Spells)<b onClick='DetectEvilAndGood()'>DetectEvilAndGood</b>, <b onClick='BurningHands()'>BurningHands</b></td></tr><tr><td>@2nd(Extra Spells)<b onClick='PhantasmalForce()'>PhantasmalForce</b>, <b onClick='ScorchingRay()'>ScorchingRay</b></td></tr><tr><td>@3rd(Extra Spells)<b onClick='CreateFoodAndWater()'>CreateFoodAndWater</b>, <b onClick='Fireball()'>Fireball</b></td></tr><tr><td>@4th(Extra Spells)<b onClick='PhantasmalKiller()'>PhantasmalKiller</b>, <b onClick='FireShield()'>FireShield</b></td></tr><tr><td>@5th(Extra Spells)<b onClick='Create()'>Create</b>, <b onClick='FlameStrike()'>FlameStrike</b></td></tr><tr><td>@9th(Extra Spells)<b onClick='Wish()'>Wish</b>";
b='@6th(Elemental Gift)resist fire dmg,bonus,fly or hover 30ft,10min,lvlPro/lvlPro/long rest';
c='@10th(Sanctuary Vessel)30ft,5 allies can enter vessel,in 10min is short rest+lvlPro HP heal to HitDice heal';
dx='@14th(Limited Wish)act,effect of any class 6th lvl spell or lower,1d4 long rests'
}

if(this.class.match(/GenieOfWater/)){a="@1st(Genie s Vessel)vessel AC is spellDC,vessel HP is lvl+lvlPro, spell focus object(Bottled Respite)act,vanish in 20ft-rad-cyl 20ft-h dimension in vessel and hear outside,store equipment treasure,2XlvlPro hrs,enter 1/1 long rest(Genies Wrath)1/turn,+lvlPro cold dmg</td></tr><tr><td>@1st(Extra Spells)<b onClick='DetectEvilAndGood()'>DetectEvilAndGood</b>, <b onClick='FogCloud()'>FogCloud</b></td></tr><tr><td>@2nd(Extra Spells)<b onClick='PhantasmalForce()'>PhantasmalForce</b>, <b onClick='Blur()'>Blur</b></td></tr><tr><td>@3rd(Extra Spells)<b onClick='CreateFoodAndWater()'>CreateFoodAndWater</b>, <b onClick='SleetStorm()'>SleetStorm</b></td></tr><tr><td>@4th(Extra Spells)<b onClick='PhantasmalKiller()'>PhantasmalKiller</b>, <b onClick='ControlWater()'>ControlWater</b></td></tr><tr><td>@5th(Extra Spells)<b onClick='Create()'>Create</b>, <b onClick='ConeOfCold()'>ConeOfCold</b></td></tr><tr><td>@9th(Extra Spells)<b onClick='Wish()'>Wish</b>";
b='@6th(Elemental Gift)resist cold dmg,bonus,fly or hover 30ft,10min,lvlPro/lvlPro/long rest';
c='@10th(Sanctuary Vessel)30ft,5 allies can enter vessel,in 10min is short rest+lvlPro HP heal to HitDice heal';
dx='@14th(Limited Wish)act,effect of any class 6th lvl spell or lower,1d4 long rests'
}

if(this.class.match(/Great/)){a="@1st(Extra Spells)<b onClick='DissonantWhispers()'>Dissonant Whispers</b>, <b onClick='TashasHideousLaughter()'>TashasHideousLaughter</b></td></tr><tr><td>@2nd(Extra Spells)<b onClick='DetectThoughts()'>Detect Thoughts</b>, <b onClick='PhantasmalForce()'>Phantasmal Force</b></td></tr><tr><td>@3rd(Extra Spells)<b onClick='Clairvoyance()'>Clairvoyance</b>, <b onClick='Sending()'>Sending</b></td></tr><tr><td>@4th(Extra Spells)<b onClick='DominateBeast()'>Dominate Beast</b>@4th<b onClick='EvardsBlackTentacles()'>Evard s Black Tentacles</b></td></tr><tr><td>@5th(Extra Spells)<b onClick='DominatePerson()'>Dominate Person</b>, <b onClick='Telekinesis()'>Telekinesis<p>@1st(Awakened Mind)telepathy with language knowing tgts 30ft";
b='@6th(Entropic Ward)1/1 short rest, react you atkd @DisAdv, next atk your tgt@Adv';
c='@10th(Thought Shield)immune telepathy @will, resist psychic, atker takes same psychic dam';
dx='@14th(Create Thrall)incapacitated humanoid telepathically charmed til Remove Curse'
}
if(this.class.match(/Hexblade/)){a="@1st(Extra Spells)<b onClick='Shield()'>Shield</b>, <b onClick='WrathfulSmite()'>Wrathful Smite</b></td></tr><tr><td>@2nd(Extra Spells)<b onClick='Blur()'>Blur</b>, <b onClick='BrandingSmite()'>Branding Smite</b></td></tr><tr><td>@3rd(Extra Spells)<b onClick='Blink()'>Blink</b>, <b onClick='ElementalWeapon()'>Elemental Weapon</b></td></tr><tr><td>@4th(Extra Spells)<b onClick='PhantasmalKiller()'>Phantasmal Killer</b>, <b onClick='StaggeringSmite()'>Staggering Smite</b></td></tr><tr><td>@5th(Extra Spells)<b onClick='BanishingSmite()'>Banishing Smite</b>, <b onClick='ConeOfCold()'>Cone of Cold</b><p>(Hexblade s Curse)bonus,1tgt, 30ft, 1min, dmg+pro, crit on 19-20, tgt dies you heal your lvl+cha, 1/1s rest<p>(Hex Warrior)medium armor+pro, shields+pro, martialwpns+pro, weapon and pactwpns atk+cha dmg+cha";
b=",@6th(Accursed Specter)your tgt dies becomes Specter with temp hp 1/2 your lvl, atks+your cha uteoy next/long rest";
c='@10th(Armor of Hexes)atker hits you, roll d6 4+atker misses';
dx='@14th(Master of Hexes)you transfer the curse to another target, you do not gain hp from new tgt deaths'
}
if(this.class.match(/Undying/)){a="@1st(Extra Spells)<b onClick='FalseLife()'>False Life</b>, <b onClick='RayOfSickness()'> Ray of Sickness</b></td></tr><tr><td>@2nd(Extra Spells)<b onClick='BlindnessDeafness()'>BlindnessDeafness</b>, <b onClick='Silence()'>Silence</b></td></tr><tr><td>@3rd(Extra Spells)<b onClick='FeignDeath()'>Feign Death</b>, <b onClick='SpeakWithDead()'>Speak with Dead</b></td></tr><tr><td>@4th(Extra Spells)<b onClick='AuraOfLife()'>Aura of Life</b>, <b onClick='DeathWard()'>Death Ward</b></td></tr><tr><td>@5th(Extra Spells)<b onClick='Contagion()'>Contagion</b>, <b onClick='LegendLore()'>Legend Lore</b><p>@1st(Among The Dead)Spare the Dying/save@Adv vs disease/undead vsWis vs spell dc on fail atk another target, on success charmed";
b='@6th(Defy Death)1/1/long rest, heal 1d8+conMod on success death save or stabilizing with Spare the Dying';
c='@10th(Undying Nature)do not need air, food, water or sleep unless long or short rest/age 1yr for every 10yrs/immune magically aged';
dx='@14th(Indestructable Life)1/1 short rest/bonus heal 1d8+lvl/reattach your severed body parts'
}
WarlockSpells="<h3>Cantrips Known:@1st(2/2),@4th(3/3),@10th(4/4)</h3>"
WarlockSpells+="<b onClick=EldritchBlast()>EldritchBlast</b>,"
WarlockSpells+="<b onClick=ChillTouch()>ChillTouch</b>,"
WarlockSpells+="<b onClick=MageHand()>MageHand</b>,"
WarlockSpells+="<b onClick=MinorIllusion()>MinorIllusion</b>,"
WarlockSpells+="<b onClick=PoisonSpray()>PoisonSpray</b>,"
WarlockSpells+="<b onClick=Prestidigitation()>Prestidigitation</b>,"
WarlockSpells+="<b onClick=TrueStrike()>TrueStrike</b>"
WarlockSpells+="<h3>1st Level Spells</h3>"
WarlockSpells+="<b onClick=CharmPerson()>CharmPerson</b>,"
WarlockSpells+="<b onClick=ComprehendLanguages()>ComprehendLanguages</b>,"
WarlockSpells+="<b onClick=ExpeditiousRetreat()>ExpeditiousRetreat</b>,"
WarlockSpells+="<b onClick=HellishRebuke()>HellishRebuke</b>,"
WarlockSpells+="<b onClick=IllusoryScript()>IllusoryScript</b>,"
WarlockSpells+="<b onClick=ProtectionFromEvilAndGood()>ProtectionFromEvilAndGood</b>,"
WarlockSpells+="<b onClick=UnseenServant()>UnseenServant</b>"
WarlockSpells+="<h3>2nd Level Spells</h3>"
WarlockSpells+="<b onClick=Darkness()>Darkness</b>,"
WarlockSpells+="<b onClick=Enthrall()>Enthrall</b>,"
WarlockSpells+="<b onClick=HoldPerson()>HoldPerson</b>,"
WarlockSpells+="<b onClick=Invisibility()>Invisibility</b>,"
WarlockSpells+="<b onClick=MirrorImage()>MirrorImage</b>,"
WarlockSpells+="<b onClick=MistyStep()>MistyStep</b>,"
WarlockSpells+="<b onClick=RayOfEnfeeblement()>RayOfEnfeeblement</b>,"
WarlockSpells+="<b onClick=Shatter()>Shatter</b>,"
WarlockSpells+="<b onClick=SpiderClimb()>SpiderClimb</b>,"
WarlockSpells+="<b onClick=Suggestion()>Suggestion</b>"
WarlockSpells+="<h3>3rd Level Spells</h3>"
WarlockSpells+="<b onClick=Counterspell()>Counterspell</b>,"
WarlockSpells+="<b onClick=DispelMagic()>DispelMagic</b>,"
WarlockSpells+="<b onClick=Fear()>Fear</b>,"
WarlockSpells+="<b onClick=Fly()>Fly</b>,"
WarlockSpells+="<b onClick=GaseousForm()>GaseousForm</b>,"
WarlockSpells+="<b onClick=HypnoticPattern()>HypnoticPattern</b>,"
WarlockSpells+="<b onClick=MagicCircle()>MagicCircle</b>,"
WarlockSpells+="<b onClick=MajorImage()>MajorImage</b>,"
WarlockSpells+="<b onClick=RemoveCurse()>RemoveCurse</b>,"
WarlockSpells+="<b onClick=Tongues()>Tongues</b>,"
WarlockSpells+="<b onClick=VampiricTouch()>VampiricTouch</b>"
WarlockSpells+="<h3>4th Level Spells</h3>"
WarlockSpells+="<b onClick=Banishment()>Banishment</b>,"
WarlockSpells+="<b onClick=Blight()>Blight</b>,"
WarlockSpells+="<b onClick=DimensionDoor()>DimensionDoor</b>,"
WarlockSpells+="<b onClick=HallucinatoryTerrain()>HallucinatoryTerrain</b>"
WarlockSpells+="<h3>5th Level Spells</h3>"
WarlockSpells+="<b onClick=ContactOtherPlane()>ContactOtherPlane</b>,"
WarlockSpells+="<b onClick=Dream()>Dream</b>,"
WarlockSpells+="<b onClick=HoldMonster()>HoldMonster</b>,"
WarlockSpells+="<b onClick=Scrying()>Scrying</b>"
WarlockSpells+="<h3>6th Level Spells</h3>"
WarlockSpells+="<b onClick=CircleOfDeath()>CircleOfDeath</b>,"
WarlockSpells+="<b onClick=ConjureFey()>ConjureFey</b>,"
WarlockSpells+="<b onClick=CreateUndead()>CreateUndead</b>,"
WarlockSpells+="<b onClick=Eyebite()>Eyebite</b>,"
WarlockSpells+="<b onClick=FleshToStone()>FleshToStone</b>,"
WarlockSpells+="<b onClick=MassSuggestion()>MassSuggestion</b>,"
WarlockSpells+="<b onClick=TrueSeeing()>TrueSeeing</b>"
WarlockSpells+="<h3>7th Level Spells</h3>"
WarlockSpells+="<b onClick=Etherealness()>Etherealness</b>,"
WarlockSpells+="<b onClick=FingerOfDeath()>FingerOfDeath</b>,"
WarlockSpells+="<b onClick=Forcecage()>Forcecage</b>,"
WarlockSpells+="<b onClick=PlaneShift()>PlaneShift</b>"
WarlockSpells+="<h3>8th Level Spells</h3>"
WarlockSpells+="<b onClick=Demiplane()>Demiplane</b>,"
WarlockSpells+="<b onClick=DominateMonster()>DominateMonster</b>,"
WarlockSpells+="<b onClick=Feeblemind()>Feeblemind</b>,"
WarlockSpells+="<b onClick=Glibness()>Glibness</b>,"
WarlockSpells+="<b onClick=PowerWordStun()>PowerWordStun</b>"
WarlockSpells+="<h3>9th Level Spells</h3>"
WarlockSpells+="<b onClick=AstralProjection()>AstralProjection</b>,"
WarlockSpells+="<b onClick=Foresight()>Foresight</b>,"
WarlockSpells+="<b onClick=Imprisonment()>Imprisonment</b>,"
WarlockSpells+="<b onClick=PowerWordKill()>PowerWordKill</b>,"
WarlockSpells+="<b onClick=TruePolymorph()>TruePolymorph</b>,"
this.setFeatures('</td></tr><tr><td>@1st(Pact Magic)spellMod is chaMod<p><p>Spells Known@1st(2)@2nd(3)@3rd(4)@4th(5)@5th(6),@6th(7),@7th (8),@8th(9),@9th(10),@11th(11),@13th(12),@15th(13),@17th(14),@19th (15)<p>Slot Lvl(Warlocks always cast all spells at this Slot Lvl)@1st (1st Slot),@2nd(2nd Slot),@4th(3rd Slot),@7th(4th Slot),@9th(5th Slot)</td></tr><tr><td>'+WarlockSpells+'</td></tr><tr><td>Warlock Invocations Known,@2nd 2@5th 3@7th 4@9th 5@12th 6@15th 7@18th 8<p>(Expanded Spell List)<p>Cantrips<b onClick=BoomingBlade()>BoomingBlade</b>, <b onClick=GreenFlameBlade()>GreenFlameBlade</b>, <b onClick=LightningLure()>LightningLure</b>, <b onClick=MindSliver()>MindSliver</b>, <b onClick=SwordBurst()>SwordBurst</b><br>3rd Lvl Spells<b onClick=IntellectFortress()>IntellectFortress</b>, <b onClick=SpiritShroud()>SpiritShroud</b>, <b onClick=SummonFey()>SummonFey</b>, <b onClick=SummonShadowspawn()>SummonShadowspawn</b>, <b onClick=SummonUndead()>SummonUndead</b><br>4th Lvl Spells<b onClick=SummonAberration()>SummonAberration</b><p>5th Lvl Spells<b onClick=Mislead()>Mislead</b>, <b onClick=PlanarBinding()>PlanarBinding</b>, <b onClick=TeleportationCircle()>TeleportationCircle</b><p>6th Lvl Spells<b onClick=SummonFiend()>SummonFiend</b>, <b onClick=TashasOtherworldlyGuise()>TashasOtherworldlyGuise</b><p>7th Lvl Spells<b onClick=DreamOfTheBlueVeil()>DreamOfTheBlueVeil</b><p>9th Lvl Spells<b onClick=BladeOfDisaster()>BladeOfDisaster</b>, <b onClick=Gate()>Gate</b>, <b onClick=Weird()>Weird</b></td></tr><tr><td>'+a+'</td></tr><tr><td>@2nd(Eldritch Invocations)INVOCATION AGONIZING BLAST must have Eldritch Blast, dmg+chaMod<p>ARMOR OF SHADOWS Mage Armor no slot cost<p>@9th ASCENDANT STEP Levitate @will, no slot cost<p>BEAST SPEECH Speak with Animals @will, no slot cost<p>BEGUILING INFLUENCE Deception Persuasion+pro<p>@7th BEWITCHING WHISPERS Compulsion, slot cost, 1/1/long rest<p>BOOK OF ANCIENT SECRETS must have Pact of the Tome, 2 1st lvl spells of any class as rituals, add adventure rituals 2hrs 50gp<p>@15th CHAINS OF CARCERI 1/1/long rest, Hold Monster @will, no slot cost or components(Devil s Sight)120ft see in magical nonmagical darkness @7th(Dreadful Word)1/1/long rest, Confusion, slot cost<p>ELDRITCH SIGHT Detect magic @will, no slot cost<p>ELDRITCH SPEAR must have Eldritch Blast, range 300ft<p>EYES OF THE RUNE KEEPER read all writing<p>FIENDISH VIGOR False Life @will, no slot cost<p>GAZE OF TWO MINDS see through ally till tteo your nt<p>@12th LIFEDRINKER must have Pact of the Blade, dmg+chaMod necrotic<p>MASK OF MANY FACES <b onClick=DisguiseSelf()>Disguise Self</b> @will, no slot cost<p>@15th MASTER OF MYRIAD FORMS Alter Self @will, no slot cost<p>@9th MINIONS OF CHAOS 1/1/long rest, Conjure Elemental, slot cost<p>@5th MIRE THE MIND 1/1/long rest, Slow, slot cost<p>MISTY VISIONS Silent Image @will, no slot cost, no material component<p>@5th ONE WITH SHADOWS in dim or darkness, 1act,invisible til move, act, react<p>@9th OTHERWORLDLY LEAP jump @will, no slot cost, no material component<p>REPELLING BLAST must have Eldritch Blast, on hit push tgt up to 10ft<p>@7th SCULPTOR OF FLESH 1/1/long rest, Polymorph, 1 slot<p>@5th SIGN OF ILL OMEN 1/1/long rest, Bestow Curse<p>THIEF OF FIVE FATES 1/1/long rest, Bane<p>@5th THIRSTING BLADE must have Pact of the Blade, 1 more atk<p>@15th VISIONS OF DISTANT REALMS Arcane Eye @will, no slot cost<p>VOICE OF THE CHAIN MASTER must have Pact of the Chain, telepathy with familiar, sense and speak through familiar<p>@9th WHISPERS OF THE GRAVE Speak with Dead @will, no slot cost<p>@15th WITCH SIGHT see true form of shapechanger of illusion or transmu 30ft</td></tr><tr><td>@3rd(Pact Boon)</td></tr><tr><td>@3rd(Pact of the Chain)Find Familiar as ritual, imp, pseudodragon, quasit, sprite, or normal familiar, familiar atks as its reactfamiliar fly or swim at 40ftbonus,familiar magical atks with your spellAbi+DCfamiliar takes your resistance dmg<p>(Pact of the Talisman)abi check+1d4 proLvl/proLvl/long rest, 1hr ritual to replace the talisman@12th(Bond of the Talisman)ally wears your talisman, you can teleport to your ally, lvl pro/lvl pro/long restor (Eldritch Mind)vsCon@Adv to maintain concen@7th(Protection of the Talisman)ally wears your talisman, +1d4 to save throw, lvlPro/lvlPro/long restor @7th(Rebuke of the Talisman)react, atkr 30ft takes lvlPro psychic dmg and pushed 10ft<p>or ,@3rd(Pact of the Blade)weapon becomes magical, summon dismiss weapon as bonus<p>or ,@3rd(Pact of the Tomb)3 any class xtra cantrips, 1hr to replace book@5th(Far Scribe)lvl pro of allies write name in book, Sending Spell send and receive messages, 1min@9th(Gift of the Protectors)lvl pro of allies write name in book, 0hp becomes 1hp less take 2xMaxHP+CurHP, 1/long rest</td></tr><tr><td>@4th(Ability Score Improvement)1 abi+2, or abi+1 another abi+1@4th,@8th,@12th,@16th,@19th <p>(Eldritch Versatility)during abi increase, exchange 1 cantrip, exchange pact boon feature, @12th exchange 1 Mystic Arcanum spell</td></tr><tr><td>@5th(Undying Servitude) <b onClick=AnimateDead()>AnimateDead</b> no spell slot/long rest'+b+'</td></tr><tr><td>'+c+'</td></tr><tr><td>@11th(Mystic Arcanum)1 new 6th lvl Warlock spell without slot cost, after slot cost)1/1, @13th 7th lvl 1/1, @15th 8th lvl 1/1, @17th 9th lvl 1/1 </td></tr><tr><td>'+dx+'</td></tr><tr><td>@20th(Eldritch Master)1/1/long rest, takes 1min restore all slots</td></tr>');
this.setEquipment('light crossbow 20 bolts or simple weapon.component pouch or arcane focus.scholar pack or dungeoneer pack.leather armor.simple weapon.2 daggers');
this.setHitDice(this.lvl+'d8+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('light armor, simplewpns');
this.setSaving('wis+pro, cha+pro');
this.setStrPro('');
this.setDexPro('');
this.setConPro('');
this.setIntPro('');
this.setWisPro('pro');
this.setChaPro('pro');
this.setSkills('2 from Arcana, Deception, History, Intimidation, Investigation, Nature, or Religion');
this.setSpellAbility('cha')}A='No Features';
if(this.class.match(/Abjurer/)){a='@2nd(Abjuration Savant)gold, time 1/2 copying abjuration spells</td></tr><tr><td>@2nd(Arcane Ward)when casting abjuration, self ward hp 2 x lvl+intMod, cast another abjuration, ward heals 2 x spell lvl';
b='@6th(Projected Ward)ward ranged 30ft for an ally</td></tr><tr><td>@10th(Improved Abjuration)abjuration spell ability checks+pro</td></tr><tr><td>@14th(Spell Resistance)save@Adv vs spells, resist spell dmg'
}
if(this.class.match(/Bladesinger/)){a="@2nd(Bladesinging)light armor+pro, melee weapon+pro, Performance+pro</td></tr><tr><td>@2nd(Bladesong)while no heavy or medium armor or shield or weapon, bonus,10/10turns, AC+intMod, Speed+10ft, Dex and Acrobatics@Adv, conce,save con+intMod";
b='@6th(Extra atk)atk twice when you take an atk action</td></tr><tr><td>@10th(Song of Defense)during your Bladesong, heal 5x1 spell slot lvl when expending the slot</td></tr><tr><td>@14th(Song of Victory)during your Bladesong, melee weapon+intMod dmg'
}
if(this.class.match(/Conjurer/)){a='@2nd(Conjuration Savant)gold and time is halved copying conju spells</td></tr><tr><td>@2nd(Minor Conjuration)1 10lb 3ft-cubebed object within 10ft till 1hr or dmgd';
b='6th(Benign Transportation)teleport 30ft or swap space with ally 1/1 </td></tr><tr><td>@10th(Focused Conjuration)conce,ntration not broken casting conju spell</td></tr><tr><td>@14th(Durable Summons)summoned or constructs have 30 temp hp'
}
if(this.class.match(/Diviner/)){a='@2nd(Divination Savant) gold and time is halved copying divination spells</td></tr><tr><td>@2nd(Portent)1/1 roll 2 d20 and use in place of any ally or tgt roll';
b='@6th(Expert Divination) regain a slot lower than the conju spell lvl you cast</td></tr><tr><td>@10th(The Third Eye)1/1 act Darkvision or Ethreal Sight or Greater Comprehension or See Invisibility</td></tr><tr><td>@14th(Greater Portent) roll 3 d20s for your Portent'
}
if(this.class.match(/Enchanter/)){a='@2nd(Enchantment Savant)gold and time is halved copying encha spells</td></tr><tr><td>@2nd(Hypnotic Gaze)1/1 5ft vsWis charmed speed 0 incapacitated dazed';
b='@6th(Instinctive Charm)atkd @30ft, react, tgt vsWis or atks tgt ally</td></tr><tr><td>@10th(Split Enchantment)cast encha on 2 tgts</td></tr><tr><td>@14th(Alter Memories)vsInt or no memories of charm 1+chaMod hours'
}
if(this.class.match(/Evoker/)){a='@2nd(Evocation Savant)gold and time is halved copying evoca spells</td></tr><tr><td>@2nd(Sculpt Spells)cast 1 ally+1/spell lvl auto or save 1/2dmg,is save for 0 hp in the spell area';
b='@6th(Potent Cantrip)cantrips are save 1/2dmg,dmg</td></tr><tr><td>@10th(Empowered Evocation)evoca spells+int dmg</td></tr><tr><td>@14th(Overchannel)1/1 5th lvl spells but not cantrips or lower do max dmg, take 2d12 necrotic if you castthis again before a/long rest, +1d12 necrotic each time'
}
if(this.class.match(/Illusionist/)){a='@2nd(Illusion Savant)gold and time is halved copying illusion spells</td></tr><tr><td>@2nd(Improved Minor Illusion)if learned, learn 1 cantrip, Create image and sound';
b='@6th(Malleable Illusions)you can change 10/10turns or longer illusions</td></tr><tr><td>@10th(Illusory Self)react, atker hits clone which ends and misses you 1/1 </td></tr><tr><td>@14th(Illusory Reality)the illusionary object remains real for 1min'
}
if(this.class.match(/Necromancer/)){a='2nd(Necromancy Savant) gold and time is halved copying necrom spells</td></tr><tr><td>@2nd(Grim Harvest)cast and kill, heal 2 x spell lvl, 3 x if Necromantic spell';
b='@6th(Undead Thralls)learn Animate Dead+1 undead hp+your lvl, dmg+your pro</td></tr><tr><td>@10th(Injured to Undeath)resist necrotic, maxHP never reduced</td></tr><tr><td>@14th(Command Undead)1 undead 60ft cha save or obeys, undead int 8+save@Adv reroll/hr'
}
if(this.class.match(/Theurgist/)){a="@2nd(Divine Inspiration)Choose a Cleric Domain and deity</td></tr><tr><td>@2nd(Arcane Initiate)when gaining a Wizard lvl, you can opt to replace a new learned Wizard spell for a Cleric Domain spell of the same spell lvl, other Wizards can not copy your Cleric Domain spells into their spell books</td></tr><tr><td>@2nd(Channel Arcana),@2nd 1/1 ,@6th 2/2 @18th 3/3 sort rest recharge(Divine Arcana)bonus,say prayer spell atk+2 or DC+2(Channel Divinity)";
b=",@6th(Arcane Acolyte)you gain the Cleric Domain 1st lvl benefits except weapon and armor proficiencies</td></tr><tr><td>@10th(Arcane Priest)you gain your Cleric Domain 6th lvl benefits</td></tr><tr><td>@14th(Arcane High Priest)you gain your Cleric Domain 17th lvl benefits"
}
if(this.class.match(/Transmuter/)){a='@2nd(Transmutation Savant)gold and time is halved copying transmu spells</td></tr><tr><td>@2nd(Minor Achemy)transmute 1ft-cube of objects 1hr';
b='@6th(Transmuter s Stone)you or ally that carries it, Darkvision 60ft or speed+10ft or con+pro or resist acid, cold, fire, lightning, thunder</td></tr><tr><td>@10th(Shapechanger)learn Polymorph no slot cost self CR1 or lower 1/1 </td></tr><tr><td>@14th(Master Tansmuter)act Transmuter Stone destroyed(Major Transformation)5ft-cube objectsor(Panacea)remove all curses, disease, poisons, restore hp of 1 allyor(Restore Life)Raise Dead @no slot cost on 1 allyor(Restore Youth)apparent age is reduced by 3d10 years min 13 of 1 ally'
}
WizardSpells="<h3>Cantrips Known:@1st(3)@4th(4)@10th(5)</h3>"
WizardSpells+="<b onClick=AcidSplash()>AcidSplash</b>,"
WizardSpells+="<b onClick=ChillTouch()>ChillTouch</b>,"
WizardSpells+="<b onClick=DancingLights()>DancingLights</b>,"
WizardSpells+="<b onClick=FireBolt()>FireBolt</b>,"
WizardSpells+="<b onClick=Light()>Light</b>,"
WizardSpells+="<b onClick=MageHand()>MageHand</b>,"
WizardSpells+="<b onClick=Mending()>Mending</b>,"
WizardSpells+="<b onClick=Message()>Message</b>,"
WizardSpells+="<b onClick=MinorIllusion()>MinorIllusion</b>,"
WizardSpells+="<b onClick=PoisonSpray()>PoisonSpray</b>,"
WizardSpells+="<b onClick=Prestidigitation()>Prestidigitation</b>,"
WizardSpells+="<b onClick=RayOfFrost()>RayOfFrost</b>,"
WizardSpells+="<b onClick=ShockingGrasp()>ShockingGrasp</b>,"
WizardSpells+="<b onClick=TrueStrike()>TrueStrike</b>"
WizardSpells+="<h3>1stSlot:@1st(2/2),@2nd(3/3),@3rd(4/4),@10th(5/5)</h3>"
WizardSpells+="<b onClick=Alarm()>Alarm</b>,"
WizardSpells+="<b onClick=BurningHands()>BurningHands</b>,"
WizardSpells+="<b onClick=CharmPerson()>CharmPerson</b>,"
WizardSpells+="<b onClick=ColorSpray()>ColorSpray</b>,"
WizardSpells+="<b onClick=ComprehendLanguages()>ComprehendLanguages</b>,"
WizardSpells+="<b onClick=DetectMagic()>DetectMagic</b>,"
WizardSpells+="<b onClick=DisguiseSelf()>DisguiseSelf</b>,"
WizardSpells+="<b onClick=ExpeditiousRetreat()>ExpeditiousRetreat</b>,"
WizardSpells+="<b onClick=FalseLife()>FalseLife</b>,"
WizardSpells+="<b onClick=FeatherFall()>FeatherFall</b>,"
WizardSpells+="<b onClick=FindFamiliar()>FindFamiliar</b>,"
WizardSpells+="<b onClick=FloatingDisk()>FloatingDisk</b>,"
WizardSpells+="<b onClick=FogCloud()>FogCloud</b>,"
WizardSpells+="<b onClick=Grease()>Grease</b>,"
WizardSpells+="<b onClick=TashasHideousLaughter()>TashasHideousLaughter</b>,"
WizardSpells+="<b onClick=Identify()>Identify</b>,"
WizardSpells+="<b onClick=IllusoryScript()>IllusoryScript</b>,"
WizardSpells+="<b onClick=Jump()>Jump</b>,"
WizardSpells+="<b onClick=Longstrider()>Longstrider</b>,"
WizardSpells+="<b onClick=MageArmor()>MageArmor</b>,"
WizardSpells+="<b onClick=MagicMissile()>MagicMissile</b>,"
WizardSpells+="<b onClick=ProtectionFromEvilAndGood()>ProtectionFromEvilAndGood</b>,"
WizardSpells+="<b onClick=Shield()>Shield</b>,"
WizardSpells+="<b onClick=SilentImage()>SilentImage</b>,"
WizardSpells+="<b onClick=Sleep()>Sleep</b>,"
WizardSpells+="<b onClick=Thunderwave()>Thunderwave</b>,"
WizardSpells+="<b onClick=UnseenServant()>UnseenServant</b>"
WizardSpells+="<h3>2ndSlot:@3rd(2/2),@4th(3/3)</h3>"
WizardSpells+="<b onClick=MelfsAcidArrow()>MelfsAcidArrow</b>,"
WizardSpells+="<b onClick=AlterSelf()>AlterSelf</b>,"
WizardSpells+="<b onClick=ArcaneLock()>ArcaneLock</b>,"
WizardSpells+="<b onClick=BlindnessDeafness()>BlindnessDeafness</b>,"
WizardSpells+="<b onClick=Blur()>Blur</b>,"
WizardSpells+="<b onClick=ContinualFlame()>ContinualFlame</b>,"
WizardSpells+="<b onClick=Darkness()>Darkness</b>,"
WizardSpells+="<b onClick=Darkvision()>Darkvision</b>,"
WizardSpells+="<b onClick=DetectThoughts()>DetectThoughts</b>,"
WizardSpells+="<b onClick=EnlargeReduce()>EnlargeReduce</b>,"
WizardSpells+="<b onClick=FlamingSphere()>FlamingSphere</b>,"
WizardSpells+="<b onClick=GentleRepose()>GentleRepose</b>,"
WizardSpells+="<b onClick=GustOfWind()>GustOfWind</b>,"
WizardSpells+="<b onClick=HoldPerson()>HoldPerson</b>,"
WizardSpells+="<b onClick=Invisibility()>Invisibility</b>,"
WizardSpells+="<b onClick=Knock()>Knock</b>,"
WizardSpells+="<b onClick=Levitate()>Levitate</b>,"
WizardSpells+="<b onClick=LocateObject()>LocateObject</b>,"
WizardSpells+="<b onClick=MagicMouth()>MagicMouth</b>,"
WizardSpells+="<b onClick=MagicWeapon()>MagicWeapon</b>,"
WizardSpells+="<b onClick=MirrorImage()>MirrorImage</b>,"
WizardSpells+="<b onClick=MistyStep()>MistyStep</b>,"
WizardSpells+="<b onClick=RayOfEnfeeblement()>RayOfEnfeeblement</b>,"
WizardSpells+="<b onClick=RopeTrick()>RopeTrick</b>,"
WizardSpells+="<b onClick=ScorchingRay()>ScorchingRay</b>,"
WizardSpells+="<b onClick=SeeInvisibility()>SeeInvisibility</b>,"
WizardSpells+="<b onClick=Shatter()>Shatter</b>,"
WizardSpells+="<b onClick=SpiderClimb()>SpiderClimb</b>,"
WizardSpells+="<b onClick=Suggestion()>Suggestion</b>,"
WizardSpells+="<b onClick=Web()>Web</b>,"
WizardSpells+="<b onClick=AnimateDead()>AnimateDead</b>"
WizardSpells+="<h3>3rdSlot:@5th(2/2),@6th(3/3)</h3>"
WizardSpells+="<b onClick=BestowCurse()>BestowCurse</b>,"
WizardSpells+="<b onClick=Blink()>Blink</b>,"
WizardSpells+="<b onClick=Clairvoyance()>Clairvoyance</b>,"
WizardSpells+="<b onClick=Counterspell()>Counterspell</b>,"
WizardSpells+="<b onClick=DispelMagic()>DispelMagic</b>,"
WizardSpells+="<b onClick=Fear()>Fear</b>,"
WizardSpells+="<b onClick=Fireball()>Fireball</b>,"
WizardSpells+="<b onClick=Fly()>Fly</b>,"
WizardSpells+="<b onClick=GaseousForm()>GaseousForm</b>,"
WizardSpells+="<b onClick=GlyphOfWarding()>GlyphOfWarding</b>,"
WizardSpells+="<b onClick=Haste()>Haste</b>,"
WizardSpells+="<b onClick=HypnoticPattern()>HypnoticPattern</b>,"
WizardSpells+="<b onClick=LightningBolt()>LightningBolt</b>,"
WizardSpells+="<b onClick=MagicCircle()>MagicCircle</b>,"
WizardSpells+="<b onClick=MajorImage()>MajorImage</b>,"
WizardSpells+="<b onClick=Nondetection()>Nondetection</b>,"
WizardSpells+="<b onClick=PhantomSteed()>PhantomSteed</b>,"
WizardSpells+="<b onClick=ProtectionFromEnergy()>ProtectionFromEnergy</b>,"
WizardSpells+="<b onClick=RemoveCurse()>RemoveCurse</b>,"
WizardSpells+="<b onClick=Sending()>Sending</b>,"
WizardSpells+="<b onClick=SleetStorm()>SleetStorm</b>,"
WizardSpells+="<b onClick=Slow()>Slow</b>,"
WizardSpells+="<b onClick=StinkingCloud()>StinkingCloud</b>,"
WizardSpells+="<b onClick=LeomundsTinyHut()>LeomundsTinyHut</b>,"
WizardSpells+="<b onClick=Tongues()>Tongues</b>,"
WizardSpells+="<b onClick=VampiricTouch()>VampiricTouch</b>,"
WizardSpells+="<b onClick=WaterBreathing()>WaterBreathing</b>"
WizardSpells+="<h3>4thSlot:@7th(1/1),@8th(2/2),@9th(3/3)</h3>"
WizardSpells+="<b onClick=ArcaneEye()>ArcaneEye</b>,"
WizardSpells+="<b onClick=Banishment()>Banishment</b>,"
WizardSpells+="<b onClick=BlackTentacles()>BlackTentacles</b>,"
WizardSpells+="<b onClick=Blight()>Blight</b>,"
WizardSpells+="<b onClick=Confusion()>Confusion</b>,"
WizardSpells+="<b onClick=ConjureMinorElementals()>ConjureMinorElementals</b>,"
WizardSpells+="<b onClick=ControlWater()>ControlWater</b>,"
WizardSpells+="<b onClick=DimensionDoor()>DimensionDoor</b>,"
WizardSpells+="<b onClick=Fabricate()>Fabricate</b>,"
WizardSpells+="<b onClick=MordenkainensFaithfulHound()>MordenkainensFaithfulHound</b>,"
WizardSpells+="<b onClick=FireShield()>FireShield</b>,"
WizardSpells+="<b onClick=GreaterInvisibility()>GreaterInvisibility</b>,"
WizardSpells+="<b onClick=HallucinatoryTerrain()>HallucinatoryTerrain</b>,"
WizardSpells+="<b onClick=IceStorm()>IceStorm</b>,"
WizardSpells+="<b onClick=LocateCreature()>LocateCreature</b>,"
WizardSpells+="<b onClick=PhantasmalKiller()>PhantasmalKiller</b>,"
WizardSpells+="<b onClick=Polymorph()>Polymorph</b>,"
WizardSpells+="<b onClick=PrivateSanctum()>PrivateSanctum</b>,"
WizardSpells+="<b onClick=ResilientSphere()>ResilientSphere</b>,"
WizardSpells+="<b onClick=SecretChest()>SecretChest</b>,"
WizardSpells+="<b onClick=StoneShape()>StoneShape</b>,"
WizardSpells+="<b onClick=Stoneskin()>Stoneskin</b>,"
WizardSpells+="<b onClick=WallOfFire()>WallOfFire</b>"
WizardSpells+="<h3>5thSlot:@9th(1/1),@10th(2/2),@18th(3/3)</h3>"
WizardSpells+="<b onClick=AnimateObjects()>AnimateObjects</b>,"
WizardSpells+="<b onClick=ArcaneHand()>ArcaneHand</b>,"
WizardSpells+="<b onClick=Cloudkill()>Cloudkill</b>,"
WizardSpells+="<b onClick=ConeOfCold()>ConeOfCold</b>,"
WizardSpells+="<b onClick=ConjureElemental()>ConjureElemental</b>,"
WizardSpells+="<b onClick=ContactOtherPlane()>ContactOtherPlane</b>,"
WizardSpells+="<b onClick=Creation()>Creation</b>,"
WizardSpells+="<b onClick=DominatePerson()>DominatePerson</b>,"
WizardSpells+="<b onClick=Dream()>Dream</b>,"
WizardSpells+="<b onClick=Geas()>Geas</b>,"
WizardSpells+="<b onClick=HoldMonster()>HoldMonster</b>,"
WizardSpells+="<b onClick=LegendLore()>LegendLore</b>,"
WizardSpells+="<b onClick=Mislead()>Mislead</b>,"
WizardSpells+="<b onClick=ModifyMemory()>ModifyMemory</b>,"
WizardSpells+="<b onClick=Passwall()>Passwall</b>,"
WizardSpells+="<b onClick=PlanarBinding()>PlanarBinding</b>,"
WizardSpells+="<b onClick=Scrying()>Scrying</b>,"
WizardSpells+="<b onClick=Seeming()>Seeming</b>,"
WizardSpells+="<b onClick=Telekinesis()>Telekinesis</b>,"
WizardSpells+="<b onClick=TelepathicBond()>TelepathicBond</b>,"
WizardSpells+="<b onClick=TeleportationCircle()>TeleportationCircle</b>,"
WizardSpells+="<b onClick=WallOfForce()>WallOfForce</b>,"
WizardSpells+="<b onClick=WallOfStone()>WallOfStone</b>"
WizardSpells+="<h3>6thSlot:@11th(1/1),@19th(2/2)</h3>"
WizardSpells+="<b onClick=ChainLightning()>ChainLightning</b>,"
WizardSpells+="<b onClick=CircleOfDeath()>CircleOfDeath</b>,"
WizardSpells+="<b onClick=Contingency()>Contingency</b>,"
WizardSpells+="<b onClick=CreateUndead()>CreateUndead</b>,"
WizardSpells+="<b onClick=Disintegrate()>Disintegrate</b>,"
WizardSpells+="<b onClick=Eyebite()>Eyebite</b>,"
WizardSpells+="<b onClick=FleshToStone()>FleshToStone</b>,"
WizardSpells+="<b onClick=FreezingSphere()>FreezingSphere</b>,"
WizardSpells+="<b onClick=GlobeOfInvulnerability()>GlobeOfInvulnerability</b>,"
WizardSpells+="<b onClick=GuardsAndWards()>GuardsAndWards</b>,"
WizardSpells+="<b onClick=InstantSummons()>InstantSummons</b>,"
WizardSpells+="<b onClick=IrresistibleDance()>IrresistibleDance</b>,"
WizardSpells+="<b onClick=MagicJar()>MagicJar</b>,"
WizardSpells+="<b onClick=MassSuggestion()>MassSuggestion</b>,"
WizardSpells+="<b onClick=MoveEarth()>MoveEarth</b>,"
WizardSpells+="<b onClick=ProgrammedIllusion()>ProgrammedIllusion</b>,"
WizardSpells+="<b onClick=Sunbeam()>Sunbeam</b>,"
WizardSpells+="<b onClick=TrueSeeing()>TrueSeeing</b>,"
WizardSpells+="<b onClick=WallOfIce()>WallOfIce</b>"
WizardSpells+="<h3>7thSlot:@13th(1/1),@20th(2/2)</h3>"
WizardSpells+="<b onClick=ArcaneSword()>ArcaneSword</b>,"
WizardSpells+="<b onClick=DelayedBlastFireball()>DelayedBlastFireball</b>,"
WizardSpells+="<b onClick=Etherealness()>Etherealness</b>,"
WizardSpells+="<b onClick=FingerOfDeath()>FingerOfDeath</b>,"
WizardSpells+="<b onClick=Forcecage()>Forcecage</b>,"
WizardSpells+="<b onClick=MordenkainensMagnificentMansion()>MordenkainensMagnificentMansion</b>,"
WizardSpells+="<b onClick=MirageArcane()>MirageArcane</b>,"
WizardSpells+="<b onClick=PlaneShift()>PlaneShift</b>,"
WizardSpells+="<b onClick=PrismaticSpray()>PrismaticSpray</b>,"
WizardSpells+="<b onClick=ProjectImage()>ProjectImage</b>,"
WizardSpells+="<b onClick=ReverseGravity()>ReverseGravity</b>,"
WizardSpells+="<b onClick=Sequester()>Sequester</b>,"
WizardSpells+="<b onClick=Simulacrum()>Simulacrum</b>,"
WizardSpells+="<b onClick=Symbol()>Symbol</b>,"
WizardSpells+="<b onClick=Teleport()>Teleport</b>"
WizardSpells+="<h3>8thSlot:@15th(1/1)</h3>"
WizardSpells+="<b onClick=AntimagicField()>AntimagicField</b>,"
WizardSpells+="<b onClick=AntipathySympathy()>AntipathySympathy</b>,"
WizardSpells+="<b onClick=Clone()>Clone</b>,"
WizardSpells+="<b onClick=ControlWeather()>ControlWeather</b>,"
WizardSpells+="<b onClick=Demiplane()>Demiplane</b>,"
WizardSpells+="<b onClick=DominateMonster()>DominateMonster</b>,"
WizardSpells+="<b onClick=Feeblemind()>Feeblemind</b>,"
WizardSpells+="<b onClick=IncendiaryCloud()>IncendiaryCloud</b>,"
WizardSpells+="<b onClick=Maze()>Maze</b>,"
WizardSpells+="<b onClick=MindBlank()>MindBlank</b>,"
WizardSpells+="<b onClick=PowerWordStun()>PowerWordStun</b>,"
WizardSpells+="<b onClick=Sunburst()>Sunburst</b>"
WizardSpells+="<h3>9thSlot:@17th(1/1)</h3>"
WizardSpells+="<b onClick=AstralProjection()>AstralProjection</b>,"
WizardSpells+="<b onClick=Foresight()>Foresight</b>,"
WizardSpells+="<b onClick=Gate()>Gate</b>,"
WizardSpells+="<b onClick=Imprisonment()>Imprisonment</b>,"
WizardSpells+="<b onClick=MeteorSwarm()>MeteorSwarm</b>,"
WizardSpells+="<b onClick=PowerWordKill()>PowerWordKill</b>,"
WizardSpells+="<b onClick=PrismaticWall()>PrismaticWall</b>,"
WizardSpells+="<b onClick=Shapechange()>Shapechange</b>,"
WizardSpells+="<b onClick=TimeStop()>TimeStop</b>,"
WizardSpells+="<b onClick=TruePolymorph()>TruePolymorph</b>,"
WizardSpells+="<b onClick=Weird()>Weird</b>,"
WizardSpells+="<b onClick=Wish()>Wish</b>"
if(this.class.match(/Wizard/)){this.setFeatures("</td></tr><tr><td>(Spells Known)intMod+1 and +2 spells every lvl-up</td></tr><tr><td>"+WizardSpells+"</td></tr><tr><td>@1st(Arcane Recovery)1/1 short rest, recover 1/2 lvl rnd up in 6th lvl or fewer slots</td></tr><tr><td>"+a+"</td></tr><tr><td>@4th(Ability Score Improvement)abi+2 or abi+1 and another abi+1@4th,@8th,@12th,@16th,@19th</td></tr><tr><td>"+b+"</td></tr><tr><td>@18th(Spell Mastery)cast a known 1st and 2nd lvl spell @no 1st cost, 8hrs change the know spells</td></tr><tr><td>@20th(Signature Spells)cast 2 known 3rd lvl spells @no 3rd cost");
this.setEquipment('quarterstaff or dagger.component pouch or arcane focus.scholar pack or explorer pack.spellbook');
this.setHitDice(this.lvl+'d6+'+(parseInt(this.lvl)*parseInt(this.conMod)));
this.setProficiencies('daggers, darts, light crossbows, quarterstaffs, and slings');
this.setSaving('int+pro, wis+pro');
this.setStrPro('');
this.setDexPro('');
this.setConPro('');
this.setIntPro('pro');
this.setWisPro('pro');
this.setChaPro('');
this.setSkills('2 from Arcana, History, Insight, Investigation, Medicine, or Religion');
this.setSpellAbility('int')}
this.refresh()}
function _setCombatLog(x){this.combatLog=x;
this.refresh()}
function _setCon(x){this.con=x;
this.curCon=x;calcMod(x);
this.conMod=mod;
this.setClass(this.class);
this.refresh()}
function _setContents(newContents){this.contents=newContents;
this.refresh()}
function _setCurAc(x){this.curAc=x;
this.refresh()}
function _setCurCon(x){this.curCon=x;calcMod(x);
this.conMod=mod;
this.refresh()}
function _setCurCha(x){this.curCha=x;calcMod(x);
this.chaMod=mod;
this.refresh()}
function _setCurDex(x){this.curDex=x;calcMod(x);
this.dexMod=mod;
this.refresh()}
function _setCurIni(x){this.curIni=x;
this.refresh()}
function _setCurInt(x){this.curInt=x;calcMod(x);
this.intMod=mod;
this.refresh()}
function _setCurStr(x){this.curStr=x;calcMod(x);
this.strMod=mod;
if(this.size.match(/Tiny/)){this.carryingCapacity=((this.curStr / 1)*15)/ 2;
this.dragLiftPush=((this.curStr / 1)*30)/ 2;
this.highJump=Math.floor(((this.strMod / 1)+3)/ 2);
this.longJump=Math.floor((this.curStr / 1)/ 2)}
if(this.size.match(/Small|Medium/)){this.carryingCapacity=(this.curStr / 1)*15;
this.dragLiftPush=(this.curStr / 1)*30;
this.highJump=Math.floor((this.strMod / 1)+3);
this.longJump=Math.floor(this.curStr / 1)}
if(this.size.match(/Large/)){this.carryingCapacity=((this.curStr / 1)*15)*2;
this.dragLiftPush=((this.curStr / 1)*30)*2;
this.highJump=Math.floor(((this.strMod / 1)+3)*2);
this.longJump=Math.floor((this.curStr / 1)*2)}
if(this.size.match(/Huge/)){this.carryingCapacity=((this.curStr / 1)*15)*4;
this.dragLiftPush=((this.curStr / 1)*30)*4;
this.highJump=Math.floor(((this.strMod / 1)+3)*4);
this.longJump=Math.floor((this.curStr / 1)*4)}
if(this.size.match(/Gargantuan/)){this.carryingCapacity=((this.curStr / 1)*15)*6;
this.dragLiftPush=((this.curStr / 1)*30)*6;
this.highJump=Math.floor(((this.strMod / 1)+3)*6);
this.longJump=Math.floor((this.curStr / 1)*6)}
this.refresh()}
function _setCurWis(x){this.curWis=x;calcMod(x);
this.wisMod=mod;
this.refresh()}
function _setDmg(x){this.curHp -=x;
if(this.curHp< -this.maxHp){this.curHp=-this.maxHp
}
this.refresh()}
function _setDamageConditions(x){this. dmgConditions=x;
if(changedStr=this. dmgConditions.match(/(str)(\+\d{1,2}|\-\d{1,2})/i)){this.setCurStr(parseInt(this.str)+parseInt(changedStr[2]))}
else
{this.setCurStr(parseInt(this.str))}
if(changedDex=this. dmgConditions.match(/(dex)(\+\d{1,2}|\-\d{1,2})/i)){this.setCurDex(parseInt(this.dex)+parseInt(changedDex[2]))}
else
{this.setCurDex(parseInt(this.dex))}
if(changedCon=this. dmgConditions.match(/(con)(\+\d{1,2}|\-\d{1,2})/i)){this.setCurCon(parseInt(this.con)+parseInt(changedCon[2]))}
else
{this.setCurCon(parseInt(this.con))}
if(changedInt=this. dmgConditions.match(/(int)(\+\d{1,2}|\-\d{1,2})/i)){this.setCurInt(parseInt(this.inte)+parseInt(changedInt[2]))}
else
{this.setCurInt(parseInt(this.inte))}
if(changedHp=this. dmgConditions.match(/(hp)(\+\d{1,3}|\-\d{1,3})/i)){this.setTempHp(parseInt(changedHp[2]))}
else
{this.setTempHp(parseInt(0))}
if(changedWis=this. dmgConditions.match(/(wis)(\+\d{1,2}|\-\d{1,2})/i)){this.setCurWis(parseInt(this.wis)+parseInt(changedWis[2]))}
else
{this.setCurWis(parseInt(this.wis))}
if(changedCha=this. dmgConditions.match(/(cha)(\+\d{1,2}|\-\d{1,2})/i)){this.setCurCha(parseInt(this.cha)+parseInt(changedCha[2]))}
else
{this.setCurCha(parseInt(this.cha))}
if(changedAc=this. dmgConditions.match(/(ac)(\+\d{1,2}|\-\d{1,2})/i)){this.setCurAc(parseInt(this.ac)+parseInt(changedAc[2]))}
else
{this.setCurAc(parseInt(this.ac))}
if(changedIni=this. dmgConditions.match(/(ini)(\+\d{1,2}|\-\d{1,2})/i)){newIni=parseInt(this.initBonus)+parseInt(changedIni[2]);
if(newIni> -1){newIni="+"+newIni
}
this.setCurIni(newIni)}
else
{this.setCurIni(this.initBonus)}
this.refresh()}
function _setDex(x){this.dex=x;
this.curDex=x;calcMod(x);
this.dexMod=mod;
this.initBonus=mod;
this.curIni=mod;
this.refresh()}
function _setEquipment(x){this.equipment=x;
this.equipment=this.equipment.replace(/\'/g, ' ');
this.equipment=this.equipment.replace(/\./g, '\n');
this.refresh()}
function _setExperience(x){this.experience=x;
this.refresh(x)}
function _setFeats(x){this.feats=x;
this.feats=this.feats.replace(/\'/g, '');
this.refresh(x)}
function _setFeatures(x){this.features=x;
this.features=this.features.replace(/\'/g, '\'');
this.features=this.features.replace(/\s+/g, ' ');
this.features=this.features.replace(/\./g, '\.\n');
this.refresh()}
function _setFeatureNotes(x){this.featureNotes=x;
this.featureNotes=this.featureNotes.replace(/\'|\s+/g, ' ');
this.featureNotes=this.featureNotes.replace(/\./g, '\.\n');
this.refresh()}
function _setActionNotes(x){this.actionNotes=x;
this.actionNotes=this.actionNotes.replace(/\'|\s+/g, ' ');
this.actionNotes=this.actionNotes.replace(/\./g, '\.\n');
this.refresh()}
function _setFigure(x){this.figure=x;
this.refresh(x)}
function _setFlaws(x){this.flaws=x;
this.flaws=this.flaws.replace(/\'/g, ' ');
this.refresh(x)}
function _setHealing(x){this.curHp=(x / 1+this.curHp);
if(this.curHp>this.maxHp){this.curHp=this.maxHp
}
this.refresh()}
function _setHitDice(x){this.hitDice=x;
this.refresh(x)}
function _setIdeals(x){this.ideals=x;
this.ideals=this.ideals.replace(/\'/g, ' ');
this.refresh(x)}
function _setImmunity(x){this.immunity=x;
this.refresh(x)}
function _setInit(x){this.init=x;
this.refresh(x)}
function _setIndex(x){this.index=x
}
function _setInitBonus(x){this.initBonus=x;
this.curIni=x;
this.refresh()}
function _setStrPro(x){this.strPro=x;
this.refresh(x)}
function _setDexPro(x){this.dexPro=x;
this.refresh(x)}
function _setConPro(x){this.conPro=x;
this.refresh(x)}
function _setIntPro(x){this.intPro=x;
this.refresh(x)}
function _setWisPro(x){this.wisPro=x;
this.refresh(x)}
function _setChaPro(x){this.chaPro=x;
this.refresh(x)}
function _setAcrobatics(x){this.acrobatics=x;
this.refresh(x)}
function _setAthletics(x){this.athletics=x;
this.refresh(x)}
function _setAnimal(x){this.animal=x;
this.refresh(x)}
function _setArcana(x){this.arcana=x;
this.refresh(x)}
function _setDeception(x){this.deception=x;
this.refresh(x)}
function _setHistory(x){this.history=x;
this.refresh(x)}
function _setInsight(x){this.insight=x;
this.refresh(x)}
function _setIntimidation(x){this.intimidation=x;
this.refresh(x)}
function _setInvestigation(x){this.investigation=x;
this.refresh(x)}

function _setMaxSlot1(x){this.maxSlot1=x;this.curSlot1=this.maxSlot1;this.refresh(x);}
function _setCurSlot1(x){this.curSlot1=x;this.refresh(x);}
function _setMaxSlot2(x){this.maxSlot2=x;this.curSlot2=this.maxSlot2;this.refresh(x);}
function _setCurSlot2(x){this.curSlot2=x;this.refresh(x);}
function _setMaxSlot3(x){this.maxSlot3=x;this.curSlot3=this.maxSlot3;this.refresh(x);}
function _setCurSlot3(x){this.curSlot3=x;this.refresh(x);}
function _setMaxSlot4(x){this.maxSlot4=x;this.curSlot4=this.maxSlot4;this.refresh(x);}
function _setCurSlot4(x){this.curSlot4=x;this.refresh(x);}
function _setMaxSlot5(x){this.maxSlot5=x;this.curSlot5=this.maxSlot5;this.refresh(x);}
function _setCurSlot5(x){this.curSlot5=x;this.refresh(x);}
function _setMaxSlot6(x){this.maxSlot6=x;this.curSlot6=this.maxSlot6;this.refresh(x);}
function _setCurSlot6(x){this.curSlot6=x;this.refresh(x);}
function _setMaxSlot7(x){this.maxSlot7=x;this.curSlot7=this.maxSlot7;this.refresh(x);}
function _setCurSlot7(x){this.curSlot7=x;this.refresh(x);}
function _setMaxSlot8(x){this.maxSlot8=x;this.curSlot8=this.maxSlot8;this.refresh(x);}
function _setCurSlot8(x){this.curSlot8=x;this.refresh(x);}
function _setMaxSlot9(x){this.maxSlot9=x;this.curSlot9=this.maxSlot9;this.refresh(x);}
function _setCurSlot9(x){this.curSlot9=x;this.refresh(x);}

function _setMedicine(x){this.medicine=x;
this.refresh(x)}
function _setNature(x){this.nature=x;
this.refresh(x)}
function _setPerception(x){this.perception=x;
this.refresh(x)}
function _setPerformance(x){this.performance=x;
this.refresh(x)}
function _setPersuasion(x){this.persuasion=x;
this.refresh(x)}
function _setReligion(x){this.religion=x;
this.refresh(x)}
function _setSleight(x){this.sleight=x;
this.refresh(x)}
function _setStealth(x){this.stealth=x;
this.refresh(x)}
function _setSurvival(x){this.survival=x;
this.refresh(x)}
function abiRoll(x)
{skillMod='+0';skillModName="no pro";
if(abi===1){abi='str';abiMod=characters[x].strMod;
if(characters[x].strPro==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].strPro==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===2){abi='dex';abiMod=characters[x].dexMod;
if(characters[x].dexPro==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].dexPro==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===3){abi='con';abiMod=characters[x].conMod;
if(characters[x].conPro==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].conPro==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===4){abi='int';abiMod=characters[x].intMod;
if(characters[x].intPro==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].intPro==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===5){abi='wis';abiMod=characters[x].wisMod;
if(characters[x].wisPro==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].wisPro==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===6){abi='cha';abiMod=characters[x].chaMod;
if(characters[x].chaPro==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].chaPro==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===7){abi='Acrobatics(dex)';abiMod=characters[x].dexMod;
if(characters[x].acrobatics==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].acrobatics==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===8){abi='Animal Handling(wis)';abiMod=characters[x].wisMod;
if(characters[x].animal==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].animal==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===9){abi='Arcana(Int)';abiMod=characters[x].intMod;
if(characters[x].arcana==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].arcana==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===10){abi='Athletics(str)';abiMod=characters[x].strMod;
if(characters[x].athletics==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].athletics==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===11){abi='Deception(cha)';abiMod=characters[x].chaMod;
if(characters[x].deception==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].deception==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===12){abi='History(Int)';abiMod=characters[x].intMod;
if(characters[x].history==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].history==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===13){abi='Insight(wis)';abiMod=characters[x].wisMod;
if(characters[x].insight==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].insight==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===14){abi='Intimidation(cha)';abiMod=characters[x].chaMod;
if(characters[x].intimidation==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].intimidation==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===15){abi='Investigation(Int)';abiMod=characters[x].intMod;
if(characters[x].investigation==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].investigation==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===16){abi='Medicine(wis)';abiMod=characters[x].wisMod;
if(characters[x].medicine==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].medicine==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===17){abi='Nature(Int)';abiMod=characters[x].intMod;
if(characters[x].nature==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].nature==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===18){abi='Perception(wis)';abiMod=characters[x].wisMod;
if(characters[x].perception==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].perception==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===19){abi='Performance(cha)';abiMod=characters[x].chaMod;
if(characters[x].performance==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].performance==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===20){abi='Persuasion(cha)';abiMod=characters[x].chaMod;
if(characters[x].persuasion==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].persuasion==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===21){abi='Religion(Int)';abiMod=characters[x].intMod;
if(characters[x].religion==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].religion==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===22){abi='Sleight of Hand(dex)';abiMod=characters[x].dexMod;
if(characters[x].sleight==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].sleight==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===23){abi='Stealth(dex)';abiMod=characters[x].dexMod;
if(characters[x].stealth==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].stealth==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
if(abi===24){abi='Survival(wis)';abiMod=characters[x].wisMod;
if(characters[x].survival==='pro'){skillMod=characters[x].pro;skillModName="pro"
}else if(characters[x].survival==='exp'){skillMod='+'+characters[x].pro*2;skillModName="exp"
}
}
D20Roll1=parseInt(rollDForm('1d20+0'));
D20NaturalRoll1=naturalRoll;
D20RollModifier1=roll;
D20Roll2=parseInt(rollDForm('1d20+0'));
D20NaturalRoll2=naturalRoll;
D20RollModifier2=roll;
abilityCheckRollTotal1=D20Roll1+parseInt(abiMod)+parseInt(skillMod)+parseInt(characters[x].sit);
abilityCheckRollTotal2=D20Roll2+parseInt(abiMod)+parseInt(skillMod)+parseInt(characters[x].sit);
AbiCheckLog=""+characters[x].name+" s<br>Ability Check<br>or Skill Check<br>or Saving Throw</td></tr><tr><td><h3>Roll 1</h3>1d20+0<br>="+D20NaturalRoll1+" natural<br>"+D20RollModifier1+" modifier<br>="+D20Roll1+"<br>"+abiMod+" "+abi+"<br>"+skillMod+" "+skillModName+"<br>"+characters[x].sit+" sit<br>="+abilityCheckRollTotal1+"</td></tr><tr><td><h3>Roll 2</h3>1d20+0<br>="+D20NaturalRoll2+" natural<br>"+D20RollModifier2+" modifier<br>="+D20Roll2+"<br>"+abiMod+" "+abi+"<br>"+skillMod+" "+skillModName+"<br>"+characters[x].sit+" sit<br>="+abilityCheckRollTotal2;
characters[x].setCombatLog(AbiCheckLog);
}
function _setInt(x){this.inte=x;
this.curInt=x;calcMod(x);
this.intMod=mod;
if(this.spellAbility==='int'){this.setSpellAbilityNumber(this.intMod)}
if(this.spellAbility==='wis'){this.setSpellAbilityNumber(this.wisMod)}
if(this.spellAbility==='cha'){this.setSpellAbilityNumber(this.chaMod)}
this.refresh()}
function _setLanguages(x){this.languages=x;
this.refresh()}
function _setMaxHp(x){this.maxHp=x;
this.curHp=x;
this.refresh()}
function _setCurHp(x){this.curHp=x;
if(this.curHp< -this.maxHp){this.curHp=-this.maxHp
}
if(this.curHp>this.maxHp){this.curHp=this.maxHp
}
this.refresh()}
function _setTempHp(x){this.tempHp=x;
this.refresh()}
function _setName(name){this.name=name;
this.refresh()}
function _setPro(x){this.pro=x;
this.refresh()}
function _setProficiencies(x){this.proficiencies=x;
this.refresh()}
function _setProficienciesRace(x){this.proficienciesRace=x;
this.trait=this.trait.replace(/\'/g, '\'');
this.refresh()}
function _setRace(x){this.race=x;
if(this.race.match(/Aasimar/)){this.setLanguages('Common, Celestial');
this.setResistance('necrotic, radiant');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait('age 60-160yrs, Humanoid, hair color red, blonde, brown, black, or silver, eye color pale white, gold, gray, or topaz, skin color pale-dark brown, emerald, gold, silver, male height 150–220 cm, female height 140–210 cm, male weight 56.2–127 kg, female weight 40.4–111 kg, homeland Prime Material, Plane, or Celestial Planes');
if(this.race.match(/Protector/)){this.setAbility('wis+1, cha+2');
this.setProficienciesRace('Healing Hands:1/1/long rest, heal self or ally lvl in hp, Light cha, Radiant Soul:,@3rd fly 30ft 1min, deal your lvl xtra radiant dmg 1tgt each turn, 1/1/long rest')}
if(this.race.match(/Scourge/)){this.setAbility('con+1, cha+2');
this.setProficienciesRace('Healing Hands:1/1/long rest, heal self or ally lvl in hp, Light cha, Radiant Consumption:,@3rd lvl, 1act,1min or bonus end, 10ft rad bright light and 10ft dim light chosen tgts take your lvl radiant dmg each turn')}
if(this.race.match(/Fallen/)){this.setAbility('str+1, cha+2');
this.setProficienciesRace('Healing Hands:1/1/long rest, heal self or ally lvl in hp, Light cha, Necrotic Shroud:,@3rd tgts 10ft-radi cha vsCha or frightened utteo your nt, deal xtra necrotic dmg to 1tgt per turn, 1min or 1 bonus end 1/1/long rest')}
}
if(this.race.match(/Bugbear/)){this.setAbility('str+2, dex+1');
this.setActionNotes('(Long-Limbed)melee atk+5ft, (Suprise atk)1/1 1tgt 1st turn+2d6 dmg');
this.setAlignment('Chaotic Evil');
this.setLanguages('Common, Goblin');
this.setProficienciesRace('Stealth+pro');
this.setResistance('');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait('16-80 yrs old('+(16+parseInt(rollDForm('1d64+0')))+'yrs old), 6ft tall+2d12in('+(6.0+(parseInt(rollDForm('2d12+0'))/12)).toFixed(1).replace('.', 'ft ')+'in), 200lbs+2d6('+(parseInt(200)+parseInt(rollDForm('2d6+0')))+'lbs)')}
if(this.race.match(/Dragonborn/))
{this.setAbility('str+2, cha+1');
this.setLanguages('Common, Draconic');
this.setResistance('Acid');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
if(this.race.match(/Dragonborn,Black/))
{this.setProficienciesRace('(Breath weapon)(Black)1d6 Acid 5x30ft-lineDC8+'+characters[targeted].spellAbility+'+pro vsDex for half')}
if(this.race.match(/Dragonborn,Blue/))
{this.setProficienciesRace('(Breath weapon)(Blue)Lightning 5x30ft-lineDC8+'+characters[targeted].spellAbility+'+pro vsDex for half')}
if(this.race.match(/Dragonborn,Brass/))
{this.setProficienciesRace('(Breath weapon)(Brass)Fire 5x30ft-lineDC8+'+characters[targeted].spellAbility+'+pro vsDex for half(Bronze)Lightning 5x30ft-lineDC8+'+characters[targeted].spellAbility+'+pro vsDex for half')}
if(this.race.match(/Dragonborn,Bronze/))
{this.setProficienciesRace('(Breath weapon)(Bronze)Lightning 5x30ft-lineDC8+'+characters[targeted].spellAbility+'+pro vsDex for half')}
if(this.race.match(/Dragonborn,Copper/))
{this.setProficienciesRace('(Breath weapon)(Copper)Acid 5x30ft-lineDC8+'+characters[targeted].spellAbility+'+pro vsDex for half')}
if(this.race.match(/Dragonborn,Gold/))
{this.setProficienciesRace('(Breath weapon)(Gold)Fire 15ft-coneDC8+'+characters[targeted].spellAbility+'+pro vsDex for half')}
if(this.race.match(/Dragonborn,Green/))
{this.setProficienciesRace('(Breath weapon)(Green)Poison 15ft-cone vsCon for half')}
if(this.race.match(/Dragonborn,Red/))
{this.setProficienciesRace('(Breath weapon)(Red)Fire 15ft-coneDC8+'+characters[targeted].spellAbility+'+pro vsDex for half(Silver)Cold 15ft-cone vsCon for half')}
if(this.race.match(/Dragonborn,Silver/))
{this.setProficienciesRace('(Breath weapon)(Silver)Cold 15ft-cone vsCon for half')}
if(this.race.match(/Dragonborn,White/))
{this.setProficienciesRace('(Breath weapon)(White)Cold 15ft-cone vsCon for half+1d6,@6th, 11th, 16th lvl, 1-80 years old, 250 lbs., 6+feet tall')}
}

if(this.race.match(/Dwarf,\sHill/)){this.setAbility('con+2, wis+1');
this.setLanguages('Common, Dwarvish');
this.setProficienciesRace('battleaxe, handaxe, light hammer, warhammer, smith or brewer or Mason Tools, (Stonecunning)History+exp re the details of stone work age and construction');
this.setResistance('(Dwarven Resilience)resist poison 1/2 dmg save vs poison@Adv');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('25ft');
this.setTrait('(Dwarven Toughness)when lvling up, hp+1hp, 1-350 years old, 150 lbs., 4-5fttall')}
if(this.race.match(/Dwarf,\sMountain/)){this.setAbility('str+2, con+2');
this.setLanguages('Common, Dwarvish');
this.setProficienciesRace('light armor, medium armor, battleaxes, handaxes, light hammers, and warhammers, smith or brewer or mason Tools, (Stonecunning)History+exp re the details of stone work age and construction');
this.setResistance('(Dwarven Resilience)resist poison 1/2 dmg save vs poison@Adv');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('25ft');
this.setTrait("50-350 yrs old("+(50+parseInt(rollDForm('1d300+0')))+"yrs old), 4ft 0in tall+2d4("+(4.0+(parseInt(rollDForm('2d4+0'))/12)).toFixed(1).replace('.', 'ft ')+"in tall, 115lbs+2d6("+(parseInt(115)+parseInt(rollDForm('2d6+0')))+"lbs)")}
if(this.race.match(/Dwarf,\sGray/)){this.setAbility('str+1');
this.setLanguages('Common, Dwarvish, Undercommon');
this.setProficienciesRace('battleaxe, handaxe, light hammer, warhammer, smith or brewer or Mason Tools, (Stonecunning)History+exp re the details of stone work age and construction, ,@3rd(EnlargeReduce)only Enlarge on self 1/1/long rest, @5th(Invisibility)no components needed/in dim light 1/1/long rest');
this.setResistance('(Duergar Resilience)save@Adv vs illusion, charm, paralysis');
this.setSenses('Darkvision 120ft');
this.setSize('Medium 5x5ft');
this.setSpeed('25ft');
this.setVulnerability('(Sunlight Sensitivity)atks and Perception @DisAdv in sunlight, 150 lbs., 4.5fttall')}
if(this.race.match(/Elf,\sDark/)){this.setAbility('dex+2, cha+1');
this.setImmunity('Sleep');
this.setLanguages('Common, Elvish');
this.setProficienciesRace('Dancing Lights(cha), ,@3rd Faerie Fire(cha), @5th Darkness(cha)1/1/long rest, rapiers, and shortswords');
this.setResistance('(Fae Ancestry)save vs charm@Adv');
this.setSenses('Darkvision 120ft, (Keen Senses)Perception+pro, (Trance)alert to danger during long and short rests');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait('(Sunlight Sensitivity)atks and Perception @DisAdv in sunlight, 1-750 years old, 5-6fttall')}
if(this.race.match(/Elf,\sHalf/)){this.setAbility('cha+2, abi+1 and abi+1');
this.setImmunity('Sleep');
this.setLanguages('Common, Elvish, and 1 language');
this.setProficienciesRace('2 skills+pro');
this.setResistance('(Fae Ancestry)save vs charm@Adv');
this.setSenses('Darkvision 60ft, (Keen Senses)Perception+pro, (Trance)alert to danger during long and short rests');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait('1-180 years old, 5-6fttall')}
if(this.race.match(/Elf,\sHigh/)){this.setAbility('dex+2, int+1');
this.setImmunity('Sleep');
this.setLanguages('Common, Elvish, and 1 language');
this.setProficienciesRace('1 Wizard Cantrip(Int), Longbows, longswords, shortbows, and shortswords');
this.setResistance('(Fae Ancestry)save vs charm@Adv');
this.setSenses('Darkvision 60ft, (Keen Senses)Perception+pro, (Trance)alert to danger during long and short rests');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait('1-750 years old, 5-6fttall')}
if(this.race.match(/Elf,\sMoon/)){this.setAbility('dex+2, int+1');
this.setImmunity('Sleep');
this.setLanguages('Common, Elvish, and 1 language');
this.setProficienciesRace('Longbows, longswords, shortbows, shortswords');
this.setResistance('(Fae Ancestry)save vs charm@Adv');
this.setSenses('Darkvision 60ft, (Keen Senses)Perception+pro, (Trance)alert to danger during long and short rests');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait('1-750 years old, 5-6fttall')}
if(this.race.match(/Elf,\sShadow/)){this.setAbility('dex+2, con+1');
this.setImmunity('Sleep');
this.setLanguages('Common, Elvish, and 1 language');
this.setProficienciesRace('Longbows, longswords, shortbows, shortswords');
this.setResistance('necrotic,@3rd resist all dmg when teleporting 1rnd 30ft bonus 1/1/long rest,(Fae Ancestry)save vs charm@Adv');
this.setSenses('Darkvision 60ft, (Keen Senses)Perception+pro, (Trance)alert to danger during rest,short rest is long rest');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait('100-750 yrs old('+(100+parseInt(rollDForm('1d650+0')))+'yrs old), 4ft 8in tall+2d8('+(4.8+(parseInt(rollDForm('2d8+0'))/12)).toFixed(1).replace('.', 'ft ')+'in), 90lbs+1d4('+(parseInt(90)+parseInt(rollDForm('1d4+0')))+'lbs)')}
if(this.race.match(/Elf,\sWood/)){this.setAbility('dex+2, int+1');
this.setImmunity('Sleep');
this.setLanguages('Common, Elvish');
this.setProficienciesRace('Longbows, longswords, shortbows, and shortswords');
this.setResistance('necrotic dmg, (Fae Ancestry)save vs charm@Adv');
this.setSenses('Darkvision 60ft, (Keen Senses)Perception+pro, (Trance)alert to danger during long and short rests');
this.setSize('Medium 5x5ft');
this.setSpeed('35ft');
this.setFeatureNotes("(Mask of the Wild)try to hide even under light cover");
this.setTrait("100-750 yrs old("+(100+parseInt(rollDForm('1d650+0')))+"yrs old), 4ft 6in tall+2d10("+(4.6+(parseInt(rollDForm('2d10+0'))/12)).toFixed(1).replace('.', 'ft ')+"in tall, 100lbs+1d4("+(parseInt(100)+parseInt(rollDForm('1d4+0')))+"lbs)")}
if(this.race.match(/Firbolg/)){this.setAbility('str+1, wis+2');
this.setAlignment('Neutral\sGood');
this.setImmunity('');
this.setLanguages('Common, Elvish, Giant');
this.setProficienciesRace('');
this.setResistance('');
this.setSenses("passive Perception "+((10+(this.wisMod/1)+(this.wisPro/1))));
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setFeatureNotes("(Firbolg Magic) wis Detect Magic, Disguise Self 1/1 short rest, (Hidden Step)bonus,invisible utso your next turn, (Powerful Build), (Speech of Beast and Leaf)vsCha to influence them");
this.setTrait("30-500yrs old("+(30+parseInt(rollDForm('1d470+0')))+"yrs old), 6ft2in tall+2d12("+(6.2+(parseInt(rollDForm('2d12+0'))/12)).toFixed(1).replace('.', 'ft')+"in tall, 175lbs+2d6("+(parseInt(175)+parseInt(rollDForm('2d6+0')))+"lbs)")}
if(this.race.match(/Gnome,\sDeep/)){this.setAbility('dex+1');
this.setLanguages('Common, Gnomish, Undercommon');
this.setProficienciesRace('Natural Illusionist(Minor Illusion(Int))');
this.setResistance('(Gnome Cunning)save vs magic@Adv');
this.setSenses('Darkvision 120ft');
this.setSize('Small 5x5ft');
this.setSpeed('25ft');
this.setTrait('(Stone Camouflage)Stealth@Adv in rocky terrain, 1-500 years old, 40 lbs., 3fttall')}
if(this.race.match(/Gnome,\sForest/)){this.setAbility('dex+1, int+2');
this.setLanguages('Common, Gnomish');
this.setProficienciesRace('Natural Illusionist(Minor Illusion(Int))');
this.setResistance('(Gnome Cunning)save vs magic@Adv');
this.setSenses('Darkvision 60ft');
this.setSize('Small 5x5ft');
this.setSpeed('25ft');
this.setTrait('(Speak with Small Beasts), 1-500 years old, 40 lbs., 3fttall')}
if(this.race.match(/Gnome,\sRock/)){this.setAbility('int+2, con+1');
this.setLanguages('Common, Gnomish');
this.setProficienciesRace('(Artifcer s Lore)History+exp regarding alchemical and magic items(Tinker)Tinker Tools+pro 1hr 10gp 1 toy AC5 1hp Clockwork Toy Fire Starter Music Box');
this.setResistance('(Gnome Cunning)save vs magic@Adv');
this.setSenses('Darkvision 60ft');
this.setSize('Small 5x5ft');
this.setSpeed('25ft');
this.setTrait('1-500 years old, 40 lbs., 3fttall')}
if(this.race.match(/Goblin/)){this.setAbility('dex+2, con+1');
this.setActionNotes('(Fury of the Small)1/1 4hr rest 1tgt deal xtra your lvl dmg, (Nimble Escape)Disengage or Hide as bonus 1/turn');
this.setAlignment('Neutral Evil');
this.setLanguages('Common, Goblin');
this.setProficienciesRace('');
this.setResistance('');
this.setSenses('Darkvision 60ft');
this.setSize('Small 5x5ft');
this.setSpeed('30ft');
this.setTrait('8-60 yrs old('+(8+parseInt(rollDForm('1d52+0')))+'yrs old), 3ft 5in tall+2d4('+(3.5+(parseInt(rollDForm('2d4+0'))/12)).toFixed(1).replace('.', 'ft ')+'in), 35lbs+1d4('+(parseInt(35)+parseInt(rollDForm('1d4+0')))+'lbs)')}
if(this.race.match(/Halfling,\sLightfoot/)){this.setAbility('dex+2, cha+1');
this.setLanguages('Common, Halfling');
this.setProficienciesRace('');
this.setResistance('(Brave)save vs fear@Adv');
this.setSenses('');
this.setSize('Small 5x5ft');
this.setSpeed('25ft');
this.setTrait('(Naturally Stealthy)can try to hide behind larger being, (Nimbleness)can move through larger being space, (Lucky)re-roll on a natural 1, 1-250 years old, 40 lbs., 3fttall')}
if(this.race.match(/Halfling,\sStout/)){this.setAbility('dex+2, con+1');
this.setLanguages('Common, Halfling');
this.setProficienciesRace('');
this.setResistance('(Stout Resilience)resist Poison, save vs poison@Adv, (Brave)save vs fear@Adv');
this.setSenses('');
this.setSize('Small 5x5ft');
this.setSpeed('25ft');
this.setTrait('(Nimbleness)can move through larger being space, (Lucky)re-roll on a natural 1, 1-250 years old, 40 lbs., 3fttall')}
if(this.race.match(/Hobgoblin/)){this.setAbility('con+2, int+1');
this.setActionNotes('(Saving Face)bonus , reroll number of allies till success 1/1, ');
this.setAlignment('Lawful Evil');
this.setLanguages('Common, Goblin');
this.setProficienciesRace('2wpns, light armor');
this.setResistance('');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait('15-100 yrs old('+(15+parseInt(rollDForm('1d100+0')))+'yrs old), 4ft 8in tall+2d10('+(4.8+(parseInt(rollDForm('2d10+0'))/12)).toFixed(1).replace('.', 'ft ')+'in), 110lbs+2d4('+(parseInt(110)+parseInt(rollDForm('2d4+0')))+'lbs)')}
if(this.race.match(/Human/)){this.setAbility('abi+1 and abi+1');
this.setLanguages('Common, and 1 language');
this.setProficienciesRace('1 more skill, 1 more feat');
this.setResistance('');
this.setSenses('');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait("15-80 yrs old("+(15+parseInt(rollDForm('1d65+0')))+"yrs old), 4ft 8in tall+2d10("+(4.8+(parseInt(rollDForm('2d10+0'))/12)).toFixed(1).replace('.', 'ft ')+"in tall, 110lbs+2d4("+(parseInt(110)+parseInt(rollDForm('2d4+0')))+"lbs)")}
if(this.race.match(/Kenku/))
{this.setAbility('dex+2, wis+1');
this.setActionNotes('(Expert Forgery)duplicate items@Adv,(Mimicry)imitate sounds,Deception+cha vsWis ');
this.setAlignment('Chaotic');
this.setLanguages('read,write Auran,mimic languages');
this.setProficienciesRace('2 from Acrobatics, Deception, Stealth or Slight of Hand');
this.setResistance('');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait('12-60 yrs old('+(12+parseInt(rollDForm('1d48+0')))+'yrs old), 4ft4in tall+2d8('+(4.4+(parseInt(rollDForm('2d8+0'))/12)).toFixed(1).replace('.', 'ft ')+'in), 50lbs+1d6('+(parseInt(50)+parseInt(rollDForm('1d6+0')))+'lbs)')}

if(this.race.match(/Kobold/)){this.setAbility('str+2, dex+2');
this.setActionNotes('(Grovel Cower and Beg)10ft 1 act 1/1 short rest allies atk@Adv till end of your next turn, (Pack Tactics)woke ally 5ft you atk@Adv');
this.setAlignment('Lawful');
this.setLanguages('Common, Draconic');
this.setProficienciesRace('');
this.setResistance('');
this.setSenses('Darkvision 60ft');
this.setSize('Small 5x5ft');
this.setSpeed('30ft');
this.setTrait('6-120 yrs old('+(6+parseInt(rollDForm('1d114+0')))+'yrs old), 2ft 1in tall+2d4('+(2.1+(parseInt(rollDForm('2d4+0'))/12)).toFixed(1).replace('.', 'ft ')+'in), 25lbs+1d4('+(parseInt(25)+parseInt(rollDForm('1d4+0')))+'lbs)')}
if(this.race.match(/Orc/)){this.setAbility('str+2, con+1');
this.setActionNotes('(Aggressive)bonus xtra move toward enemy');
this.setAlignment('Chaotic Evil');
this.setLanguages('Common, Orc');
this.setProficienciesRace('Intimidation+pro');
this.setResistance('');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait('12-50 yrs old('+(12+parseInt(rollDForm('1d38+0')))+'yrs old), 5ft 4in tall+2d8('+(5.4+(parseInt(rollDForm('2d8+0'))/12)).toFixed(1).replace('.', 'ft ')+'in), 175lbs+2d6('+(parseInt(175)+parseInt(rollDForm('2d6+0')))+'lbs)')}
if(this.race.match(/Orc,\sHalf/)){this.setAbility('str+2, con+1');
this.setLanguages('Common, Orc');
this.setProficienciesRace('Intimidation+pro');
this.setResistance('');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait('(Relentless Endurance)1/1/long rest, 0hp is 1hp, (Menacing)Intimidation+pro, (Savage atks)crit dmg+1d, 1-75 years old, 6+feet tall')}
if(this.race.match(/Satyr/)){this.setAbility('dex+1, cha+2');
this.setDamageConditions('immune to Charm Person');
this.setLanguages('Common, Sylvan');
this.setProficienciesRace('Ram 1d4+str+pro, Mirthful Leaps long jump+1d8ft, Performance+pro, Persuasion+pro, Musical Instrument+pro, @1st Vicious Mockery+cha ,@3rd Entangle+cha, @5th Suggestion+cha 1/1/long rest resets');
this.setResistance('resists magic@Adv');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('35ft');
this.setTrait(15+rollDForm('1d75+0')+' or 1-90 years old, '+(3+rollDForm('1d2+0'))+'ft or 4-5ft tall, '+(100+rollDForm('1d50+0'))+'lbs or 100-150lbs')}
if(this.race.match(/Tabaxi/)){this.setAbility('dex+2, cha+1');
this.setActionNotes('(Feline Agility)mv0 1turn, mv2Xspeed 1turn(Cats Claws)climb20ft, 1d4+strSlashing');
this.setLanguages('Common, 1 language');
this.setProficienciesRace('Perception+pro, Stealth+pro');
this.setResistance('');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait("15-100yrs old("+(15+rollDForm('1d85+0'))+'yrs old), 4ft10in+2d10in('+(4.10+(parseInt(rollDForm('2d10+0'))/12)).toFixed(1).replace('.', 'ft ')+'in), 90lbs+2d4lbs('+(90+rollDForm('2d4+0'))+'lbs)');
}

if(this.race.match(/Asmodeus/))
{this.setAbility('int+1, cha+2');
this.setFeatures('@1st(Infernal Legacy)<b onClick=Thaumaturgy()>Thaumaturgy</b>, ,@3rd <b onClick=HellishRebuke()>HellishRebuke</b>1/1 long rest, @5th <b onClick=Darkness()>Darkness</b>1/1 long rest, cha spell ability)'+this.features);
}

if(this.race.match(/Baalzebul/))
{this.setAbility('int+1, cha+2');
this.setFeatures('@1st(Legacy of Maladomini)<b onClick=Thaumaturgy()>Thaumaturgy</b>, ,@3rd <b onClick=RayOfSickness()>RayOfSickness</b>1/1 long rest, @5th <b onClick=CrownOfMadness()>CrownOfMadness</b>1/1 long rest, cha spell ability)'+this.features);
}

if(this.race.match(/Dispater/))
{this.setAbility('dex+1, cha+2');
this.setFeatures('@1st(Legacy of Dis)<b onClick=Thaumaturgy()>Thaumaturgy</b>, ,@3rd <b onClick=DisguiseSelf()>DisguiseSelf</b>1/1 long rest, @5th <b onClick=DetectThoughts()>DetectThoughts</b>1/1 long rest, cha spell ability)'+this.features);
}

if(this.race.match(/Fierna/))
{this.setAbility('wis+1, cha+2');
this.setFeatures('@1st(Legacy of Phlegethos)<b onClick=Friends()>Friends</b>, ,@3rd <b onClick=CharmPerson()>CharmPerson</b>1/1 long rest, @5th <b onClick=Suggestion()>Suggestion</b>1/1 long rest, cha spell ability)'+this.features);
}

if(this.race.match(/Glasya/))
{this.setAbility('dex+1, cha+2');
this.setFeatures('@1st(Legacy of Malbolge)<b onClick=MinorIllusion()>MinorIllusion</b>, ,@3rd <b onClick=DisguiseSelf()>DisguiseSelf</b>1/1 long rest, @5th <b onClick=Invisibility()>Invisibility</b>1/1 long rest, cha spell ability)'+this.features);
}

if(this.race.match(/Levistus/))
{this.setAbility('con+1, cha+2');
this.setFeatures('(Legacy of Stygia)@1st <b onClick=RayOfFrost()>RayOfFrost</b>, ,@3rd <b onClick=ArmorOfAgathys()>ArmorOfAgathys</b>, @5th <b onClick=Darkness()>Darkness</b>1/1 long rest, cha spell ability)'+this.features);
}

if(this.race.match(/Mammon/))
{this.setAbility('int+1, cha+2');
this.setFeatures('@1st(Legacy of Minauros) <b onClick=MageHand()>MageHand</b>, ,@3rd <b onClick=TensersFloatingDisk()>TensersFloatingDisk</b>, @5th <b onClick=ArcaneLock()>ArcaneLock</b>1/1 long rest, cha spell ability)'+this.features);
}

if(this.race.match(/Mephistopheles/))
{this.setAbility('int+1, cha+2');
this.setLanguages('Common, Infernal');
this.setFeatures('Mage Hand, ,@3rd Burning Hands, @5th Flame Blade 1/1 short rest');
this.setFeatures('@1st(Legacy of Cania) <b onClick=MageHand()>MageHand</b>, ,@3rd <b onClick=BurningHand()>BurningHand</b>1/1 long rest, @5th <b onClick=FlameBlade()>FlameBlade</b>1/1 long rest, cha spell ability)'+this.features);
}

if(this.race.match(/Zariel/))
{this.setAbility('str+1, cha+2');
this.setFeatures('@1st <b onClick=Thaumaturgy()>Thaumaturgy</b>, ,@3rd <b onClick=SearingSmite()>SearingSmite</b>, @5th <b onClick=BrandingSmite()>BrandingSmite</b>1/1 long rest, cha spell ability)'+this.features);
}

if(this.race.match(/Tiefling/))
{this.setLanguages('Common, Infernal');
this.setProficienciesRace('');
this.setResistance('Fire');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setTrait("15-100yrs old("+(15+rollDForm('1d85+0'))+'yrs old), 4.9+2d8('+(4.9+(parseInt(rollDForm('2d8+0'))/12)).toFixed(1).replace('.', 'ft ')+'in), 110+2d4lbs('+(110+rollDForm('2d4+0'))+'lbs')+")";
}

if(this.race.match(/Yuan-Ti/)){this.setAbility('int+1, cha+2');
this.setActionNotes('(Innate Spellcasting)Animal Friendship(snakes), Poison Spray unlimited, ,@3rd Suggestion(snakes)');AnimalFriendship();PoisonSpray();
this.setAlignment('Neutral Evil');
this.setDamageConditions('immune to poison');
this.setImmunity('poison')
this.setLanguages('Abyssal, Common, Draconic');
this.setProficienciesRace('');
this.setResistance('save vs magic@Adv');
this.setSenses('Darkvision 60ft');
this.setSize('Medium 5x5ft');
this.setSpeed('30ft');
this.setSpellAbility('cha');
this.setTrait('15-80 yrs old('+(15+parseInt(rollDForm('1d65+0')))+'yrs old), 4ft 8in tall+2d10('+(4.8+(parseInt(rollDForm('2d10+0'))/12)).toFixed(1).replace('.', 'ft ')+'in), 110lbs+2d4('+(parseInt(110)+parseInt(rollDForm('2d4+0')))+'lbs)')}
this.refresh()}
function _setResistance(x){this.resistance=x;
this.refresh()}
function _setResults(x){this.results=x;
this.refresh()}
function _setRollName1(x){this.rollName1=x;
this.refresh()}
function _setRoll1(x){this.roll1=x;
this.refresh()}
function _setRollName2(x){this.rollName2=x;
this.refresh()}
function _setRoll2(x){this.roll2=x;
this.refresh()}
function _setSaving(x){this.saving=x;
this.refresh()}
function _setSenses(x){this.senses=x;
this.refresh()}
function _setShield(x){this.shield=x;
this.refresh()}
function _setSpeed(x){this.speed=x;
this.refresh()}
function _setSpellAbility(x){this.spellAbility=x;
if(x==='int'){this.setSpellAbilityNumber(this.intMod)}
if(x==='wis'){this.setSpellAbilityNumber(this.wisMod)}
if(x==='cha'){this.setSpellAbilityNumber(this.chaMod)}
this.refresh()}
function _setSpellAbilityNumber(x){this.spellAbilityNumber=x;
this.refresh()}
function _setSit(x){this.sit=x;
if(this.sit===''){this.sit='+0'
}
this.refresh()}
function _setSize(x){this.size=x;
if(this.size.match(/Tiny/)){this.carryingCapacity=((this.curStr / 1)*15)/ 2;
this.dragLiftPush=((this.curStr / 1)*30)/ 2;
this.highJump=Math.floor(((this.strMod / 1)+3)/ 2);
this.longJump=Math.floor((this.curStr / 1)/ 2)}
if(this.size.match(/Small|Medium/)){this.carryingCapacity=(this.curStr / 1)*15;
this.dragLiftPush=(this.curStr / 1)*30;
this.highJump=Math.floor((this.strMod / 1)+3);
this.longJump=Math.floor(this.curStr / 1)}
if(this.size.match(/Large/)){this.carryingCapacity=((this.curStr / 1)*15)*2;
this.dragLiftPush=((this.curStr / 1)*30)*2;
this.highJump=Math.floor(((this.strMod / 1)+3)*2);
this.longJump=Math.floor((this.curStr / 1)*2)}
if(this.size.match(/Huge/)){this.carryingCapacity=((this.curStr / 1)*15)*4;
this.dragLiftPush=((this.curStr / 1)*30)*4;
this.highJump=Math.floor(((this.strMod / 1)+3)*4);
this.longJump=Math.floor((this.curStr / 1)*4)}
if(this.size.match(/Gargantuan/)){this.carryingCapacity=((this.curStr / 1)*15)*6;
this.dragLiftPush=((this.curStr / 1)*30)*6;
this.highJump=Math.floor(((this.strMod / 1)+3)*6);
this.longJump=Math.floor((this.curStr / 1)*6)}
this.refresh()}
function _setSkills(x){this.skills=x;
this.refresh()}
function _setStr(x){this.str=x;
this.curStr=x;calcMod(x);
this.strMod=mod;
if(this.size.match(/Tiny/)){this.carryingCapacity=((this.curStr / 1)*15)/ 2;
this.dragLiftPush=((this.curStr / 1)*30)/ 2;
this.highJump=Math.floor(((this.strMod / 1)+3)/ 2);
this.longJump=Math.floor((this.curStr / 1)/ 2)}
if(this.size.match(/Small|Medium/)){this.carryingCapacity=(this.curStr / 1)*15;
this.dragLiftPush=(this.curStr / 1)*30;
this.highJump=Math.floor((this.strMod / 1)+3);
this.longJump=Math.floor(this.curStr / 1)}
if(this.size.match(/Large/)){this.carryingCapacity=((this.curStr / 1)*15)*2;
this.dragLiftPush=((this.curStr / 1)*30)*2;
this.highJump=Math.floor(((this.strMod / 1)+3)*2);
this.longJump=Math.floor((this.curStr / 1)*2)}
if(this.size.match(/Huge/)){this.carryingCapacity=((this.curStr / 1)*15)*4;
this.dragLiftPush=((this.curStr / 1)*30)*4;
this.highJump=Math.floor(((this.strMod / 1)+3)*4);
this.longJump=Math.floor((this.curStr / 1)*4)}
if(this.size.match(/Gargantuan/)){this.carryingCapacity=((this.curStr / 1)*15)*6;
this.dragLiftPush=((this.curStr / 1)*30)*6;
this.highJump=Math.floor(((this.strMod / 1)+3)*6);
this.longJump=Math.floor((this.curStr / 1)*6)}
this.refresh()}
function _setStyle(att, style){eval("document.getElementById(this.elementId).style."+att+"=\""+style+"\"")}
function _setToggled1(x){this.toggled1=x;
this.refresh()}
function _setToggled2(x){this.toggled2=x;
this.refresh()}
function _setToggled3(x){this.toggled3=x;
this.refresh()}
function _setToggled4(x){this.toggled4=x;
this.refresh()}
function _setToggled5(x){this.toggled5=x;
this.refresh()}
function _setToggled6(x){this.toggled6=x;
this.refresh()}
function _setTrait(x){this.trait=x;
this.trait=this.trait.replace(/\'/g, '\'');
this.refresh()}
function _setVulnerability(x){this.vulnerability=x;
this.refresh()}
function _updateXY(){this.x=document.getElementById(this.box.elementId).style.left;
this.y=document.getElementById(this.box.elementId).style.top
}
function _setWis(x){this.wis=x;
this.curWis=x;calcMod(x);
this.wisMod=mod;
if(this.spellAbility==='int'){this.setSpellAbilityNumber(this.intMod)}
if(this.spellAbility==='wis'){this.setSpellAbilityNumber(this.wisMod)}
if(this.spellAbility==='cha'){this.setSpellAbilityNumber(this.chaMod)}
this.refresh()}
function _setX(x){this.x=x;
this.putAt(x, this.y)}
function _setY(y){this.y=y;
this.putAt(this.x, y)}
function _show(){document.getElementById(this.elementId).style.visibility="visible"
}
function _showBox(){this.box.show()}
function _showMenu(){this.menu.show();
this.menuShown=true
}
function add(character){x=characters.length;
character.setIndex(x);
characters[x]=character;
characters[x].refresh();
characters[x].show();
SET_DHTML(character.box.elementId)}
function addRollPrompt(x)
{characters[x].addRoll(characters[x].rollName1,dFormParse(characters[x].roll1),characters[x].rollName2,dFormParse(characters[x].roll2));

checkTheTarget(characters[targeted]);
}
function askInit(x){initRoll=characters[x].rollInit();
characters[x].setInit(initRoll)}
function calcMod(x){mod=Math.floor((x - 10)/ 2);
if(mod> -1){mod="+"+mod
}return mod
}
function Character(name, type){this.abi=0;

this. dmgConditions='';
this.ability='';
this.ac=0;
this.acrobatics='';
this.actionNotes='';
this.addRoll=_addRoll;
this.alignment='Unaligned';
this.alignmentDescription='';
this.animal='';
this.arcana='';
this.armor='No Armor AC10+dex';
this.athletics='';
this.backF='';
this.backL='';
this.backS='';
this.backT='';
this.background='';
this.bonds='';
this.box=new AGEElement();
this.carryingCapacity=0;
this.cha=0;
this.chaMod='+0';
this.chaPro='';
this.class='';
this.combatLog="";
this.con=0;
this.conMod='+0';
this.conPro='';
this.curAc=0;
this.curCha=0;
this.curCon=0;
this.curDex=0;
this.curHp=0;
this.curIni='+0';
this.curInt=0;
this.curSlot1=this.maxSlot1;
this.curSlot2=this.maxSlot1;
this.curSlot3=this.maxSlot3;
this.curSlot4=this.maxSlot4;
this.curSlot4=this.maxSlot4;
this.curSlot5=this.maxSlot5;
this.curSlot6=this.maxSlot6;
this.curSlot7=this.maxSlot7;
this.curSlot8=this.maxSlot8;
this.curSlot9=this.maxSlot9;
this.curStr=0;
this.curWis=0;
this.deception='';
this.deleteRoll=_deleteRoll;
this.dex=0;
this.dexMod='+0';
this.dexPro='';
this.dragLiftPush=0;
this.equipment='';
this.experience='';
this.feats='';
this.featureNotes='';
this.features='';
this.figure='Miniatures/Monster.png';
this.flaws='';
this.getSaveText=_getSaveText;
this.hide=_hide;
this.hideMenu=_hideMenu;
this.highJump=0;
this.history='';
this.hitDice='';
this.ideals='';
this.immunity='';
this.index=null;
this.init="Unrolled";
this.initBonus='+0';
this.insight='';
this.intMod='+0';
this.intPro='';
this.inte=0;
this.intimidation='';
this.investigation='';
this.languages='';
this.longJump=0;
this.lvl=0;
this.maxHp=0;
this.maxSlot1=0;
this.maxSlot2=0;
this.maxSlot3=0;
this.maxSlot4=0;
this.maxSlot4=0;
this.maxSlot5=0;
this.maxSlot6=0;
this.maxSlot7=0;
this.maxSlot8=0;
this.maxSlot9=0;
this.medicine='';
this.menu=new AGEElement();
this.menuShown=false;
this.name=name;
this.nature='';
this.perception='';
this.performance='';
this.persuasion='';
this.pro='+0';
this.proficiencies='';
this.proficienciesRace='';
this.putAt=_putCharAt;
this.race='';
this.rageDamage=0;
this.refresh=_ref;
this.religion='';
this.resistance='';
this.results="";
this.roll1='';
this.roll2='';
this.rollInit=_rollInit;
this.rollName1='';
this.rollName2='';
this.rollNames2=new Array();
this.rollNames=new Array();
this.rollStuff='';
this.rolls2=new Array();
this.rolls=new Array();
this.save=_save;
this.saving='';
this.senses='';
this.setAC=_setAC;
this.setAbility=_setAbility;
this.setAcrobatics=_setAcrobatics;
this.setActionNotes=_setActionNotes;
this.setAlignment=_setAlignment;
this.setAlignmentDescription=_setAlignmentDescription;
this.setAnimal=_setAnimal;
this.setArcana=_setArcana;
this.setArmor=_setArmor;
this.setAthletics=_setAthletics;
this.setBackF=_setBackF;
this.setBackL=_setBackL;
this.setBackS=_setBackS;
this.setBackT=_setBackT;
this.setBackground=_setBackground;
this.setBonds=_setBonds;
this.setCha=_setCha;
this.setChaPro=_setChaPro;
this.setClass=_setClass;
this.setCombatLog=_setCombatLog;
this.setCon=_setCon;
this.setConPro=_setConPro;
this.setCurAc=_setCurAc;
this.setCurCha=_setCurCha;
this.setCurCon=_setCurCon;
this.setCurDex=_setCurDex;
this.setCurHp=_setCurHp;
this.setCurIni=_setCurIni;
this.setCurInt=_setCurInt;
this.setCurSlot1=_setCurSlot1;
this.setCurSlot2=_setCurSlot2;
this.setCurSlot3=_setCurSlot3;
this.setCurSlot4=_setCurSlot4;
this.setCurSlot4=_setCurSlot4;
this.setCurSlot5=_setCurSlot5;
this.setCurSlot6=_setCurSlot6;
this.setCurSlot7=_setCurSlot7;
this.setCurSlot8=_setCurSlot8;
this.setCurSlot9=_setCurSlot9;
this.setCurStr=_setCurStr;
this.setCurWis=_setCurWis;
this.setDamageConditions=_setDamageConditions;
this.setDeception=_setDeception;
this.setDex=_setDex;
this.setDexPro=_setDexPro;
this.setDmg=_setDmg;
this.setEquipment=_setEquipment;
this.setExperience=_setExperience;
this.setFeats=_setFeats;
this.setFeatureNotes=_setFeatureNotes;
this.setFeatures=_setFeatures;
this.setFigure=_setFigure;
this.setFlaws=_setFlaws;
this.setHealing=_setHealing;
this.setHistory=_setHistory;
this.setHitDice=_setHitDice;
this.setIdeals=_setIdeals;
this.setImmunity=_setImmunity;
this.setIndex=_setIndex;
this.setInit=_setInit;
this.setInitBonus=_setInitBonus;
this.setInsight=_setInsight;
this.setInt=_setInt;
this.setIntPro=_setIntPro;
this.setIntimidation=_setIntimidation;
this.setInvestigation=_setInvestigation;
this.setLanguages=_setLanguages;
this.setLvl=_setLvl;
this.setMaxHp=_setMaxHp;
this.setMaxSlot1=_setMaxSlot1;
this.setMaxSlot2=_setMaxSlot2;
this.setMaxSlot3=_setMaxSlot3;
this.setMaxSlot4=_setMaxSlot4;
this.setMaxSlot4=_setMaxSlot4;
this.setMaxSlot5=_setMaxSlot5;
this.setMaxSlot6=_setMaxSlot6;
this.setMaxSlot7=_setMaxSlot7;
this.setMaxSlot8=_setMaxSlot8;
this.setMaxSlot9=_setMaxSlot9;
this.setMedicine=_setMedicine;
this.setName=_setName;
this.setNature=_setNature;
this.setPerception=_setPerception;
this.setPerformance=_setPerformance;
this.setPersuasion=_setPersuasion;
this.setPro=_setPro;
this.setProficiencies=_setProficiencies;
this.setProficienciesRace=_setProficienciesRace;
this.setRace=_setRace;
this.setReligion=_setReligion;
this.setResistance=_setResistance;
this.setResults=_setResults;
this.setRoll1=_setRoll1;
this.setRoll2=_setRoll2;
this.setRollName1=_setRollName1;
this.setRollName2=_setRollName2;
this.setSaving=_setSaving;
this.setSenses=_setSenses;
this.setShield=_setShield;
this.setSit=_setSit;
this.setSize=_setSize;
this.setSkills=_setSkills;
this.setSleight=_setSleight;
this.setSpeed=_setSpeed;
this.setSpellAbility=_setSpellAbility;
this.setSpellAbilityNumber=_setSpellAbilityNumber;
this.setStealth=_setStealth;
this.setStr=_setStr;
this.setStrPro=_setStrPro;
this.setSurvival=_setSurvival;
this.setTempHp=_setTempHp;
this.setToggled1=_setToggled1;
this.setToggled2=_setToggled2;
this.setToggled3=_setToggled3;
this.setToggled4=_setToggled4;
this.setToggled5=_setToggled5;
this.setToggled6=_setToggled6;
this.setTrait=_setTrait;
this.setVulnerability=_setVulnerability;
this.setWis=_setWis;
this.setWisPro=_setWisPro;
this.shield='No Shield AC+0';
this.show=_showBox;
this.showMenu=_showMenu;
this.sit='+0';
this.size='';
this.skills='';
this.sleight='';
this.speed='';
this.spellAbility='';
this.spellAbilityNumber='+0';
this.stealth='';
this.str=0;
this.strMod='+0';
this.strPro='';
this.survival='';
this.tempHp=0;
this.toggled1="none";
this.toggled2="none";
this.toggled3="none";
this.toggled4="block";
this.toggled5="none";
this.toggled6="none";
this.trait='';
this.type=type;
this.updateXY=_updateXY;
this.vulnerability='';
this.wis=0;
this.wisMod='+0';
this.wisPro='';
this.x=0;
this.xtraRolls=new Array(0);
this.y=0;
this.refresh();
}
function makeRoll(x, i)
{dmgRoll1=rollDForm(characters[x].rolls2[i])
dmgNaturalRoll1=naturalRoll;
dmgModifier1=roll;
dmgRoll2=rollDForm(characters[x].rolls2[i])
dmgNaturalRoll2=naturalRoll;
dmgModifier2=roll;
//Healing Rolls
if(characters[x].rollNames2[i].match(/heal/)){healingRollTotal1=dmgRoll1+parseInt(characters[x].spellAbilityNumber);
healingRollTotal2=dmgRoll2+parseInt(characters[x].spellAbilityNumber);
theDamageConditions=characters[x].dmgConditions+characters[x].rollNames2[i];
healRollLog=characters[x].name+"<p>is healing<p>"+characters[targeted].name+"</td></tr><tr><td>"+characters[x].rollNames2[i]+"<br><input onClick='characters[targeted].setDamageConditions(theDamageConditions);checkTheTarget()' type='button' value='Assign this condition?'></td></tr><tr><td><h3>Heal 1</h3>"+characters[x].rolls2[i]+"<br>="+dmgNaturalRoll1+" natural<br>"+dmgModifier1+" modifier<br>="+dmgRoll1+"<br>"+characters[x].spellAbilityNumber+" spell abi<br>="+healingRollTotal1+"<br><input onClick='characters[targeted].setCurHp(characters[targeted].curHp+healingRollTotal1);checkTheTarget()' type='button' value=Heal?></td></tr><tr><td><h3>Heal 2</h3>"+characters[x].rolls2[i]+"<br>="+dmgNaturalRoll2+" natural<br>"+dmgModifier2+" modifier<br>="+dmgRoll2+"<br>"+characters[x].spellAbilityNumber+" spell abi<br>="+healingRollTotal2+"<br><input onClick='characters[targeted].setCurHp(characters[targeted].curHp+healingRollTotal2);checkTheTarget()' type='button' value=Heal?>";
characters[x].setCombatLog(healRollLog);
}else
{abi='abi';
abiMod='+0';
if(characters[x].rollNames[i].match(/\+str/)){abi='str';
abiMod=characters[x].strMod
}
if(characters[x].rollNames[i].match(/\+dex/)){abi='dex';
abiMod=characters[x].dexMod
}
if(characters[x].rollNames[i].match(/\+con/)){abi='con';
abiMod=characters[x].conMod
}
if(characters[x].rollNames[i].match(/\+int/)){abi='int';
abiMod=characters[x].intMod
}
if(characters[x].rollNames[i].match(/\+wis/)){abi='wis';
abiMod=characters[x].wisMod
}
if(characters[x].rollNames[i].match(/\+cha/)){abi='cha';
abiMod=characters[x].chaMod
}
skillMod='+0';
skillModName='no pro'
if(characters[x].rollNames[i].match(/\+pro/)){skillMod=characters[x].pro;skillModName='pro'
}
if(characters[x].rollNames[i].match(/\+exp/)){skillMod=parseInt(characters[x].pro)*2;
if(skillMod> -1){skillMod='+'+skillMod
}skillModName='exp';
}
//Dmg Rolls
dmgRoll1=parseInt(rollDForm(characters[x].rolls2[i]));
dmgNaturalRoll1=naturalRoll;
dmgRollModifier1=roll;
dmgRoll2=parseInt(rollDForm(characters[x].rolls2[i]));
dmgNaturalRoll2=naturalRoll;
dmgRollModifier2=roll;
dmgRollTotal1=dmgRoll1+parseInt(abiMod);
dmgRollTotal2=dmgRoll2+parseInt(abiMod);
dmgRollTotal3=dmgRoll2;
theDamageConditions=characters[x].dmgConditions+characters[x].rollNames2[i];
dmgRollLog="</td></tr><tr><td>"+characters[targeted].name+"<br>has resistances: "+characters[targeted].resistance+"<br>has immunities: "+characters[targeted].immunity+"<br>has vulnerabilities: "+characters[targeted].vulnerability+"<p>versus<p>"+characters[x].rollNames2[i]+"<br><input onClick='characters[targeted].setDamageConditions(theDamageConditions);checkTheTarget()' type='button' value='Assign this dmg condition?'></td></tr><tr><td><h3>Dmg 1</h3>"+characters[x].rolls2[i]+"<br>="+dmgNaturalRoll1+" natural<br>"+dmgRollModifier1+" modifier<br>="+dmgRoll1+"<br>"+abiMod+" "+abi+"<br>="+dmgRollTotal1+"<br><input onClick='characters[targeted].setCurHp(characters[targeted].curHp-dmgRollTotal1);checkTheTarget()' type='button' value=Dmg?><br><input onClick='characters[targeted].setCurHp(Math.floor(characters[targeted].curHp-(parseInt(dmgRollTotal1/2))));checkTheTarget()' type='button' value='1/2 Dmg?'></td></tr><tr><td><h3>Dmg 2 w/ abiMod</h3>"+characters[x].rolls2[i]+"<br>="+dmgNaturalRoll2+" natural<br>"+dmgRollModifier2+" modifier<br>="+dmgRoll2+"<br>"+abiMod+" "+abi+"<br>="+dmgRollTotal2+"<br><input onClick='characters[targeted].setCurHp(characters[targeted].curHp-dmgRollTotal1);checkTheTarget()' type='button' value=Dmg?><br><input onClick='characters[targeted].setCurHp(Math.floor(characters[targeted].curHp-(parseInt(dmgRollTotal1/2))));checkTheTarget()' type='button' value='1/2 Dmg?'></td></tr><tr><td><h3>Dmg 2 w/o abiMod</h3>"+characters[x].rolls2[i]+"<br>="+dmgNaturalRoll2+" natural<br>"+dmgRollModifier2+" modifier<br>="+dmgRoll2+"<br>+0 no abi 2nd dmg<br>="+dmgRollTotal3+"<br><input onClick='characters[targeted].setCurHp(characters[targeted].curHp-dmgRollTotal1);checkTheTarget()' type='button' value=Dmg?><br><input onClick='characters[targeted].setCurHp(Math.floor(characters[targeted].curHp-(parseInt(dmgRollTotal1/2))));checkTheTarget()' type='button' value='1/2 Dmg?'>";
//DC Save Rolls
if(characters[x].rollNames[i].match(/DC\d{1,2}/gi)){roll1=8;
dcTotal=roll1+abiMod / 1+characters[x].pro / 1 ;
DCSaveLog=characters[x].name+"<br>"+characters[x].rollNames[i]+"<p>DC8<br>"+abiMod+" "+abi+"<br>"+characters[x].pro+" pro<br>="+dcTotal+"<p>vs<p>";
if(characters[x].rollNames[i].match(/vsStr/gi)){modName="str"
saveMod=characters[targeted].strMod
if(characters[targeted].strPro==='pro'){savePro=characters[targeted].pro;saveProName="pro"
}else if(characters[targeted].strPro==='exp'){savePro=characters[targeted].pro*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsDex/gi)){modName="dex"
saveMod=characters[targeted].dexMod
if(characters[targeted].dexPro==='pro'){savePro=characters[targeted].pro;saveProName="pro"
}else if(characters[targeted].dexPro==='exp'){savePro=characters[targeted].pro*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsCon/gi)){modName="con"
saveMod=characters[targeted].conMod
if(characters[targeted].conPro==='pro'){savePro=characters[targeted].pro;saveProName="pro"
}else if(characters[targeted].conPro==='exp'){savePro=characters[targeted].pro*2;saveProName="exp"
}
}if(characters[x].rollNames[i].match(/vsInt/gi)){modName="int"
saveMod=characters[targeted].intMod
if(characters[targeted].intPro==='pro'){savePro=characters[targeted].pro;saveProName="pro"
}else if(characters[targeted].intPro==='exp'){savePro=characters[targeted].pro*2;saveProName="exp"
}
}if(characters[x].rollNames[i].match(/vsWis/gi)){modName="wis"
saveMod=characters[targeted].wisMod
if(characters[targeted].wisPro==='pro'){savePro=characters[targeted].pro;saveProName="pro"
}else if(characters[targeted].wisPro==='exp'){savePro=characters[targeted].pro*2;saveProName="exp"
}
}if(characters[x].rollNames[i].match(/vsCha/gi)){modName="cha"
saveMod=characters[targeted].chaMod
if(characters[targeted].chaPro==='pro'){savePro=characters[targeted].pro;saveProName="pro"
}else if(characters[targeted].chaPro==='exp'){savePro=characters[targeted].pro*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsAthletics/gi)){modName="str"
saveMod=characters[targeted].strMod;
savePro=0;
saveProName="pro";
if(characters[targeted].athletics==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].athletics==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsAcrobatics/gi)){modName="dex"
saveMod=characters[targeted].dexMod;
savePro=0;
saveProName="pro";
if(characters[targeted].acrobatics==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].acrobatics==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsSleightOfHand/gi)){modName="dex"
saveMod=characters[targeted].dexMod;
savePro=0;
saveProName="pro";
if(characters[targeted].sleight==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].sleight==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsStealth/gi)){modName="dex"
saveMod=characters[targeted].dexMod;
savePro=0;
saveProName="pro";
if(characters[targeted].stealth==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].stealth==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsArcana/gi)){modName="int"
saveMod=characters[targeted].intMod;
savePro=0;
saveProName="pro";
if(characters[targeted].arcana==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].arcana==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsHistory/gi)){modName="int"
saveMod=characters[targeted].intMod;
savePro=0;
saveProName="pro";
if(characters[targeted].history==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].history==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsInvestigation/gi)){modName="int"
saveMod=characters[targeted].intMod;
savePro=0;
saveProName="pro";
if(characters[targeted].investigation==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].investigation==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsNature/gi)){modName="int"
saveMod=characters[targeted].intMod;
savePro=0;
saveProName="pro";
if(characters[targeted].nature==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].nature==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsReligion/gi)){modName="int"
saveMod=characters[targeted].intMod;
savePro=0;
saveProName="pro";
if(characters[targeted].religion==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].religion==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsAnimal/gi)){modName="wis"
saveMod=characters[targeted].wisMod;
savePro=0;
saveProName="pro";
if(characters[targeted].animal==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].animal==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsInsight/gi)){modName="wis"
saveMod=characters[targeted].wisMod;
savePro=0;
saveProName="pro";
if(characters[targeted].insight==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].insight==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsMedicine/gi)){modName="wis"
saveMod=characters[targeted].wisMod;
savePro=0;
saveProName="pro";
if(characters[targeted].medicine==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].medicine==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsPerception/gi)){modName="wis"
saveMod=characters[targeted].wisMod;
savePro=0;
saveProName="pro";
if(characters[targeted].perception==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].perception==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsSurvival/gi)){modName="wis"
saveMod=characters[targeted].wisMod;
savePro=0;
saveProName="pro";
if(characters[targeted].survival==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].survival==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsDeception/gi)){modName="cha"
saveMod=characters[targeted].chaMod;
savePro=0;
saveProName="pro";
if(characters[targeted].deception==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].deception==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsIntimidation/gi)){modName="cha"
saveMod=characters[targeted].chaMod;
savePro=0;
saveProName="pro";
if(characters[targeted].intimidation==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].intimidation==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsPerformance/gi)){modName="cha"
saveMod=characters[targeted].chaMod;
savePro=0;
saveProName="pro";
if(characters[targeted].performance==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].performance==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
if(characters[x].rollNames[i].match(/vsPersuasion/gi)){modName="cha"
saveMod=characters[targeted].chaMod;
savePro=0;
saveProName="pro";
if(characters[targeted].persuasion==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"
}else if(characters[targeted].persuasion==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"
}
}
else{savePro="0";saveProName="pro"
}if(savePro> -1){savePro="+"+savePro
}
D20Roll1=parseInt(rollDForm('1d20+0'));
D20NaturalRoll1=naturalRoll;
D20RollModifier1=roll;
D20Roll2=parseInt(rollDForm('1d20+0'));
D20NaturalRoll2=naturalRoll;
D20RollModifier2=roll;
savingRollTotal1=D20Roll1+parseInt(saveMod)+parseInt(savePro)+parseInt(characters[x].sit);
savingRollTotal2=D20Roll2+parseInt(saveMod)+parseInt(savePro)+parseInt(characters[x].sit);
savingThrowLog=characters[targeted].name+"</td></tr><tr><td><h3>Saving Throw 1</h3>1d20+0<br>="+D20NaturalRoll1+" natural<br>"+D20RollModifier1+" modifier<br>="+D20Roll1+"<br>"+saveMod+" "+modName+"<br>"+savePro+" "+saveProName+"<br>"+characters[x].sit+" sit<br>="+savingRollTotal1+"</td></tr><tr><td><h3>Saving Throw 2</h3>1d20+0<br>="+D20NaturalRoll2+" natural<br>"+D20RollModifier2+" modifier<br>="+D20Roll2+"<br>"+saveMod+" "+modName+"<br>"+savePro+" "+saveProName+"<br>"+characters[x].sit+" sit<br>="+savingRollTotal2;
characters[x].setCombatLog(DCSaveLog+savingThrowLog+dmgRollLog);
}else
{//atk Rolls
atkRoll1=parseInt(rollDForm(characters[x].rolls[i]));
atkNaturalRoll1=naturalRoll;
atkRollModifier1=roll;
atkRoll2=parseInt(rollDForm(characters[x].rolls[i]));
atkNaturalRoll2=naturalRoll;
atkRollModifier2=roll;
atkRollTotal1=atkRoll1+parseInt(abiMod)+parseInt(skillMod)+parseInt(characters[x].sit);
atkRollTotal2=atkRoll2+parseInt(abiMod)+parseInt(skillMod)+parseInt(characters[x].sit);
atkRollLog=characters[x].name+"<br>"+characters[x].rollNames[i]+"<p>vs<p>"+characters[targeted].name+" AC:"+characters[targeted].curAc+"</td></tr><tr><td><h3>Atk 1</h3>"+characters[x].rolls[i]+"<br>="+atkNaturalRoll1+" natural<br>"+atkRollModifier1+" modifier<br>="+atkRoll1+"<br>"+abiMod+" "+abi+"<br>"+skillMod+" "+skillModName+"<br>"+characters[x].sit+" sit<br>="+atkRollTotal1+"</td></tr><tr><td><h3>Atk 2</h3>"+characters[x].rolls[i]+"<br>="+atkNaturalRoll2+" natural<br>"+atkRollModifier2+" modifier<br>="+atkRoll2+"<br>"+abiMod+" "+abi+"<br>"+skillMod+" "+skillModName+"<br>"+characters[x].sit+" sit<br>="+atkRollTotal2;
characters[x].setCombatLog(atkRollLog+dmgRollLog);
}
}
document.getElementById('targeted'+[targeted]).checked='checked';
}
function checkTheTarget(){document.getElementById('targeted'+[targeted]).checked='checked'
}
function removeChar(x){if(confirm("Are you sure you want to delete "+characters[x].name+"?this cannot be undone!")){for(var i=x+1; i< characters.length; i++){characters[i].setIndex(i - 1);
// alert((i-1)+"==="+characters[i].index)
characters[i].refresh()} characters[x].box.hide();
characters[x].menu.hide();
characters.splice(x, 1)}
}
function newCharacter(type){response=prompt("what is the new "+type+"'s name?");
if(response !=null){x=characters.length;
newChar=new Character(response, type);
newChar.setIndex(x);
newChar.refresh();
newChar.show();
characters[x]=newChar;
ADD_DHTML(newChar.box.elementId)}
}//Regular expression for something in the form XdY+/-Z, with X and+/-Z optional
diceRegex=/[0-9]{0,}[d|D][0-9]{1,}([+|-][0-9]{1,}){0,1}/
function rollInitiatives(){for(i=0; i< characters.length; i++){initRoll=characters[i].rollInit();
characters[i].setInit(initRoll)}
}
function saveAll(){globalSave="";
for(var i=0; i< characters.length; i++){globalSave+=characters[i].getSaveText()+" "
}showSavePrompt("all characters", globalSave)}
function showSavePrompt(name, toSave){toSave="<table><tr><td>Cut and paste below and above the lines into the Characters.js file.<hr></td></tr><tr><td>"+toSave+"</td></tr><tr><td><hr><input type='button' onClick='savePane.hide()'value=Close></td></tr></table>";
savePane.setContents(toSave);
savePane.show()}
function toggleMenu(x){if(characters[x].menuShown){characters[x].hideMenu()}
else
{characters[x].showMenu()}
}
function XdY(dice, sides){results=0;
for(i=0; i< dice; i++){results+=d(sides)}return results
}
var row;function start(){ row= event.target}
function dragover(){ var e= event;
e.preventDefault();
 let children= Array.from(e.target.parentNode.parentNode.children);
if(children.indexOf(e.target.parentNode)>children.indexOf(row))
 e.target.parentNode.after(row);
else
 e.target.parentNode.before(row)}

function _setLvl(x){this.lvl=x;
if(this.lvl.match(/[0-4]/)){this.setPro('+2')}
if(this.lvl.match(/[5-8]/)){this.setPro('+3')}
if(this.lvl.match(/9|1[0-2]/)){this.setPro('+4')}
if(this.lvl.match(/1[3-6]/)){this.setPro('+5')}
if(this.lvl.match(/1[7-9]|20/)){this.setPro('+6')}
if(this.lvl.match(/2[1-4]/)){this.setPro('+7')}
if(this.lvl.match(/2[5-8]/)){this.setPro('+8')}
if(this.lvl.match(/29|30/)){this.setPro('+9')}

if(this.class.match(/Arcane|Eldritch/))
{if(this.lvl.match(/[0-2]/)){this.setMaxSlot1(0)};
if(this.lvl.match(/3/)){this.setMaxSlot1(2)};
if(this.lvl.match(/[4-6]/)){this.setMaxSlot1(3)};
if(this.lvl.match(/[7-9]|1[0-9]|20/)){this.setMaxSlot1(4)};
if(this.lvl.match(/[0-6]/)){this.setMaxSlot2(0)};
if(this.lvl.match(/[7-9]/)){this.setMaxSlot2(2)};
if(this.lvl.match(/1[0-9]|20/)){this.setMaxSlot2(3)};
if(this.lvl.match(/[0-9]|1[0-2]/)){this.setMaxSlot3(0)};
if(this.lvl.match(/1[3-5]/)){this.setMaxSlot3(2)};
if(this.lvl.match(/1[6-9]|20/)){this.setMaxSlot3(3)};
if(this.lvl.match(/[0-9]|1[0-8]/)){this.setMaxSlot4(0)};
if(this.lvl.match(/19|20/)){this.setMaxSlot4(1)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot5(0)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot6(0)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot7(0)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot8(0)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot9(0)};
}

if(this.class.match(/Bard|Cleric|Druid|Sorcerer|Wizard/))
{if(this.lvl.match(/0/)){this.setMaxSlot1(0)};
if(this.lvl.match(/1/)){this.setMaxSlot1(2)};
if(this.lvl.match(/2/)){this.setMaxSlot1(3)};
if(this.lvl.match(/[3-9]|1[0-9]|20/)){this.setMaxSlot1(4)};
if(this.lvl.match(/[0-2]/)){this.setMaxSlot2(0)};
if(this.lvl.match(/3/)){this.setMaxSlot2(2)};
if(this.lvl.match(/[4-9]|1[0-9]|20/)){this.setMaxSlot2(3)};
if(this.lvl.match(/[0-4]/)){this.setMaxSlot3(0)};
if(this.lvl.match(/5/)){this.setMaxSlot3(2)};
if(this.lvl.match(/[6-9]|1[0-9]|20/)){this.setMaxSlot3(3)};
if(this.lvl.match(/[0-6]/)){this.setMaxSlot4(0)};
if(this.lvl.match(/7/)){this.setMaxSlot4(1)};
if(this.lvl.match(/8/)){this.setMaxSlot4(2)};
if(this.lvl.match(/9|1[0-9]|20/)){this.setMaxSlot4(3)};
if(this.lvl.match(/[0-8]/)){this.setMaxSlot5(0)};
if(this.lvl.match(/9/)){this.setMaxSlot5(1)};
if(this.lvl.match(/1[0-7]/)){this.setMaxSlot5(2)};
if(this.lvl.match(/1[8-9]|20/)){this.setMaxSlot5(3)};
if(this.lvl.match(/[0-9]|10/)){this.setMaxSlot6(0)};
if(this.lvl.match(/1[0-8]/)){this.setMaxSlot6(1)};
if(this.lvl.match(/19|20/)){this.setMaxSlot6(2)};
if(this.lvl.match(/[0-9]|1[0-2]/)){this.setMaxSlot7(0)};
if(this.lvl.match(/1[3-9]/)){this.setMaxSlot7(1)};
if(this.lvl.match(/20]/)){this.setMaxSlot7(2)};
if(this.lvl.match(/[0-9]|1[0-4]/)){this.setMaxSlot8(0)};
if(this.lvl.match(/1[5-9]|20/)){this.setMaxSlot8(1)};
if(this.lvl.match(/[0-9]|1[0-6]/)){this.setMaxSlot9(0)};
if(this.lvl.match(/1[7-9]|20/)){this.setMaxSlot9(1)};
}

if(this.class.match(/Paladin|Ranger/))
{if(this.lvl.match(/[0-1]/)){this.setMaxSlot1(0)};
if(this.lvl.match(/2/)){this.setMaxSlot1(2)};
if(this.lvl.match(/3/)){this.setMaxSlot1(3)};
if(this.lvl.match(/[4-9]|1[0-9]|20/)){this.setMaxSlot1(4)};
if(this.lvl.match(/[0-4]/)){this.setMaxSlot2(0)};
if(this.lvl.match(/[5-6]/)){this.setMaxSlot2(2)};
if(this.lvl.match(/[7-9]|1[0-9]|20/)){this.setMaxSlot2(3)};
if(this.lvl.match(/[0-8]/)){this.setMaxSlot3(0)};
if(this.lvl.match(/9|10/)){this.setMaxSlot3(2)};
if(this.lvl.match(/1[1-9]|20/)){this.setMaxSlot3(3)};
if(this.lvl.match(/[0-9]|1[0-2]/)){this.setMaxSlot4(0)};
if(this.lvl.match(/1[3-4]/)){this.setMaxSlot4(1)};
if(this.lvl.match(/1[5-6]/)){this.setMaxSlot4(2)};
if(this.lvl.match(/1[7-9]|20/)){this.setMaxSlot4(3)};
if(this.lvl.match(/[0-9]|1[0-6]/)){this.setMaxSlot5(0)};
if(this.lvl.match(/1[7-8]/)){this.setMaxSlot5(1)};
if(this.lvl.match(/19|20/)){this.setMaxSlot5(2)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot6(0)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot7(0)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot8(0)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot9(0)};
}

if(this.class.match(/Warlock/))
{if(this.lvl.match(/0/)){this.setMaxSlot1(0)};
if(this.lvl.match(/1/)){this.setMaxSlot1(1)};
if(this.lvl.match(/2/)){this.setMaxSlot1(2)};
if(this.lvl.match(/[3-9]|1[0-9]|20/)){this.setMaxSlot1(0)};
if(this.lvl.match(/[0-2]/)){this.setMaxSlot2(0)};
if(this.lvl.match(/[3-4]/)){this.setMaxSlot2(2)};
if(this.lvl.match(/[5-9]|1[0-9]|20/)){this.setMaxSlot2(0)};
if(this.lvl.match(/[0-5]/)){this.setMaxSlot3(0)};
if(this.lvl.match(/[6-7]/)){this.setMaxSlot3(3)};
if(this.lvl.match(/[8-9]|1[0-9]|20/)){this.setMaxSlot3(0)};
if(this.lvl.match(/[0-2]/)){this.setMaxSlot4(0)};
if(this.lvl.match(/[7-8]/)){this.setMaxSlot4(4)};
if(this.lvl.match(/9|1[0-9]|20/)){this.setMaxSlot4(0)};
if(this.lvl.match(/[0-8]/)){this.setMaxSlot5(0)};
if(this.lvl.match(/9|1[0-1]/)){this.setMaxSlot5(5)};
if(this.lvl.match(/1[2-4]/)){this.setMaxSlot5(6)};
if(this.lvl.match(/1[5-7]/)){this.setMaxSlot5(7)};
if(this.lvl.match(/1[8-9]|20/)){this.setMaxSlot5(8)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot6(0)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot7(0)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot8(0)};
if(this.lvl.match(/[0-9]|1[0-9]|20/)){this.setMaxSlot9(0)};
}

this.refresh()
}

</script>
<script src="Characters.js"></script>
</body>
</html>
