<html lang="en-US">

<head>
<meta content="text/html" charset="utf-8" http-equiv="content-type">
<meta content="utf-8" http-equiv="encoding">
<meta name="description" content="2017 Dungeons & Dragons 5th Edition Tabletop Roleplaying Game Manager">
<meta name="keywords" content="DnD, Dungeons and Dragons, D&D, Dungeons & Dragons, Fantasy RPG, tabletop roleplaying game, TTRPG">
<title>The Dungeons & Dragons 5th Edition Tabletop Fantasy Roleplaying Game JavaScript Manager 2022(Asmor, Zorn, Ren)</title>
<script src="Scripts/WZDragdrop.js"></script>
<script src="Scripts/jquery-3.2.1.min.js"></script>
<script src="Scripts/jquery-ui-1.12.1.js"></script>
<script src="Scripts/TouchPunch.js"></script>

<head>

<style>

tr:nth-child(even) {background: rgba(0, 0, 0, 0.1)}
tr:nth-child(odd) {background: rgba(0, 0, 0, 0.2)}

td:nth-child(even) {background: rgba(0, 0, 0, 0.1)}
td:nth-child(odd) {background: rgba(0, 0, 0, 0.2)}

button,
input,
option,
radio,
select,
textarea
{
background: inherit;
}

td,
button,
input,
option,
radio,
select,
textarea
{
border-style: none;
text-align: right;
font-size: 10px;
vertical-align: top;
}

#dragDiv
{
height: 100px;
width: 100px;
}

a:link,
a:hover,
a:visited,
h1 {color: #a40404;
}

h2 {color: #b90404;
}

h3 {color: #260e0e;
}

body,
div,
table,
tr,
td,
button,
legend,
button:hover,
button:active,
input,
option,
radio,
select,
textarea
{
background: #86857e url('Miniatures/Panel.png');
background-blend-mode: multiply;
background-color: rgba(200,100,0,.5);
minWidth: 100%;
maxWidth: 100%;
resize: none;
}

</style>

<body>

<table class='draggable'><tr><td>
<font color='white'><img src='Miniatures/Monster.png'>On phones, put me on a character to drag!</font>
</td></tr></table>
<br>
<table><tr><td>
<table><tr><td>
To save your characters, play off-line. <a href="dnd.zip">dnd.zip</a>
</td></tr><tr><td>
<input type='button' value='Roll all initiatives?' onClick='rollInitiatives()' />
</td></tr><tr><td>
<input type='button' value='Save all characters?' onClick='saveAll()' />
</td></tr><tr><td>
<input type='button' value='Target then Clone a character?' onClick='cloneIt(type)' />
</td></tr><tr><td>
<input type='button' value='Create a new character?' onClick='newCharacter(PC)' />
</td></tr><tr><td>
<a href='https://imgur.com/a/IXjjg' target='_blank'>Ozuro's Dungeon Master Screen</a>
</td></tr><tr><td>
<a href='https://www.kassoon.com/dnd/5e' target='_blank'>Kasson's D&D Tools</a>
</td></tr><tr><td>
Generate characters fast!
<a href='https://fastcharacter.com' target='_blank'>FastCharacter.Com</a>
</td></tr><tr><td>
This is a single encounter from the adventure
<a href='https://archive.org/details/tsr09045addthesecretofbonehill/mode/1up' target='_blank'>Dungeon Module L1 The Secret of Bone Hill</a>
</td></tr><tr><td>
The adventure uses Dungeons & Dragons 5th Edition rules and Classic Modules Today conversions.
<a href='https://www.thriftbooks.com/series/dungeons--dragons-5th-edition/83478/' target='_blank'>Thrift Books D&D 5E</a>
</td></tr><tr><td>
<input onClick="d20roll=d(20);document.getElementById('d20result').innerHTML=d20roll" type='button' value='Roll a 1d20?' /><b id='d20result'></b></td>
</td></tr><tr><td>
<input onClick="d12roll=d(12);document.getElementById('d12result').innerHTML=d12roll" type='button' value='Roll a 1d12?' /><b id='d12result'></b></td>
</td></tr><tr><td>
<input onClick="d10roll=d(10);document.getElementById('d10result').innerHTML=d10roll" type='button' value='Roll a 1d10?' /><b id='d10result'></b></td>
</td></tr><tr><td>
<input onClick="d8roll=d(8);document.getElementById('d8result').innerHTML=d8roll" type='button' value='Roll a 1d8?' /><b id='d8result'></b></td>
</td></tr><tr><td>
<input onClick="d6roll=d(6);document.getElementById('d6result').innerHTML=d6roll" type='button' value='Roll a 1d6?' /><b id='d6result'></b></td>
</td></tr><tr><td>
<input onClick="d4roll=d(4);document.getElementById('d4result').innerHTML=d4roll" type='button' value='Roll a 1d4?' /><b id='d4result'></b></td>
</td></tr><tr><td>
<input onMouseOut="rollOne=parseInt(rollDForm(this.value));document.getElementById('rollOneDisplay').innerHTML='('+naturalRoll+roll+')='+rollOne" maxLength='8' size='8' placeHolder='XdY+Z' type='text' /><b id='rollOneDisplay'></b></td>
</td></tr><tr><td>
<input onMouseOut="rollTwo=parseInt(rollDForm(this.value));document.getElementById('rollTwoDisplay').innerHTML='('+naturalRoll+roll+')='+rollTwo" maxLength='8' size='8' placeHolder='XdY+Z' type='text' /><b id='rollTwoDisplay'></b></td>
</td></tr><tr><td>
<input onMouseOut="rollThree=parseInt(rollDForm(this.value));document.getElementById('rollThreeDisplay').innerHTML='('+naturalRoll+roll+')='+rollThree" maxLength='8' size='8' placeHolder='XdY+Z' type='text' /><b id='rollThreeDisplay'></b></td>
</td></tr><tr><td>
<input onMouseOut="rollFour=parseInt(rollDForm(this.value));document.getElementById('rollFourDisplay').innerHTML='('+naturalRoll+roll+')='+rollFour" maxLength='8' size='8' placeHolder='XdY+Z' type='text' /><b id='rollFourDisplay'></b></td>
</td></tr><tr><td>
<input onMouseOut="rollFive=parseInt(rollDForm(this.value));document.getElementById('rollFiveDisplay').innerHTML='('+naturalRoll+roll+')='+rollFive" maxLength='8' size='8' placeHolder='XdY+Z' type='text' /><b id='rollFiveDisplay'></b></td>
</td></tr><tr><td>
<input onMouseOut="rollSix=parseInt(rollDForm(this.value));document.getElementById('rollSixDisplay').innerHTML='('+naturalRoll+roll+')='+rollSix" maxLength='8' size='8' placeHolder='XdY+Z' type='text' /><b id='rollSixDisplay'></b></td>
</td></tr><tr><td>
Target then paste stats.<br>
<textArea cols='30' rows='20' onChange='stats=this.value;setStats()' /></textarea><b id='statsDisplay'></b>
</td></tr></table>

</td><td>

<table><tr><td>
<img src='Map.png'>
</td></tr></table>
</td></tr></table>

<script>

function rollDForm(dForm)
{dForm=dForm.toLowerCase();
dIndex=dForm.indexOf("d");
signIndex=dForm.indexOf("+");
sign=true;
positive=true;
if(signIndex===-1)
{positive=false;
 signIndex=dForm.indexOf("-");
}
if(signIndex===-1)
{signIndex=dForm.length;
 sign=false;
}
dice=0;
sides=0;
addOn=0;
if(dIndex===0)
{dice=1;
}
else
{dice=dForm.substring(0, dIndex);
}
sides=dForm.substring(dIndex + 1, signIndex);
if(sign)
{addOn=dForm.substring(signIndex + 1);
 if(!positive)
 {addOn *=-1;
}
}
naturalRoll=XdY(dice, sides);
roll=(addOn / 1);
result=naturalRoll + roll;
if(roll > -1)
{roll="+" + roll
}
return naturalRoll, roll, result;
}

function d(sides)
{return Math.ceil(Math.random() * sides);
}

function deleteRollPrompt(x, i)
{characters[x].deleteRoll(i);
}

function dFormParse(toCheck)
{match=toCheck.match(diceRegex);
if(match !=null)
{return match[0]
}
else
{return null;
}
}

function cloneIt(PC)
{x=characters.length;
newChar=new Character();
newChar.setIndex(x);
newChar.refresh();
newChar.show();
characters[x]=newChar;
ADD_DHTML(newChar.box.elementId);
characters[x].setName(characters[targeted].name + ' ' + x);
characters[x].type="PC";
characters[x].setClass(characters[targeted].class);
characters[x].setLevel(characters[targeted].level);
characters[x].setRace(characters[targeted].race);
characters[x].setBackground(characters[targeted].background);
characters[x].setAbility(characters[targeted].ability);
characters[x].setAC(characters[targeted].ac);
characters[x].setAcrobatics(characters[targeted].acrobatics);
characters[x].setAlignment(characters[targeted].alignment);
characters[x].setAnimal(characters[targeted].animal);
characters[x].setArmor(characters[targeted].armor);
characters[x].setArcana(characters[targeted].arcana);
characters[x].setAthletics(characters[targeted].athletics);
characters[x].setBackF(characters[targeted].backF);
characters[x].setBackL(characters[targeted].backL);
characters[x].setBackS(characters[targeted].backS);
characters[x].setBackT(characters[targeted].backT);
characters[x].setBonds(characters[targeted].bonds);
characters[x].setCha(characters[targeted].cha);
characters[x].setChaPro(characters[targeted].chaPro);
characters[x].setCon(characters[targeted].con);
characters[x].setConPro(characters[targeted].conPro);
characters[x].setCurHp(characters[targeted].curHP);
characters[x].setDeception(characters[targeted].deception);
characters[x].setDex(characters[targeted].dex);
characters[x].setDexPro(characters[targeted].dexPro);
characters[x].setEquipment(characters[targeted].equipment);
characters[x].setExperience(characters[targeted].experience);
characters[x].setFeats(characters[targeted].feats);
characters[x].setFeatures(characters[targeted].features);
characters[x].setFeatureNotes(characters[targeted].featureNotes);
characters[x].setFigure(characters[targeted].figure);
characters[x].setFlaws(characters[targeted].flaws);
characters[x].setHistory(characters[targeted].history);
characters[x].setHitDice(characters[targeted].hitDice);
characters[x].setIdeals(characters[targeted].ideals);
characters[x].setInit(characters[targeted].init);
characters[x].setImmunity(characters[targeted].immunity);
characters[x].setInitBonus(characters[targeted].initBonus);
characters[x].setInsight(characters[targeted].insight);
characters[x].setInt(characters[targeted].inte);
characters[x].setIntimidation(characters[targeted].intimidation);
characters[x].setIntPro(characters[targeted].intPro);
characters[x].setInvestigation(characters[targeted].investigation);
characters[x].setLanguages(characters[targeted].language);
characters[x].setMaxHp(characters[targeted].maxHp);
characters[x].setCurHp(characters[targeted].curHp);
characters[x].setMedicine(characters[targeted].medicine);
characters[x].setNature(characters[targeted].nature);
characters[x].setPerception(characters[targeted].perception);
characters[x].setPerformance(characters[targeted].performance);
characters[x].setPersuasion(characters[targeted].persuasion);
characters[x].setPro(characters[targeted].pro);
characters[x].setProficiencies(characters[targeted].proficiencies);
characters[x].setProficienciesRace(characters[targeted].proficienciesRace);
characters[x].setReligion(characters[targeted].religion);
characters[x].setResistance(characters[targeted].resistance);
characters[x].setSaving(characters[targeted].saving);
characters[x].setSenses(characters[targeted].senses);
characters[x].setShield(characters[targeted].shield);
characters[x].setSize(characters[targeted].size);
characters[x].setSleight(characters[targeted].sleight);
characters[x].setSkills(characters[targeted].skills);
characters[x].setSpeed(characters[targeted].speed);
characters[x].setSpellAbility(characters[targeted].spellAbility);
characters[x].setSpellAbilityNumber(characters[targeted].spellAbilityNumber);
characters[x].setStealth(characters[targeted].stealth);
characters[x].setStr(characters[targeted].str);
characters[x].setStrPro(characters[targeted].strPro);
characters[x].setSurvival(characters[targeted].survival);
characters[x].setTrait(characters[targeted].trait);
characters[x].setVulnerability(characters[targeted].vulnerability);
characters[x].setWis(characters[targeted].wis);
characters[x].setWisPro(characters[targeted].wisPro);
characters[x].setCurFirstSlot(characters[targeted].curFirstSlot);
characters[x].setCurSecondSlot(characters[targeted].curSecondSlot);
characters[x].setCurThirdSlot(characters[targeted].curThirdSlot);
characters[x].setCurFourthSlot(characters[targeted].curFourthSlot);
characters[x].setCurFifthSlot(characters[targeted].curFifthSlot);
characters[x].setCurSixthSlot(characters[targeted].curSixthSlot);
characters[x].setCurSeventhSlot(characters[targeted].curSeventhSlot);
characters[x].setCurEighthSlot(characters[targeted].curEighthSlot);
characters[x].setCurNinthSlot(characters[targeted].curNinthSlot);
characters[x].setDamageConditions(characters[targeted].damageConditions);
for(var i=x; i< characters.length; i++)
{for(var j=0; j< characters[targeted].rolls.length; j++)
 {characters[i].addRoll(characters[targeted].rollNames[j], characters[targeted].rolls[j], characters[targeted].rollNames2[j], characters[targeted].rolls2[j]);
}
}
}

 t1="a,b,c,damageDice"

 function AlchemicalAcid()
 {a='(Alchemical Acid)DC8+' + characters[targeted].spellAbility + '+pro vsDex 30ft 1 target',
 b='0d0+0',
 c='acid+dex, 2d6@3rd,3d6@5th, 4d6@7th, 5d6@9th, 6d6@11th, 7d6@13th, 8d6@15th, 9d6@17th, 10d6@19th',
 damageDice='1d6+0',
 getAction(t1)
}

 function AlchemicalFire()
 {a='(Alchemical Fire)DC8+' + characters[targeted].spellAbility + '+pro vsDex 30ft 5ft rad',
 b='0d0+0',
 c='fire+dex, 2d6@4th,3d6@7th, 4d6@10th, 5d6@13th, 6d6@16th, 7d6@19th',
 damageDice='1d6+0',
 getAction(t1)
}

 function Club()
 {a='Club+str+pro',
 b='1d20+0',
 c='bludgeoning+str',
 damageDice='1d4+0',
 getAction(t1)
}

 function Dagger()
 {a='Dagger+dex+pro 20/60ft',
 b='1d20+0',
 c='piercing+dex',
 damageDice='1d4+0',
 getAction(t1)
}

 function Falchion()
 {a='Falchion+str+pro',
 b='1d20+0',
 c='slashing+str',
 damageDice='2d4+0',
 getAction(t1)
}

 function Greatclub()
 {a='2 handed Greatclub+str+pro',
 b='1d20+0',
 c='bludgeoning+str',
 damageDice='1d8+0',
 getAction(t1)
}

 function Handaxe()
 {a='Handaxe+str+pro 20/60ft',
 b='1d20+0',
 c='slashing+str',
 damageDice='1d6+0',
 getAction(t1)
}

 function HealingDraught()
 {a='(Healing Draught)1 target',
 b='0d0+0',
 c='heal 1 time then long rest, 2d8@3rd, 3d8@5th, 4d8@7th, 5d8@9th, 6d8@11th, 7d8@13th, 8d8@15th, 9d8@17th, 10d8@19th',
 damageDice='1d8+0',
 getAction(t1)
}

 function Javelin()
 {a='Javelin+str+pro 30/120ft',
 b='1d20+0',
 c='piercing+str',
 damageDice='1d6+0',
 getAction(t1)
}

 function LightHammer()
 {a='Light Hammer+str+pro 20/60ft',
 b='1d20+0',
 c='bludgeoning+str',
 damageDice='1d4+0',
 getAction(t1)
}

 function Mace()
 {a='Mace+str+pro',
 b='1d20+0',
 c='bludgeoning+str',
 damageDice='1d6+0',
 getAction(t1)
}

 function OneHandedQuarterstaff()
 {a='1 Handed Quarterstaff+str+pro',
 b='1d20+0',
 c='bludgeoning+str',
 damageDice='1d6+0',
 getAction(t1)
}

 function TwoHandedQuarterstaff()
 {a='2 Handed Quarterstaff+str+pro',
 b='1d20+0',
 c='bludgeoning+str',
 damageDice='1d8+0',
 getAction(t1)
}

 function Sickle()
 {a='Sickle+dex+pro',
 b='1d20+0',
 c='slashing+dex',
 damageDice='1d4+0',
 getAction(t1)
}

 function OneHandedSpear()
 {a='1 Handed Spear+str+pro 20/60ft',
 b='1d20+0',
 c='piercing+str',
 damageDice='1d6+0',
 getAction(t1)
}

 function TwoHandedSpear()
 {a='2 Handed Spear+str+pro 20/60ft',
 b='1d20+0',
 c='piercing+str',
 damageDice='1d8+0',
 getAction(t1)
}

function TwoHandedLightCrossbow()
 {a='2 Handed Crossbow+dex+pro 80/320ft',
 b='1d20+0',
 c='piercing+dex',
 damageDice='1d8+0',
 getAction(t1)
}

 function Dart()
 {a='Dart+dex+pro 20/60ft',
 b='1d20+0',
 c='piercing+dex',
 damageDice='1d4+0',
 getAction(t1)
}

 function Shortbow()
 {a='Shortbow+dex+pro 80/320ft',
 b='1d20+0',
 c='piercing+dex',
 damageDice='1d6+0',
 getAction(t1)
}

 function Sling()
 {a='Sling+dex+pro 30/120ft',
 b='1d20+0',
 c='bludgeoning+dex',
 damageDice='1d4+0',
 getAction(t1)
}

 function OneHandedBattleaxe()
 {a='1 Handed Battleaxe+str+pro',
 b='1d20+0',
 c='slashing+str',
 damageDice='1d8+0',
 getAction(t1)
}

 function TwoHandedBattleaxe()
 {a='2 Handed Battleaxe+str+pro',
 b='1d20+0',
 c='slashing+str',
 damageDice='1d10+0',
 getAction(t1)
}

 function Flail()
 {a='Flail+str+pro',
 b='1d20+0',
 c='bludgeoning+str',
 damageDice='1d8+0',
 getAction(t1)
}

 function Glaive()
 {a='2 Handed Glaive+str+pro  10ft',
 b='1d20+0',
 c='slashing+str',
 damageDice='1d10+0',
 getAction(t1)
}

 function TwoHandedGreataxe()
 {a='2 Handed Greataxe+str+pro',
 b='1d20+0',
 c='slashing+str',
 damageDice='1d12+0',
 getAction(t1)
}

 function TwoHandedGreatsword()
 {a='2 Handed Greatsword+str+pro',
 b='1d20+0',
 c='slashing+str',
 damageDice='2d6+0',
 getAction(t1)
}

 function TwoHandedHalberd()
 {a='2 Handed Halberd+str+pro  10ft',
 b='1d20+0',
 c='slashing+str',
 damageDice='1d10+0',
 getAction(t1)
}

 function Lance()
 {a='2 Handed Lance+str+pro  10ft',
 b='1d20+0',
 c='piercing+str',
 damageDice='1d12+0',
 getAction(t1)
}

 function OneHandedLongsword()
 {a='1 Handed Longsword+str+pro',
 b='1d20+0',
 c='slashing+str',
 damageDice='1d8+0',
 getAction(t1)
}

 function TwoHandedLongsword()
 {a='2 Handed Longsword+str+pro',
 b='1d20+0',
 c='slashing+str',
 damageDice='1d10+0',
 getAction(t1)
}

 function TwoHandedMaul()
 {a='2 Handed Maul+str+pro',
 b='1d20+0',
 c='bludgeoning+str',
 damageDice='2d6+0',
 getAction(t1)
}

 function Morningstar()
 {a='Morningstar+str+pro',
 b='1d20+0',
 c='piercing+str',
 damageDice='1d8+0',
 getAction(t1)
}

 function TwoHandedPike()
 {a='Pike+str+pro  10ft',
 b='1d20+0',
 c='piercing+str',
 damageDice='1d10+0',
 getAction(t1)
}

 function UnarmedStrike()
 {a='Unarmed Strike 5ft',
 b='1d20+0',
 c='bludgeoning+dex',
 damageDice='1d8+0',
 getAction(t1)
}
 function Disarmed()
 {a='(Disarmed)1 item, DC8+dex+pro vsStr',
 b='1d0+0',
 c='drops 1 item',
 damageDice='0d0+0',
 getAction(t1)
}
 function KnockedProne()
 {a='(Knock Prone)DC8+dex+pro vsDex @disadv if held with 2 hands or large',
 b='1d0+0',
 c='movement halved, 5ft attacks @adv, ranged attacks @disadv, 1 action to stand',
 damageDice='0d0+0',
 getAction(t1)
}
 function Stunned()
 {a='(Stun)DC8+dex+pro vsCon',
 b='0d0+0',
 c='stunned, attacked @adv, str and dex saves @disadv, miss 1 turn, DM rule no crit dmg',
 damageDice='0d0+0',
 getAction(t1)
}
 function DeflectMissile()
 {a='(Deflect Missile)damage from ranged weapon is reduced',
 b='0d0+0',
 c='heal+dex, if damage is reduced to 0, the missile is caught',
 damageDice='1d10+0',
 getAction(t1)
}

 function SongOfRest()
 {a='(Song of Rest)everyone heals during short 4hr or long 8hr rest',
 b='0d0+0',
 c='heal',
 damageDice='1d6+0',
 getAction(t1)
}

 function Taunt()
 {a='(Taunt)2/2 per long 8hr rest, 1 target, 30ft, DC8+cha+pro vsCha',
 b='0d0+0',
 c='all rolls @disadv till start of bard s next turn',
 damageDice='0d0+0',
 getAction(t1)
}

 function Rapier()
 {a='Rapier+dex+pro',
 b='1d20+0',
 c='piercing+dex',
 damageDice='1d8+0',
 getAction(t1)
}

 function Scimitar()
 {a='Scimitar+dex+pro',
 b='1d20+0',
 c='slashing+dex',
 damageDice='1d6+0',
 getAction(t1)
}

 function Shortsword()
 {a='Shortsword+dex+pro',
 b='1d20+0',
 c='piercing+dex',
 damageDice='1d6+0',
 getAction(t1)
}

 function OneHandedTrident()
 {a='1 Handed Trident+str+pro 20/60ft',
 b='1d20+0',
 c='piercing+str',
 damageDice='1d6+0',
 getAction(t1)
}

 function TwoHandedTrident()
 {a='2 Handed Trident+str+pro 20/60ft',
 b='1d20+0',
 c='piercing+str',
 damageDice='1d8+0',
 getAction(t1)
}

 function WarPick()
 {a='War Pick+str+pro',
 b='1d20+0',
 c='piercing+str',
 damageDice='1d8+0',
 getAction(t1)
}

 function OneHandedWarhammer()
 {a='1 Handed Warhammer+str+pro',
 b='1d20+0',
 c='bludgeoning+str',
 damageDice='1d8+0',
 getAction(t1)
}

 function TwoHandedWarhammer()
 {a='2 Handed Warhammer+str+pro',
 b='1d20+0',
 c='bludgeoning+str',
 damageDice='1d10+0',
 getAction(t1)
}

 function Whip()
 {a='Whip+dex+pro',
 b='1d20+0',
 c='slashing+dex and grappling',
 damageDice='1d4+0',
 getAction(t1)
}

 function Blowgun()
 {a='Blowgun+dex+pro 25/100ft',
 b='1d20+0',
 c='piercing+dex',
 damageDice='0d0+1',
 getAction(t1)
}

 function OneHandedCrossbow()
 {a='1 Handed Crossbow+dex+pro 30/120ft',
 b='1d20+0',
 c='piercing+dex',
 damageDice='1d6+0',
 getAction(t1)
}

 function HeavyTwoHandedCrossbow()
 {a='Heavy 2 Handed Crossbow+dex+pro 100/400ft',
 b='1d20+0',
 c='piercing+dex',
 damageDice='1d10+0',
 getAction(t1)
}

 function Longbow()
 {a='2 Handed Longbow+dex+pro 150/600ft',
 b='1d20+0',
 c='piercing+dex',
 damageDice='1d10+0',
 getAction(t1)
}

 function Net()
 {a='Net+dex+pro 5/15ft',
 b='1d20+0',
 c='grappling',
 damageDice='0d0+0',
 getAction(t1)
}

</script>

</td>
</tr>
</table>

<script>

 function Abate()
 {a='(Abate)DC8+' + characters[targeted].spellAbility + '+pro vsWis 30ft 1 target',
 b='0d0+0',
 c='can not take reactions uteoynt',
 damageDice='1d6+0',
 getAction(t1)
}

 function AcidSplash()
 {a='Cantrip(Acid Splash)DC8+' + characters[targeted].spellAbility + '+pro vsDex 60ft 2 adjac targets',
 b='0d0+0',
 c='acid+1d6@5,11,17th lvl',
 damageDice='1d6+0',
 getAction(t1)
}

 function Aid()
 {a='2nd(Aid)3 Creatures gain 5+5/slot level current hp and hp max for the duration 30ft 8hrs',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Augury()
 {a='2nd(Augury)Omen about specific course of action you plan to take in the next 30 min(25gp)Div 10/10 turns Self m',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Alarm()
 {a='1st(Alarm)10/10 turns ritual 30ft 8hrss 20ft cube point designate who does not set off mental or 10sec 60ft radius audible waking alarm',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function AlterSelf()
 {a='2nd(Alter Self)self concentration 1hr',
 b='0d0+0',
 c='change options as bonus gills, webbing, breathe underwater, swim speed is walk speed *or change height, weight, face, voice, hair, color, race but not size or number of limbs *or attack+1 with claws, fangs, spines, horns and deal 1d6 bludg slash, pierc',
 damageDice='0d0+0',
 getAction(t1)
}

 function AnimalFriendship()
 {a='1st(Animal Friendship)1+1/slot beast Int4+)DC8+' + characters[targeted].spellAbility + '+pro vsWis 30ft 24hrs',
 b='0d0+0',
 c='charmed',
 damageDice='0d0+0',
 getAction(t1)
}

 function AnimalMessenger()
 {a='2nd(Animal Messenger)30ft',
 b='0d0+0',
 c='tiny beast delivers 25 word message up to 25mi flyer 50mi 24+48hrs/slot',
 damageDice='0d0+0',
 getAction(t1)
}

 function ArcaneLock()
 {a='2nd(Arcane Lock)touch til dispelled',
 b='0d0+0',
 c='locked to all but you and allies password Knock spell suppresses 10min DC+10 to break or pick lock',
 damageDice='0d0+0',
 getAction(t1)
}

 function ArmorOfAgathys()
 {a='1st(Armor of Agathys)5+5/slot temp HP self 1hr',
 b='0d0+0',
 c='melee attackers takes cold+5/slot as long as temp HP',
 damageDice='0d0+5',
 getAction(t1)
}

 function ArmsOfHadar()
 {a='1st(Arms of Hadar)DC8+' + characters[targeted].spellAbility + '+pro vsStr for half on failed save no reactions until target next turn 10ft radius s',
 b='0d0+0',
 c='necro+1d6/slot',
 damageDice='2d6+0',
 getAction(t1)
}

 function Bane()
 {a='1st(Bane)30ft.DC8+' + characters[targeted].spellAbility + '+pro vsCha',
 b='0d0+0',
 c='3 targets+1/slot roll atk or save -1d4.concentration or 10/10 turns',
 damageDice='1d4+0',
 getAction(t1)
}

 function Barkskin()
 {a='2nd(Barkskin)1 ally AC cannot be reduced below 16, regardless of armor it is wearing touch concentration 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function BeastSense()
 {a='2nd(Beast Sense)Use 1 willing beast s senses; you are blinded and deafened while doing so touch s concentration 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function BeckonFamiliar()
 {a='(Beckon Familiar)1hr ritual, telepathic communication, see and hear through 1 familiar at a time, summon or dismiss, or permanently dismiss the familiar as 1 action, cast touch spells through familiar within 100ft as its reaction, no spell slot cost',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function BladeWard()
 {a='Cantrip(Blade Ward)self 10/10 turns',
 b='0d0+0',
 c='resist bludg slash pierc till t e o y n turn',
 damageDice='0d0+0',
 getAction(t1)
}

 function BlastWave()
 {a='(Blast Wave)DC8+' + characters[targeted].spellAbility + '+pro vsStr, 2h, 150/500ft, 15ft cone, 1act',
 b='1d20+0',
 c='force+dex and pushed 10ft 3d6@13th, 4d6@17th',
 damageDice='2d6+0',
 getAction(t1)
}

 function Bleeding()
 {a='(Bleeding)DC8+' + characters[targeted].spellAbility + '+pro vsCon, 1 action, 1 target, 60ft, concentration 10/10 turns',
 b='0d0+0',
 c='when target takes dmg+1d8 uteo ' + characters[x].name + 's nt',
 damageDice='1d8+0',
 getAction(t1)
}

 function Bless()
 {a='1st(Bless)30ft concentration 10/10 turns',
 b='0d0+0',
 c='3 allies+1/slot attack or save+1d4',
 damageDice='1d4+0',
 getAction(t1)
}

 function BlindnessDeafness()
 {a='2nd(Blindness Deafness)DC8+' + characters[targeted].spellAbility + '+pro vsCon 1 target+1/slot 30ft',
 b='0d0+0',
 c='blinded or deafened 10/10 turns or con save ateoet',
 damageDice='0d0+0',
 getAction(t1)
}

 function Blur()
 {a='2nd(Blur)self',
 b='0d0+0',
 c='attacked at disadv concentration or 10/10 turns.blindsight or truesight immune',
 damageDice='0d0+0',
 getAction(t1)
}

 function BurningHands()
 {a='1st(Burning Hands)DC8+' + characters[targeted].spellAbility + '+pro vsDex for half self 15ft cone',
 b='0d0+0',
 c='fire+1d6/slot',
 damageDice='3d6+0',
 getAction(t1)
}

 function CalmEmotions()
 {a='2nd(Calm Emotions)20ft radius all humanoids save or you suppress either charm/fear effects or hostility)DC8+' + characters[targeted].spellAbility + '+pro vsCha 60ft concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function CauseFear()
 {a='1st(Cause Fear Necromancy 1 action 60ft V, S concentration, to 1min)DC8+' + characters[targeted].spellAbility + '+pro vsWis target 25hp or less at at disadv constructs,undead immune',
 b='0d0+0',
 c='frightened',
 damageDice='0d0+0',
 getAction(t1)
}

 function CharmPerson()
 {a='1st(Charm Person)DC8+' + characters[targeted].spellAbility + '+pro vsWis at adv if fighting 30ft 1 target+1/slot 1hr',
 b='0d0+0',
 c='cha at adv vs target doing reasonable commands',
 damageDice='0d0+0',
 getAction(t1)
}

 function ChillTouch()
 {a='Cantrip(Chill Touch)+' + characters[targeted].spellAbility + '+pro touch',
 b='1d20+0',
 c='necro+1d8@5,11,17th lvl',
 damageDice='1d8+0',
 getAction(t1)
}

 function ChromaticOrb()
 {a='1st(Chromatic Orb)+' + characters[targeted].spellAbility + '+pro 90ft 4in diame',
 b='1d20+0',
 c='acid, cold, fire, lightning, poison, or thunder +1d8/slot',
 damageDice='3d8+0',
 getAction(t1)
}

 function CloudOfDaggers()
 {a='2nd(Cloud of Daggers)60ft concentration 10/10 turns',
 b='0d0+0',
 c='all take slash damage+2d4/slot entering or starting turn in 5ft cube area',
 damageDice='4d4+0',
 getAction(t1)
}

 function ColorSpray()
 {a='1st(Color Spray)self 15ft cone, 10/10 turns',
 b='0d0+0',
 c='6d10 lowest current hp targets are blinded',
 damageDice='6d10+0',
 getAction(t1)
}

 function Command()
 {a='1st(Command)60ft 10/10 turns 1 target+1/slot DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='0d0+0',
 c='target obeys Approach, Drop, Flee, Grovel, or Halt',
 damageDice='0d0+0',
 getAction(t1)
}

 function ComprehendLanguages()
 {a='1st(Comprehend Languages)ritual self 1hr understand any spoken touch writing 10/10 turns and understand',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ConjureBarrage()
 {a='3rd(Conjure Barrage)Throw weapon or ammo; copies rain down)DC8+' + characters[targeted].spellAbility + '+pro vsDex halves conj 60ft cone m',
 b='0d0+0',
 c='weapon type',
 damageDice='3d6+0',
 getAction(t1)
}

 function ContinualFlame()
 {a='2nd(Continual Flame)touch m',
 b='0d0+0',
 c='light no heat or need of oxygen is covered but not smothered or quenched til dispelled',
 damageDice='0d0+0',
 getAction(t1)
}

 function Cripple()
 {a='(Cripple)DC8+' + characters[targeted].spellAbility + '+pro vsCon, 1 action, 60ft, 1 target',
 b='0d0+0',
 c='target moves 10ft or half its speed whichever is less uteo' + characters[x].name + ' s nt',
 damageDice='0d0+0',
 getAction(t1)
}

 function CrownOfMadness()
 {a='2nd(Crown of Madness)DC8+' + characters[targeted].spellAbility + '+pro vsWis 1 target 120ft concentration 10/10 turns',
 b='0d0+0',
 c='target melee attacks your choice or acts normally wis saves ateoet',
 damageDice='0d0+0',
 getAction(t1)
}

 function CreateDestroyWater()
 {a='1st(Create/Destroy Water)Create/destroy 10+2/slot level gal of water in open container; or Create rain/destroy fog in 30+5/slot levelft cube 30ft P 229',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function CureWounds()
 {a='1st(Cure Wounds)touch',
 b='0d0+0',
 c='heal 1d8+spellAbiMod+1d8/slot',
 damageDice='1d8+0',
 getAction(t1)
}

 function DancingLights()
 {a='Cantrip(Dancing Lights)concentration 1min',
 b='0d0+0',
 c='4 20ft linked 2.5x2.5ft or 1 5x5ft torch 10ft dim light radius bonus move lights 60ft within 120ft',
 damageDice='0d0+0',
 getAction(t1)
}

 function Darkness()
 {a='2nd(Darkness)60ft concentration 10min 15ft radius area',
 b='0d0+0',
 c='darkvision is useless Light spells of 2nd(or less are dispelled',
 damageDice='0d0+0',
 getAction(t1)
}

 function Darkvision()
 {a='2nd(Darkvision)touch 8hrss',
 b='0d0+0',
 c='you or ally darkvision 60ft',
 damageDice='0d0+0',
 getAction(t1)
}

 function DetectEvilGood()
 {a='1st(Detect Evil/Good)Know if aberration, celestial, elemental, fey, fiend, undead, and des-/consecrated area within 30ft Div Self concentration 10min P 231',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function DetectMagic()
 {a='1st(Detect Magic)ritual self concentration 10min',
 b='0d0+0',
 c='sense magic 30ft radi, see magic aura around object or being, know school',
 damageDice='0d0+0',
 getAction(t1)
}

 function DetectPoisonDisease()
 {a='1st(Detect Poison and Disease)Know presence, location, and type of poisons, poisonous Creatures, and diseases within 30ft Self concentration 10min P 231',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function DetectThoughts()
 {a='2nd(Detect Thoughts)self concentration 10/10 turns 30ft 1 target Int4 or more learn surface thoughts switch targets)DC8+' + characters[targeted].spellAbility + '+pro vsWis learn reasoning, emotional state, worries, loves, hates',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function DireFamiliar()
 {a='(Dire Familiar)1 action',
 b='0d0+0',
 c='familiar temp hp+your witch lvl HP+' + characters[x].lvl + ', atks and dmg+your chaMod ' + characters[x].chaMod + '',
 damageDice='0d0+0',
 getAction(t1)
}

 function Discord()
 {a='(Discord)1 action, 1 target, 60ft, DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='0d0+0',
 c='target must atk an adjacent being before moving tteo ' + characters[x].name + ' s nt',
 damageDice='0d0+0',
 getAction(t1)
}

 function Disorient()
 {a='(Disorient)1 action, 1 target, 60ft, DC8+' + characters[targeted].spellAbility + '+pro vsCon',
 b='1d6+0',
 c='atk roll-1d6 before tteo ' + characters[x].name + ' s nt',
 damageDice='0d0+0',
 getAction(t1)
}

 function DisguiseSelf()
 {a='1st(Disguise Self)DC8+' + characters[targeted].spellAbility + '+pro vsInves self',
 b='0d0+0',
 c='1hr appearance changes but not body type',
 damageDice='0d0+0',
 getAction(t1)
}

 function DissonantWhispers()
 {a='1st(Dissonant Whispers)1 target, DC8+' + characters[targeted].spellAbility + '+pro vsWis halves and no fleeing deaf immune 60ft',
 b='0d0+0',
 c='psych+1d6/slot and flee',
 damageDice='3d6+0',
 getAction(t1)
}

 function DruidCraft()
 {a='Cantrip(DruidCraft)predict weather, expedite small plant growth, snuff light, harmless sensory effect 3ft s',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Duplicity()
 {a='(Duplicity)1 action, self, create shadowstuff self, attacker rolls a die and odd number result attacks your duplicate uteo ' + characters[x].name + ' s nt',
 b='0d0+0',
 c='psych+1d6/slot and flee',
 damageDice='3d6+0',
 getAction(t1)
}

 function EarthTremor()
 {a='1st(Earth Tremor)Evocation 1act 10ft x 10ft instant DC8+' + characters[targeted].spellAbility + '+pro vsDex 100ft radi',
 b='0d0+0',
 c='bludgeoning+knocked prone+difficult terrain 1min to clear 5ft,2ndSlot+1d6',
 damageDice='1d6+0',
 getAction(t1)
}

 function EnhanceAbility()
 {a='2nd(Enhance Ability)1+1/slot level targets adv. on checks with 1 stat; choosing Str, Dex, Con gives secondary benefits touch concentration 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function EnlargeReduce()
 {a='2nd(Enlarge/Reduce)30ft concentration 10/10 turns unwilling target)DC8+' + characters[targeted].spellAbility + '+pro vsCon *Enlarge size x 2 weight x 8 str at adv +1d4 weapon damage *or Reduce size/2 weight/8 str at disadv -1d4 weapon damage',
 b='0d0+0',
 c='',
 damageDice='1d4+0',
 getAction(t1)
}

 function Entangle()
 {a='1st(Entangle)difficult terrain and 20ft sq area)DC8+' + characters[targeted].spellAbility + '+pro vsDex or restrained save ateo/target turn 90ft concentration 1min',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Enthrall()
 {a='2nd(Enthrall)DC8+' + characters[targeted].spellAbility + '+pro vsWis 60ft 10/10 turns',
 b='0d0+0',
 c='Perception at disadv for any other than you',
 damageDice='0d0+0',
 getAction(t1)
}

 function ExpeditiousRetreat()
 {a='1st(Expeditious Retreat)1bonus self concentration 10min',
 b='0d0+0',
 c='Dash as bonus',
 damageDice='0d0+0',
 getAction(t1)
}

 function ExplosiveRound()
 {a='(Explosive Round)DC8+' + characters[targeted].spellAbility + '+pro vsDex, 2h, 1act, 150/500ft 30ft rad',
 b='0d0+0',
 c='fire+dex',
 damageDice='4d8+0',
 getAction(t1)
}

 function FaerieFire()
 {a='1st(Faerie Fire) 60ft 20ft cube DC8+' + characters[targeted].spellAbility + '+pro vsDex concentration 10/10 turns',
 b='0d0+0',
 c='outlined in 10ft dim light and attacked at adv, even invisible',
 damageDice='0d0+0',
 getAction(t1)
}

 function FalseLife()
 {a='1st(False Life)self 1hr',
 b='0d0+0',
 c='+5 temp hp/slot',
 damageDice='1d4+4',
 getAction(t1)
}

 function FeatherFall()
 {a='1st(Feather Fall)1 reaction 60ft 10/10 turns',
 b='0d0+0',
 c='you and 4 allies slow to 60ft/rnd for 10rnds',
 damageDice='0d0+0',
 getAction(t1)
}

 function FindFamiliar()
 {a='1st(Find Familiar)1hr ritual 10ft',
 b='0d0+0',
 c='celestial, fey or fiend stats appears as bat, cat, or crab, etc 100ft telepathic link and share senses summon dismiss 1act ',
 damageDice='0d0+0',
 getAction(t1)
}

 function FireBolt()
 {a='Cantrip(Fire Bolt)+' + characters[targeted].spellAbility + '+pro 120ft',
 b='1d20+0',
 c='fire+1d10@5,11,17th lvl',
 damageDice='1d10+0',
 getAction(t1)
}

 function FlamingSphere()
 {a='2nd(Flaming Sphere)60ft concentration 10/10 turns)DC8+' + characters[targeted].spellAbility + '+pro vsDex for half fire when turn ends in 5ft diame area bonus move sphere 30ft 5ft high 10ft wide 20ft radius light+20ft dim ignites flammables',
 b='0d0+0',
 c='fire+1d6/slot',
 damageDice='2d6+0',
 getAction(t1)
}

 function FogCloud()
 {a='1st(Fog Cloud)120ft concentration 1hr',
 b='0d0+0',
 c='20ft rad+20ft/slot cloud obscures area',
 damageDice='0d0+0',
 getAction(t1)
}

 function Fortune()
 {a='(Fortune)1 action, 1 target, 60ft',
 b='0d0+0',
 c='ability checks and saving throws at adv uteo ' + characters[x].name + ' s nt',
 damageDice='0d0+0',
 getAction(t1)
}

 function Friends()
 {a='Cantrip(Friends)DC8+' + characters[targeted].spellAbility + '+pro vsWis self s,m concentration 10/10 turns',
 b='0d0+0',
 c='cha at adv vs target doing reasonable commands',
 damageDice='0d0+0',
 getAction(t1)
}

 function GentleRepose()
 {a='2nd(Gentle Repose)touch 10 days',
 b='0d0+0',
 c='corpse can not decay or become undead extends Raise Dead time limit',
 damageDice='0d0+0',
 getAction(t1)
}

 function Goodberry()
 {a='1st(Goodberry)Create 10 berries to eat 1 berry for 1 hp and nourishment for 1 day; berries lose potency after 24h touch m',
 b='0d0+0',
 c='heal',
 damageDice='0d0+1',
 getAction(t1)
}

 function GoUnseen()
 {a='(Go Unseen)1 action, you and your familiar become invisible',
 b='0d0+0',
 c='invisible uteoynt or you or your familiar attack',
 damageDice='0d0+0',
 getAction(t1)
}

 function Grease()
 {a='1st(Grease)DC8+' + characters[targeted].spellAbility + '+pro vsDex 60ft 10/10 turns',
 b='0d0+0',
 c='Prone all targets who enter or finish a turn in the area dex save',
 damageDice='0d0+0',
 getAction(t1)
}

 function Guidance()
 {a='Cantrip(Guidance)touch concentration 10/10 turns',
 b='0d0+0',
 c='1 target abi checks+1d4',
 damageDice='1d4+0',
 getAction(t1)
}

 function GuidingBolt()
 {a='1st(Guiding Bolt)+' + characters[targeted].spellAbility + '+pro 120ft 10/10 turns',
 b='1d20+0',
 c='radiant+1d6/slot and target attacked at adv next turn',
 damageDice='4d6+0',
 getAction(t1)
}

 function GustOfWind()
 {a='2nd(Gust of Wind)DC8+' + characters[targeted].spellAbility + '+pro vsStr concentration 10/10 turns 60ft line 10ft wide',
 b='0d0+0',
 c='pushed 15ft move 2ft speed halved moving toward you extinguishes flames bonus change line direction',
 damageDice='0d0+0',
 getAction(t1)
}

 function HealingWord()
 {a='1st(Healing Word)Heals 1 living Creature 1d4+1d4 per slot level' + characters[targeted].spellAbility + '60ft',
 b='0d0+0',
 c='heal',
 damageDice='1d4+0',
 getAction(t1)
}

 function HeatMetal()
 {a='2nd(Heat Metal)1 metal obj)DC8+' + characters[targeted].spellAbility + '+pro vsCon 60ft concentration 10/10 turns',
 b='0d0+0',
 c='fire+1d8/slot and drop obj or attack at disadv',
 damageDice='2d8+0',
 getAction(t1)
}

 function Heroism()
 {a='1st(Heroism)1 target+1/slot touch concentration 1min',
 b='0d0+0',
 c='immune fear gains your spell abi mod temp hp each turn concentration 1min 10/10',
 damageDice='0d0+0',
 getAction(t1)
}

 function HellishRebuke()
 {a='1st(Hellish Rebuke)reaction when hit, DC8+' + characters[targeted].spellAbility + '+pro vsDex for half 60ft',
 b='0d0+0',
 c='fire+1d10/slot',
 damageDice='2d10+0',
 getAction(t1)
}

 function Hesitate()
 {a='(Hesitate)1 action, 1 target, 60ft, DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='0d0+0',
 c='target can move or attack but not both during its turn uteo ' + characters[x].name + ' s nt',
 damageDice='2d10+0',
 getAction(t1)
}

 function Hex()
 {a='1st(Hex)target 1abi at disadv slot3 concentration 8hrs slot5 concentration 24hrs bonus 90ft concentration 1hr',
 b='0d0+0',
 c='extra damage necro',
 damageDice='1d6+0',
 getAction(t1)
}

 function HoldPerson()
 {a='2nd(Hold Person)60ft concentration 10/10 turns 1 target+1/slot DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='0d0+0',
 c='paralyzed reroll wis save ateoet',
 damageDice='0d0+0',
 getAction(t1)
}

 function Identify()
 {a='1st(Identify)DC8+' + characters[targeted].spellAbility + '+pro vsDex 10/10 turns ritual touch',
 b='0d0+0',
 c='learn magic item or affected being s properties, attunement, charges, conditions',
 damageDice='0d0+0',
 getAction(t1)
}

 function IllusoryScript()
 {a='1st(Illusory Script)10/10 turns ritual touch s,m 10 days',
 b='0d0+0',
 c='illusion hides script from all except who you will to read Truesight can read',
 damageDice='0d0+0',
 getAction(t1)
}

 function InflictWounds()
 {a='1st(Inflict Wounds)+' + characters[targeted].spellAbility + '+pro touch',
 b='1d20+0',
 c='necro+1d10/slot',
 damageDice='1d10+0',
 getAction(t1)
}

 function Invisibility()
 {a='2nd(Invisibility)touch concentration 1hr',
 b='0d0+0',
 c='you or ally+1/slot and gear becomes invisible til attack or cast',
 damageDice='0d0+0',
 getAction(t1)
}

 function Jump()
 {a='1st(Jump)touch 10/10 turns',
 b='0d0+0',
 c='you or ally jump distance x 3',
 damageDice='0d0+0',
 getAction(t1)
}

 function Knock()
 {a='2nd(Knock)60ft',
 b='0d0+0',
 c='300ft loud knock sound as magical and nonmagical locks are unlocked',
 damageDice='0d0+0',
 getAction(t1)
}

 function LesserRestoration()
 {a='2nd(Lesser Restoration)1 target cured of 1 disease, or 1 condition: blinded, deafened, paralyzed, or poisoned touch',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Levitate()
 {a='2nd(Levitate)1 target)DC8+' + characters[targeted].spellAbility + '+pro vsCon or obj up to 500lbs rise vertically up to 20ft move up/down 20ft 60ft concentration 10min',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Light()
 {a='Cantrip(Light)DC8+' + characters[targeted].spellAbility + '+pro vsDex on target touch m',
 b='0d0+0',
 c='1hr 20ft radius light +20ft radius dim light from 10ft or less cu point',
 damageDice='0d0+0',
 getAction(t1)
}

 function LightningArrow()
 {a='3rd(Lightning Arrow)Next ranged weapon attack 10ft)DC8+' + characters[targeted].spellAbility + '+pro vsDex halves bonus self concentration 10/10 turns',
 b='0d0+0',
 c='lightning+1d8/slot',
 damageDice='2d8+0',
 getAction(t1)
}

 function LocateAnimals()
 {a='2nd(Locate Animals or Plants)closest named or described kind of beast or plant within 5mi self m',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function LocateObject()
 {a='2nd(Locate Object)self concentration 10min know the moving direction of a familiar object or similar objects',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Longstrider()
 {a='1st(Longstrider)touch 1hr',
 b='0d0+0',
 c='you or ally+1 ally/slot speed+10ft',
 damageDice='0d0+0',
 getAction(t1)
}

 function MageArmor()
 {a='1st(Mage Armor)touch 8hrs',
 b='0d0+0',
 c='self or 1 ally unarmored, ac13+dexMod',
 damageDice='0d0+0',
 getAction(t1)
}

 function MageHand()
 {a='Cantrip(Mage Hand)30ft 10/10 turns',
 b='0d0+0',
 c='open, stow, retrieve, pour, carry up to 10lbs',
 damageDice='0d0+0',
 getAction(t1)
}

 function MagicMissile()
 {a='1st(Magic Missile)120ft',
 b='1d20+99',
 c='3 glowing darts+1/slot force',
 damageDice='1d4+1',
 getAction(t1)
}

 function MagicMouth()
 {a='2nd(Magic Mouth ritual 10/10 turns 30ft til dispelled',
 b='0d0+0',
 c='object speaks 25 word message triggered by beings you specify',
 damageDice='0d0+0',
 getAction(t1)
}

 function Mending()
 {a='Cantrip(Mending)touch repair 1ft cube single break or tear in magical or non-magical object but not restore magic',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Message()
 {a='Cantrip(Message)120ft 10/10 turns 1 target hears Silence dispels',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MinorIllusion()
 {a='Cantrip(Minor Illusion)DC8+' + characters[targeted].spellAbility + '+pro vsInves 30ft 10/10 turns',
 b='0d0+0',
 c='creates a sound or up to a 5ft cube image. 1 action Inves vs spell dc to discern',
 damageDice='0d0+0',
 getAction(t1)
}

 function MagicCircle()
 {a='3rd(Magic Circle)10/10 turns 10ft 1hr 10ft radius 20ft tall cylinder allies immune charm fear, possession attacked at disadv select celestials, elementals, etc can not enter unless)DC8+' + characters[targeted].spellAbility + '+pro vsCha to Teleport or Interplanar Travel in',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MajorImage()
 {a='3rd(Major Image 120ft concentration 10min 20ft cube image to move image)DC8+' + characters[targeted].spellAbility + '+pro vsInves to detect',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MagicWeapon()
 {a='2nd(Magic Weapon)bonus touch concentration 1hr',
 b='0d0+0',
 c='weapon becomes +1/+1 more@4th/+1 more@6th attack and damage magical',
 damageDice='0d0+0',
 getAction(t1)
}

 function MelfsAcidArrow()
 {a='2nd(Melf s Acid Arrow)90ft' + characters[targeted].spellAbility + '+pro',
 b='1d20+0',
 c='on miss half damage acid+1d4/slot +2d4+1d4/slot ateofin turn',
 damageDice='4d4+0',
 getAction(t1)
}

 function Mire()
 {a='(Mire)1 action, 30ft, ground becomes swamp difficult terrain 1/2 speed, you move without penalty',
 b='0d0+0',
 c='fire+1d10/slot',
 damageDice='2d10+0',
 getAction(t1)
}

 function MirrorImage()
 {a='2nd(Mirror Image)self 10/10 turns 3 clones d20 6+ 1 clone AC10+dex destroyed 8+ another clone 10; the last clone blindsight truesight immune',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Misfortune()
 {a='(Misfortune)1 action, 1 target, 60ft, DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='1d6+0',
 c='ability checks and saving throws-1d6 uteo ' + characters[x].name + ' s nt',
 damageDice='0d0+0',
 getAction(t1)
}

 function MistyStep()
 {a='2nd(Misty Step)teleport 30ft bonus self v',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Moonbeam()
 {a='2nd(Moonbeam)5ft radius 40ft high dim light area moveable up to 60ft/turn)DC8+' + characters[targeted].spellAbility + '+pro vsCon 120ft concentration 1min',
 b='0d0+0',
 c='radiant+1d10/slot',
 damageDice='2d10+0',
 getAction(t1)
}

 function Nails()
 {a='(Nails)1 attack and 1 bonus attack, unarmed strikes+1d4 magical dmg',
 b='0d0+0',
 c='',
 damageDice='1d4+0',
 getAction(t1)
}

 function NystulsMagicAura()
 {a='2nd(Nystul s Magic Aura)touch 24hrs recast 30days til dispelled',
 b='0d0+0',
 c='False Aura object or being magic appears nonmagic vs versa change school appearance *or Mask being appears as different alignment or racial type',
 damageDice='0d0+0',
 getAction(t1)
}

 function Obfuscate()
 {a='(Obfuscate)1 action, 20ft radius sphere cloud, self',
 b='0d0+0',
 c='obscured terrain uteoynt or 10mi>wind',
 damageDice='0d0+0',
 getAction(t1)
}

 function Pestilence()
 {a='(Pestilence)1 action, 5ft radius sphere poison cloud around you that follows you, all targets that enter or start turn in cloud, DC8+' + characters[targeted].spellAbility + '+pro vsCon',
 b='0d0+0',
 c='poisoned uteo ' + characters[x].name + ' s nt',
 damageDice='0d0+0',
 getAction(t1)
}

 function PassWithoutTrace()
 {a='2nd(Pass without Trace)Any within 30ft radius +10 Dex(Stealth)checks, leave no tracks, can t be tracked by nonmagical means self concentration 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function PhantasmalForce()
 {a='2nd(Phantasmal Force)60ft concentration 10/10 turns)DC8+' + characters[targeted].spellAbility + '+pro vsInt or Create 10ft cube illusory being',
 b='0d0+0',
 c='*False Aura object or being magic appears nonmagic vs versa change school appearance *or Mask being appears as different alignment or racial type',
 damageDice='0d0+0',
 getAction(t1)
}

 function PiercingRound()
 {a='(Piercing Round)DC8+' + characters[targeted].spellAbility + '+pro vsDex for half, 2h, 1act,5x30ft line',
 b='0d0+0',
 c='lightning+dex, 6d6@19th',
 damageDice='4d6+0',
 getAction(t1)
}

 function PoisonSpray()
 {a='Cantrip(Poison Spray)DC8+' + characters[targeted].spellAbility + '+pro vsCon 10ft',
 b='0d0+0',
 c='poison+1d12@5,11,17th lvl',
 damageDice='1d12+0',
 getAction(t1)
}

 function Prestidigitation()
 {a='Cantrip(Prestidigitation 10ft 1hr shower sparks, puff of wind, faint musical notes, odd oder light or snuff torch clean soil 1ft cube chill warm flavor food Create 1 mark 1hr illusory trinket till t e o y n turn',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ProduceFlame()
 {a='Cantrip(Produce Flame)30ft ranged attack+' + characters[targeted].spellAbility + '+pro and 10ft light from self 10min',
 b='1d20+0',
 c='fire+1d8@5,11,17',
 damageDice='1d8+0',
 getAction(t1)
}

 function ProtectionFromEvilOrGood()
 {a='1st(Protection from Evil or Good)abjur',
 b='0d0+0',
 c='immune to fear charm posse and attac at disadv by abber celes eleme fey fiend undea characters[targeted].name concentration 10min',
 damageDice='0d0+0',
 getAction(t1)
}

 function PurifyFoodAndDrink()
 {a='1st(Purify Food and Drink)5ft radius food and drink free of poison disease 10ft',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function RayOfFrost()
 {a='Cantrip(Ray of Frost+' + characters[targeted].spellAbility + '+pro 60ft',
 b='1d20+0',
 c='cold +1d8@5,11,17th lvl and target speed-10ft',
 damageDice='1d8+0',
 getAction(t1)
}

 function RayOfSickness()
 {a='1st(Ray of Sickness)60ft',
 b='1d20+0',
 c='poison and con sav or poisoned condition',
 damageDice='2d8+0',
 getAction(t1)
}

 function Resistance()
 {a='Cantrip(Resistance)touch concentration 10/10 turns',
 b='0d0+0',
 c='1 target saves+1d4',
 damageDice='1d4+0',
 getAction(t1)
}

 function RayOfEnfeeblement()
 {a='2nd(Ray of Enfeeblement)+' + characters[targeted].spellAbility + '+pro 60ft concentration',
 b='1d20+0',
 c='str atks do 1/2dmg.10/10turns or con save ateoet',
 damageDice='0d0+0',
 getAction(t1)
}

 function RopeTrick()
 {a='2nd(Rope Trick)touch 1hr',
 b='0d0+0',
 c='60ft rope rises up to extradimensional space for you and 7 allies you can see out 3x5ft window',
 damageDice='0d0+0',
 getAction(t1)
}

 function Ruin()
 {a='(Ruin)1 action, 1 target, 60ft, DC8+' + characters[targeted].spellAbility + '+pro vsCon',
 b='0d0+0',
 c='AC-4 to a max of 10 uteo ' + characters[x].name + ' s nt',
 damageDice='0d0+0',
 getAction(t1)
}

 function ScorchingRay()
 {a='2nd(Scorching Ray)+' + characters[targeted].spellAbility + '+pro 120ft',
 b='1d20+0',
 c='3 rays+1/slot fire',
 damageDice='2d6+0',
 getAction(t1)
}

 function SeeInvisibility()
 {a='2nd(See Invisibility)self 1hr',
 b='0d0+0',
 c='see invisible beings and Ethereal Plane',
 damageDice='0d0+0',
 getAction(t1)
}

 function Shatter()
 {a='2nd(Shatter)DC8+' + characters[targeted].spellAbility + '+pro vsCon for half 60ft 10ft radius metal, crystal, stone beings save at disadv',
 b='0d0+0',
 c='thunder+1d8/slot',
 damageDice='3d8+0',
 getAction(t1)
}

 function Silence()
 {a='2nd(Silence)20ft radius no sound can propagate; all within deafened, immune to Thunder damage, can t use verbal comp. 120ft concentration 10min',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function SpiderClimb()
 {a='2nd(Spider Climb)touch concentration 1hr',
 b='0d0+0',
 c='climb speed is walk speed',
 damageDice='0d0+0',
 getAction(t1)
}

 function Suggestion()
 {a='2nd(Suggestion)DC8+' + characters[targeted].spellAbility + '+pro vsWis 30ft concentration 8hrss',
 b='0d0+0',
 c='2 reasonable suggestion phrases triggered by events spell ends if you or allies harm',
 damageDice='0d0+0',
 getAction(t1)
}

 function SacredFlame()
 {a='Cantrip(Sacred Flame)60ft DC8+' + characters[targeted].spellAbility + '+pro vsDex',
 b='0d0+0',
 c='radiant+1d8@5,11,17th lvl',
 damageDice='1d8+0',
 getAction(t1)
}

 function Sanctuary()
 {a='1st(Sanctuary)1 target warded; any who want to attack/target must first make save; does not protect vs. area spells)DC8+' + characters[targeted].spellAbility + '+pro vsWis 30ft 10/10 turns P 272',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Shield()
 {a='1st(Shield)1 reaction self 10/10 turns',
 b='0d0+0',
 c='Shield spell ac+5 immune Magic Missile',
 damageDice='0d0+0',
 getAction(t1)
}

 function ShieldOfFaith()
 {a='1st(Shield of Faith)1 target gains +2 AC for the duration 60ft concentration 10min',
 b='0d0+0',
 c='Shield of Faith AC+2 for encounter duration',
 damageDice='0d0+0',
 getAction(t1)
}

 function Shillelagh()
 {a='Cantrip(Shillelagh)club or quarterstaff attack+' + characters[targeted].spellAbility + '+pro 1 bonus touch 1min',
 b='1d20+0',
 c='2h quarterstaff bludg+spell damage',
 damageDice='2d8+0',
 getAction(t1)
}

 function ShockingGrasp()
 {a='Cantrip(Shocking Grasp)+' + characters[targeted].spellAbility + '+pro touch',
 b='1d20+0',
 c='vs unarmored at adv lightning +1d8@5,11,17th lvl and target speed-10ft',
 damageDice='1d8+0',
 getAction(t1)
}

 function SilentImage()
 {a='1st(Silent Image)DC8+' + characters[targeted].spellAbility + '+pro vsInves 60ft concentration 10min',
 b='0d0+0',
 c='create 15ft cube image you can move within range',
 damageDice='0d0+0',
 getAction(t1)
}

 function Sleep()
 {a='1st(Sleep)90ft 10/10 turns',
 b='0d0+0',
 c='20ft radius 5d8+2d8/slot lowest hp targets sleep til slapped or damage undead immune',
 damageDice='0d0+0',
 getAction(t1)
}

 function Slumber()
 {a='(Slumber)1 action, 1 target, 60ft, DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='0d0+0',
 c='target sleeps until slapped or damaged or uteo ' + characters[x].name + ' s nt',
 damageDice='0d0+0',
 getAction(t1)
}

 function SpareTheDying()
 {a='Cantrip(Spare the Dying)touch',
 b='0d0+0',
 c='being with 0hp becomes stable less undead and constructs',
 damageDice='0d0+0',
 getAction(t1)
}

 function SpeakWithAnimals()
 {a='1st(Speak with Animals)self s',
 b='0d0+0',
 c='you communicate with beasts according to their Int for 10min',
 damageDice='0d0+0',
 getAction(t1)
}

 function TashasHideousLaughter()
 {a='1st(Tasha s Hideous Laughter)DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='0d0+0',
 c='prone laughing wis save each eointurn or after each damage',
 damageDice='0d0+0',
 getAction(t1)
}

 function Telepathy()
 {a='1 any language knowning target, 60ft',
 b='0d0+0',
 c='communicate telepathically',
 damageDice='0d0+0',
 getAction(t1)
}

 function TensorsFloatingDisk()
 {a='1st(Tenser s Floating Disk)ritual 30ft 1hr',
 b='0d0+0',
 c='3ft diame 1in thick floats 3ft above holds 500lbs follows within 20ft of you',
 damageDice='0d0+0',
 getAction(t1)
}

 function Thaumaturgy()
 {a='Cantrip(Thaumaturgy)30ft up to 10/10 turns cast 3 times for 3 of the effects below *voice x 3 loud *or flames brighten dim change color *or harmless ground tremors *or Create sound *or unlocked door window open or shut',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ThornWhip()
 {a='Cantrip(Thorn Whip)attack+' + characters[targeted].spellAbility + '+pro 30ft m',
 b='1d20+0',
 c='piercing+1d6@5,11,17 and target pulled 10ft to you',
 damageDice='1d6+0',
 getAction(t1)
}

 function ThunderCannon()
 {a='(Thunder Cannon)+dex+pro 2h, 150/500ft, 1act',
 b='1d20+0',
 c='piercing+dex',
 damageDice='2d6+0',
 getAction(t1)
}

 function Thunderclap()
 {a='Cantrip(Thunderclap)1act 5ft S instant DC8+' + characters[targeted].spellAbility + '+pro vsCon 100ft radi',
 b='0d0+0',
 c='thunder+1d6@5,11,17th lvl',
 damageDice='1d6+0',
 getAction(t1)
}

 function ThunderMonger()
 {a='(Thunder Monger)+dex+pro 2h, 150/500ft, 1act',
 b='1d20+0',
 c='thunder and piercing+dex 4d6@5th, 5d6@11th, 6d6@13th, 7d6@15th, 8d6@17th, 9d6@19th',
 damageDice='3d6+0',
 getAction(t1)
}

 function Thunderwave()
 {a='1st(Thunderwave)DC8+' + characters[targeted].spellAbility + '+pro vsCon for half 15ft cube',
 b='0d0+0',
 c='thunder+1d8/slot and targets pushed 10ft',
 damageDice='2d8+0',
 getAction(t1)
}

 function Tremors()
 {a='(Tremors)1 action, 30ft radius, chosen targets, DC8+' + characters[targeted].spellAbility + '+pro vsDex, ',
 b='0d0+0',
 c='knocked prone and can not rise until teo ' + characters[x].name + ' s nt',
 damageDice='0d0+0',
 getAction(t1)
}

 function TrueStrike()
 {a='Cantrip(True Strike)30ft concentration 10/10 turns your next turn 1st attac at adv',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function UnseenServant()
 {a='1st(Unseen Servant)ritual 60ft 1hr',
 b='0d0+0',
 c='servant AC10, 1HP, Str2 bonus command fetch, clean, mend, fold, light, serve, pour telepathically',
 damageDice='0d0+0',
 getAction(t1)
}

 function ViciousMockery()
 {a='Cantrip(Vicious Mockery 1 target)DC8+' + characters[targeted].spellAbility + '+pro vsWis 60ft',
 b='0d0+0',
 c='pysch+1d4@5,11,17th lvl next roll at disadv',
 damageDice='1d4+0',
 getAction(t1)
}

 function Ward()
 {a='(Ward)1 ally, 60ft',
 b='0d0+0',
 c='resistance to bludgeoning, piercing, slashing, non-magical weapons uteo ' + characters[x].name + ' s nt',
 damageDice='0d0+0',
 getAction(t1)
}

 function WitchBolt()
 {a='1st(Witch Bolt)Spell attack+' + characters[targeted].spellAbility + '+pro may each turn use to deal auto 1d12 lightning else spell ends 30ft concentration 10/10 turns',
 b='1d20+0',
 c='lightning+1d12/slot',
 damageDice='1d12+0',
 getAction(t1)
}

 function Web()
 {a='2nd(Web)DC8cha+pro vsDex 60ft concentration 1hr 20cu ft',
 b='0d0+0',
 c='difficult terrain, restrained, str to escape, fire 10/10 turns',
 damageDice='2d4+0',
 getAction(t1)
}

 function ZoneOfTruth()
 {a='2nd(Zone of Truth 15ft radius all in or enter save or unable to lie; you aware if saved or not; targets aware it cannot lie Cha 60ft 10min',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function FindTraps()
 {a='2nd(Find Traps)Sense presence of any trap within line of sight; not exact location, but general nature of trap Div 120ft',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function FlameBlade()
 {a='2nd(Flame Blade)Summon a fiery blade 10ft light 1 bonus self concentration 10min melee attack+' + characters[targeted].spellAbility + '+pro',
 b='0d0+0',
 c='fire+1d6/slot',
 damageDice='3d6+0',
 getAction(t1)
}

 function PrayerOfHealing()
 {a='2nd(Prayer of Healing)6 Creatures heal 2d8+1d8 per slot level' + characters[targeted].spellAbility + 'hp 10min 30ft',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ProtectionFromPoison()
 {a='2nd(Protection from Poison)touch 1 target 1hr',
 b='0d0+0',
 c='cured of 1 poison, resists poison damage, saves vs poison at adv',
 damageDice='0d0+0',
 getAction(t1)
}

 function SpikeGrowth()
 {a='2nd(Spike Growth)20ft radius difficult terrain all take damage every 5ft moved 150ft concentration 10min',
 b='0d0+0',
 c='',
 damageDice='1d4+0',
 getAction(t1)
}

 function SpiritualWeapon()
 {a='2nd(Spiritual Weapon)+wis+pro move weapon 20ft and bonus attack 60ft (10/10)turns',
 b='1d20+0',
 c='force+1d8/slot',
 damageDice='0d0+0',
 getAction(t1)
}

 function WardingBond()
 {a='2nd(Warding Bond)1 target +1 AC, +1 saves, resistance all damage; if it takes damage you take same damage; ends if >60ft away touch 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function AnimateDead()
 {a='3rd(Animate Dead)10/10 turns 10ft Create 1 medium or 1 small skeleton or zombie+2/slot 60ft bonus command',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function BestowCurse()
 {a='3rd(Bestow Curse touch concentration 10/10 turns)DC8+' + characters[targeted].spellAbility + '+pro vsWis or',
 b='0d0+0',
 c='*1 abi at disadv or *attacks you at disadv or *wis save or no actions/turn or *weapon damage+1d8necro',
 damageDice='1d8+0',
 getAction(t1)
}

 function Blink()
 {a='3rd(Blink)self 10/10 turns roll d20 11+ enter the Ethereal Plane ateoet and reappear 10ft at the start of each turn',
 b='1d20+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function CallLightning()
 {a='3rd(Call Lightning)60ft radius 10 ft tall cloud 100ft above 1 target)DC8+' + characters[targeted].spellAbility + '+pro vsDex for half 120ft concentration 10min',
 b='0d0+0',
 c='lightning+1d10/slot',
 damageDice='3d10+0',
 getAction(t1)
}

 function Clairvoyance()
 {a='3rd(Clairvoyance)10min 1mi concentration 10min',
 b='0d0+0',
 c='invisible sensor toggle see or hear in familiar location or behind a door, around a corner, in a grove of trees See Invisibility detects it',
 damageDice='0d0+0',
 getAction(t1)
}

 function ConjureAnimals()
 {a='3rd(Conjure Animals)Summon 2+2/2SL CR of beasts that obey your verbal commands 60ft concentration 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Counterspell()
 {a='3rd(Counterspell)DC8+' + characters[targeted].spellAbility + '+pro vs 10+the target spell lvl 1 reaction 60ft',
 b='0d0+0',
 c='3rd lvl spells+1 lvl/slot or lower fail',
 damageDice='0d0+0',
 getAction(t1)
}

 function DispelMagic()
 {a='3rd(Dispel Magic)120ft 3rd lvl spells+1 lvl/slot or lower are dispeled on object or being)DC8+' + characters[targeted].spellAbility + '+pro vs DC10+spell lvl dispels',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Fear()
 {a='3rd(Fear self 30ft cone concentration 10/10 turns)DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='0d0+0',
 c='drop items, frightened, Dash till out of your sight wis save each turn',
 damageDice='0d0+0',
 getAction(t1)
}

 function FeignDeath()
 {a='3rd(Feign Death)ritual touch 1hr',
 b='0d0+0',
 c='ally appears dead, blinded, incapacitated, speed 0, resists all but psychic, suspends disease poison',
 damageDice='0d0+0',
 getAction(t1)
}

 function Fireball()
 {a='3rd(Fireball)DC8+' + characters[targeted].spellAbility + '+pro vsDex for half 150ft 20ft radi',
 b='0d0+0',
 c='ignites flammables, fire+1d6/slot',
 damageDice='8d6+0',
 getAction(t1)
}

 function Fly()
 {a='3rd(Fly)touch self or ally+1/slot concentration 10min',
 b='0d0+0',
 c='fly speed 60ft',
 damageDice='0d0+0',
 getAction(t1)
}

 function GaseousForm()
 {a='3rd(Gaseous Form)touch concentration 1hr self or ally and gear',
 b='0d0+0',
 c='fly speed 10ft resists nonmagic',
 damageDice='0d0+0',
 getAction(t1)
}

 function GlyphOfWarding()
 {a='3rd(Glyph of Warding)1hr touch til dispelled or triggered on 10ft diame of stationary object',
 b='0d0+0',
 c='*Explosive Runes 20ft radius 5d8+1d8/slot acid, cold, fire, lightning or thunder *Spell Glyph triggers a 3rd lvl+1/slot or lower spell you know',
 damageDice='5d8+0',
 getAction(t1)
}

 function Haste()
 {a='3rd(Haste)30ft concentration 10/10 turns',
 b='0d0+0',
 c='you or ally speed x 2 AC+2 dex at adv +1 Dash, Disengage, Hide or Use Object action spell ends no actions or movement till after its next turn',
 damageDice='0d0+0',
 getAction(t1)
}

 function HungerOfHadar()
 {a='3rd(Hunger of Hadar)20ft radius blinds all while in)DC8+' + characters[targeted].spellAbility + '+pro vsDex 150ft concentration 1min',
 b='0d0+0',
 c='start turn auto cold damage end turn save or acid',
 damageDice='2d6+0',
 getAction(t1)
}

 function HypnoticPattern()
 {a='3rd(Hypnotic Pattern 120ft s,m concentration 10/10 turns 30ft cube targets who see)DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='0d0+0',
 c='charmed speed 0 til slapped or damage',
 damageDice='0d0+0',
 getAction(t1)
}

 function LeomundsTinyHut()
 {a='3rd(Leomund s Tiny Hut)ritual 10/10 turns self 10ft radius 8hrss you and 8 allies have dry place to rest immune spells',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function LightningBolt()
 {a='3rd(Lightning Bolt)DC8+' + characters[targeted].spellAbility + '+pro vsDex for half 100ft line',
 b='0d0+0',
 c='lightning+1d6/slot',
 damageDice='8d6+0',
 getAction(t1)
}

 function Nondetection()
 {a='3rd(Nondetection touch 8hrss',
 b='0d0+0',
 c='up to 10ft cube being is hidden from divination magic',
 damageDice='0d0+0',
 getAction(t1)
}

 function PhantomSteed()
 {a='3rd(Phantom Steed ritual 10/10 turns 30ft 1hr a horseline being is summoned for you and an ally to ride speed 100ft 10mi/hr 13mi/hr at fast pace',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function PlantGrowth()
 {a='3rd(Plant Growth)1act 100ft radius plants overgrow and slow speed by 1/4th 8hrs 1 mi diame plants yield double food at harvest 150ft s',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ProtectionFromEnergy()
 {a='3rd(Protection from Energy)touch self or 1 ally concentration 1hr',
 b='0d0+0',
 c='resist acid, cold, fire, lightning or thunder',
 damageDice='0d0+0',
 getAction(t1)
}

 function RemoveCurse()
 {a='3rd(Remove Curse)touch self or 1 ally or 1 object',
 b='0d0+0',
 c='curses on the being end, cursed attunement to an object ends',
 damageDice='0d0+0',
 getAction(t1)
}

 function Sending()
 {a='3rd(Sending unlim range 10/10 turns',
 b='0d0+0',
 c='25 word telepathic message to an int1+ ally that knows it is you and replies 5 percent message does not arrive on alternate plane',
 damageDice='0d0+0',
 getAction(t1)
}

 function SleetStorm()
 {a='3rd(Sleet Storm)150ft concentration 10/10 turns 40ft radius 20ft tall cylinder)DC8+' + characters[targeted].spellAbility + '+pro vsDex',
 b='0d0+0',
 c='enter or start turn obscured difficult terrain, flames doused, prone, concentration ntration vs spell DC',
 damageDice='0d0+0',
 getAction(t1)
}

 function Slow()
 {a='3rd(Slow)120ft concentration 10/10 turns 6 targets 40ft cube)DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='1d20+0',
 c='ac-2, dex-4, no reactions, 1 act or 1 attack, or 1 bonus, d20 11+ caster spell works on next turn or spell wasted wis save eoiturn',
 damageDice='0d0+0',
 getAction(t1)
}

 function SpeakWithDead()
 {a='3rd(Speak with Dead)1 corpse with mouth answers 5 questions with knowledge it had in life; can cast on same every 10 days 10ft 10min',
 b='0d0+0',
 c='25 word telepathic message to an int1+ ally that knows it is you and replies 5 percent message does not arrive on alternate plane',
 damageDice='0d0+0',
 getAction(t1)
}

 function SpeakWithPlants()
 {a='3rd(Speak with Plants)ask about last 24hrs events turn difficult plant terrain to normal or vice versa 30ft radius 10min',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function StinkingCloud()
 {a='3rd(Stinking Cloud)90ft concentration 10/10 turns 20ft radi)DC8+' + characters[targeted].spellAbility + '+pro vsCon',
 b='0d0+0',
 c='obscured terrain, poison retching reeling',
 damageDice='0d0+0',
 getAction(t1)
}

 function Tongues()
 {a='3rd(Tongues)touch 1hr',
 b='0d0+0',
 c='you or ally knows any spoken language for the duration',
 damageDice='0d0+0',
 getAction(t1)
}

 function VampiricTouch()
 {a='3rd(Vampiric Touch)self concentration 10/10 turns melee attack+' + characters[targeted].spellAbility + '+pro',
 b='1d20+0',
 c='heal half and do necro+1d6/slot',
 damageDice='3d6+0',
 getAction(t1)
}

 function WaterBreathing()
 {a='3rd(Water Breathing)ritual 30ft 24hrs you and 9 allies breathe on land and underwater',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function BeaconOfHope()
 {a='3rd(Beacon of Hope)Any targets in range adv. on Wis/Death saves and gains max hp from any healing 30ft concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ArcaneEye()
 {a='4th(Arcane Eye)30ft concentration 1hr visual sensor darkvision 30ft move 30ft through 1in diame on same plane',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Banishment()
 {a='4th(Banishment)60ft concentration 10/10 turns 1 target+1/slot DC8+' + characters[targeted].spellAbility + '+pro vsCha',
 b='0d0+0',
 c='targets sent to harmless demiplane, targets reappear if concentration ntration lost',
 damageDice='0d0+0',
 getAction(t1)
}

 function Blight()
 {a='4th(Blight)30ft 1 target.DC8+' + characters[targeted].spellAbility + '+pro vsCon for half, plants save at disadv, constructs undead immune',
 b='0d0+0',
 c='necro+1d8/slot',
 damageDice='8d8+0',
 getAction(t1)
}

 function BladeBarrier()
 {a='6th(Blade Barrier 100×20×5ft(l×w×h)wall or 30 radius 20x5ft(w×h)ring; 6d10 Slashing damage; save halves; 3/4 cover Dex 90ft concentration 10min P 218',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function BigbysHand()
 {a='5th(Bigby s Hand)Large hand attacks, pushes 60ft or grapples or shields AC20, your max hp; bns move 60 to 120ft concentration 10/10 turns',
 b='0d0+0',
 c='restrained, ejected on save',
 damageDice='0d0+0',
 getAction(t1)
}

 function BrandingSmite()
 {a='2nd(Branding Smite)bonus self concentration 1min',
 b='0d0+0',
 c='weapon+extra radia+1d6/slot and invisible becomes visible for concentration 10/10 turns',
 damageDice='1d6+0',
 getAction(t1)
}

 function BlindingSmite()
 {a='3rd(Blinding Smite)DC8+' + characters[targeted].spellAbility + '+pro vsCon',
 b='0d0+0',
 c='weapon+extra dmg+blinded 10/10 turns or save at the end of your turn',
 damageDice='3d8+0',
 getAction(t1)
}

 function BanishingSmite()
 {a='5th(Banishing Smite)Next melee hit bonus self concentration 1min',
 b='0d0+0',
 c='force+less than 50hp banished til spell ends',
 damageDice='5d10+0',
 getAction(t1)
}

 function Daylight()
 {a='3rd(Daylight)60ft radius bright light+60ft dim light on point or object; only magical darkness of higher SL works 60ft 1hr',
 b='0d0+0',
 c='invisible sensor toggle see or hear in familiar location or behind a door, around a corner, in a grove of trees See Invisibility detects it',
 damageDice='0d0+0',
 getAction(t1)
}

 function MassHealingWord()
 {a='3rd(Mass Healing Word)6 targets heal 1d4+1d4 per slot level' + characters[targeted].spellAbility + 'in hp 60ft',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MeldIntoStone()
 {a='3rd(Meld into Stone)You merge into a stone object large enough to contain you; can t see through the stone; touch 8hrs',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Revivify()
 {a='3rd(Revivify)touch',
 b='0d0+0',
 c='restores a Creature s body that has died in the last min to life with 1 hp',
 damageDice='0d0+0',
 getAction(t1)
}

 function WaterWalk()
 {a='3rd(Water Walk)10 willing Creatures can move across any liquid for the duration; rise to surface if underwater 30ft 1hr',
 b='0d0+0',
 c='you or ally knows any spoken language for the duration',
 damageDice='0d0+0',
 getAction(t1)
}

 function Compulsion()
 {a='4th(Compulsion)1bonus 1target)DC8+' + characters[targeted].spellAbility + '+pro vsWis or uses all movement in your chosen direction 30ft concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Confusion()
 {a='4th(Confusion 90ft concentration 10/10 turns 10ft radius targets)DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='0d0+0',
 c='d10 1 moves d8 direction no actions, 2-6 no movement no actions, 7-8 melee attack random in  or no actions, 9-10 normal actions and movement',
 damageDice='0d0+0',
 getAction(t1)
}

 function ConjureWoodlandBeings()
 {a='4th(Conjure Woodland Beings)Summon 2+2/slot CR of Fey that obey your verbal commands 60ft concentration 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function CreateFoodWater()
 {a='3rd(Create Food/Water)Create 45 pounds of food and 30 gallons of water; enough for 15 humanoids or 5 steeds for 24h 30ft',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ConjureMinorElementals()
 {a='4th(Conjure Minor Elementals)10/10 turns 90ft , concentration 1hr',
 b='0d0+0',
 c='1 CR2 or 2 CR1 or 4 CR1/2 or 8 CR1/4 x2@6thSlot x3@8th Slot',
 damageDice='0d0+0',
 getAction(t1)
}

 function ControlWater()
 {a='4th(Control Water)300ft concentration 10min 100ft cube of water rise 20ft',
 b='0d0+0',
 c='huge or less swept boats 25 percent capsize *or Part Water Create trench *or Redirect Flow *or Whirlpool 50ft sq x 25ft deep pulled down spell DC vs Athletics to escape or bludg entering or starting turn',
 damageDice='2d8+0',
 getAction(t1)
}

 function GreaterInvisibility()
 {a='4th(Greater Invisibility touch 1 target concentration 10/10 turns',
 b='0d0+0',
 c='the target and its items are invisible and attacks at adv, attacked at disadv',
 damageDice='0d0+0',
 getAction(t1)
}

 function DimensionDoor()
 {a='4th(Dimension Door)Teleport yourself and 1 ally within 5 ft, up to 500ft to a place you can see, specify, or describe 500ft P 233',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function DominateBeast()
 {a='4th(Dominate Beast)1 beast save or charmed, follows telepathic commands, for complete control +SL)DC8+' + characters[targeted].spellAbility + '+pro vsWis 60ft concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ElementalBane()
 {a='4th(Elemental Bane)1+1/slot level targets in 30ft)DC8+' + characters[targeted].spellAbility + '+pro vsCon or first attack each rnd of chosen energy does +2d6 damage; no resistance 90ft concentration 10/10 turns E 17',
 b='0d0+0',
 c='',
 damageDice='2d6+0',
 getAction(t1)
}

 function EvardsBlackTentacles()
 {a='4th(Evard s Black Tentacles)All that enter 20ft radi)DC8+' + characters[targeted].spellAbility + '+pro vsDex or restrained and 3d6 bludg damage/rnd; Str/Dex check to escape 90ft concentration 10/10 turns ',
 b='0d0+0',
 c='',
 damageDice='3d6+0',
 getAction(t1)
}

 function Fabricate()
 {a='4th(Fabricate)Create simple object from raw materials; or complex object if proficient in the appropriate artisan s tools 10min 120ft ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function FireShield()
 {a='4th(Fire Shield)+' + characters[targeted].spellAbility + '+pro damage to melee attackers Self 10min',
 b='0d0+0',
 c='resist fire or cold',
 damageDice='2d8+0',
 getAction(t1)
}

 function FreedomOfMovement()
 {a='4th(Freedom of Movement 1 willing targets; magic cannot reduce speed, paralyze, restrain; use 5ft to escape nonmagical restrains touch 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function GiantInsect()
 {a='4th(Giant Insect)10 centipedes or 3 spiders or 5 wasps, or 1 scorpion into giant versions that obey your verbal commands 30ft concentration 10min',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function GraspingVine()
 {a='4th(Grasping Vine)Conjure vine with 30ft  bonus direct)DC8+' + characters[targeted].spellAbility + '+pro vsDex or 1 target pulled 20ft to vine concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function GreaterInvisibility()
 {a='4th(Greater Invisibility)touch 1 target concentration 10/10 turns',
 b='0d0+0',
 c='the target and its items are invisible and attacks at adv, attacked at disadv',
 damageDice='0d0+0',
 getAction(t1)
}

 function HallucinatoryTerrain()
 {a='4th(Hallucinatory Terrain)150ft cube of terrain resembles some other sort of terrain;)DC8+' + characters[targeted].spellAbility + '+pro vsInves 10min 300ft 24hrs ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function IceStorm()
 {a='4th(Ice Storm)20ft radius 40ft high 1 rnd difficult terrain)DC8+' + characters[targeted].spellAbility + '+pro vsDex for half 300ft',
 b='2d8+0',
 c='bludg and cold+1d8bludge/slot',
 damageDice='4d6+0',
 getAction(t1)
}

 function LeomundsSecretChest()
 {a='4th(Leomund s Secret Chest)Hide chest with content in Ethereal Plane for 60 days, after that chance of loss; reappear(5050gp)touch',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function LocateCreature()
 {a='4th(Locate Creature)Learn direction to closest named or described kind or specific Creature within 1000 ft Self concentration 1hr ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MorFaithfulHound()
 {a='4th(Mor. Faithful Hound)Invisible, immobile dog melee attacks as spell attack+' + characters[targeted].spellAbility + '+pro for 4d8 pierc damage; sees invisible/ethereal; 30ft 8hrs ',
 b='1d20+0',
 c='',
 damageDice='4d8+0',
 getAction(t1)
}

 function MorPrivateSanctum()
 {a='4th(Mor. Private Sanctum)Up to 100+100/slot levelft cube is magically secured in chosen way; 10min 120ft 24hrs ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function OtilukesResilientSphere()
 {a='4th(Otiluke s Resilient Sphere)1 target/obj up to Large)DC8+' + characters[targeted].spellAbility + '+pro vsDex or enclosed in impenetrable sphere; can be moved as hamsterball 30ft concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function PhantasmalKiller()
 {a='4th(Phantasmal Killer)1 target DC8+' + characters[targeted].spellAbility + '+pro vsWis, 120ft, concentration, 10/10 turns',
 b='0d0+0',
 c='frightened+psychic+4d10+1d10/slot',
 damageDice='4d10+0',
 getAction(t1)
}

 function Polymorph()
 {a='4th(Polymorph)concentration 60ft on 1 target with >0 hp)DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='0d0+0',
 c='transformed into beast of choice of same CR or lower for 1 hour',
 damageDice='0d0+0',
 getAction(t1)
}

 function Pyrotechnics()
 {a='2nd(Pyrotechnics)1act 60ft instant 5ft x 5ft fire cube fireworks DC8+' + characters[targeted].spellAbility + '+pro vsCon or smoke',
 b='0d0+0',
 c='10ft fireworks blinded or full cover smoke 20ft radi',
 damageDice='0d0+0',
 getAction(t1)
}

 function DeathWard()
 {a='4th(Death Ward)touch 8hrs',
 b='0d0+0',
 c='negates first kill effect, 0hp becomes 1hp',
 damageDice='0d0+0',
 getAction(t1)
}

 function Divination()
 {a='4th(Divination)Get answer to one question about a goal, event, or activity to occur within the next 7 days Self',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function GuardianOfFaith()
 {a='4th(Guardian of Faith)DC8+' + characters[targeted].spellAbility + '+pro vsDex 30ft 8hrs',
 b='0d0+0',
 c='stationary spectre deals radius damage up to 60 then disappears',
 damageDice='0d0+20',
 getAction(t1)
}

 function StoneShape()
 {a='4th(Stone Shape Form 5 cu ft of stone into any shape; can have up to two hinges and a latch, but no finer mechanisms touch',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Stoneskin()
 {a='4th(Stoneskin)1 ally resist nonmagical bludg, pierc, and slash damage touch concentration 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function WallOfFire()
 {a='4th(Wall of Fire)60ft long 1ft wide 1ft high or 10ft radius all in and 10ft on 1 side)DC8+' + characters[targeted].spellAbility + '+pro vsDex halves; 120ft concentration 10/10 turns',
 b='0d0+0',
 c='fire+1d8/slot',
 damageDice='5d8+0',
 getAction(t1)
}

 function AnimateObjects()
 {a='5th(Animate Objects)10+2/slot level nonmagical objects not worn or carried; bns a command within 500 ft; 120ft concentration 10/10 turns',
 b='0d0+0',
 c='Tiny 20hp ac18 atk+8 dmg1d4+4 str4 dex18|Small 25hp ac16 atk+6 dmg1d8+2 str6 dex14|Medium(counts as 2 objects)40hp ac13 atk+5 dmg2d6+1 str10 dex12|Large(counts as 4 objects)50hp ac10 atk+6 dmg2d10+2 str14	dex10|Huge(counts as 8 objectss)80hp ac10	atk+8 dmg2d12+4 str18 dex6',
 damageDice='0d0+0',
 getAction(t1)
}

 function Cloudkill()
 {a='5th(Cloudkill)20ft radius 5d8+1d8/slot level Poison damage;)DC8+' + characters[targeted].spellAbility + '+pro vsCon halves; move 10 ft/rnd; heavily obscured, difficult terrain 120ft concentration 10min P 222',
 b='0d0+0',
 c='',
 damageDice='5d8+0',
 getAction(t1)
}

 function ConeOfCold()
 {a='5th(Cone of Cold)8d8+1d8/slot level Cold damage;)DC8+' + characters[targeted].spellAbility + '+pro vsCon halves; targets killed become frozen statues til thawed 60ft cone P 224',
 b='0d0+0',
 c='',
 damageDice='8d8+0',
 getAction(t1)
}

 function WrathfulSmite()
 {a='5th(Creation)Create a nonliving object up to a 5+5/slot levelft cube of vegetable matter, stone, metal, gems or rare metals 10/10 turns 30ft Special P 229',
 b='0d0+0',
 c='',
 damageDice='1d6+0',
 getAction(t1)
}

 function AntilifeShell()
 {a='5th(Antilife Shell)Only undead and constructs can come within 10ft; if forced upon living Creature the spell ends 10ft radius concentration 1hr',
 b='0d0+0',
 c='',
 damageDice='5d10+0',
 getAction(t1)
}

 function Awaken()
 {a='5th(Awaken)Give beast or plant Int 10 and ability to move. Follows commands for 30 days(1000gp cons.)8hrs touch m',
 b='0d0+0',
 c='',
 damageDice='5d10+0',
 getAction(t1)
}

 function CommuneWithNature()
 {a='5th(Commune with Nature)Know 3 facts about natural features within 3mi radius(300 ft radius underground)10/10 turns self s',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ConjureElemental()
 {a='5th(Conjure Elemental)CR5 elementals+1/slot that obey your verbal commands; on broken conc. elemental breaks free 10/10 turns 90ft concentration 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ConjureVolley()
 {a='5th(Conjure Volley)ammo thrown weapon becomes a volley 40ft radius 20ft high)DC8+' + characters[targeted].spellAbility + '+pro vsDex 150ft m',
 b='0d0+0',
 c='weapon type',
 damageDice='8d8+0',
 getAction(t1)
}

 function SwiftQuiver()
 {a='5th(Swift Quiver)Quiver gives nonmagical ammo; bns act to make 2 attacks with weapon that uses ammo from that quiver bonus touch concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function TreeStride()
 {a='5th(Tree Stride)You can teleport 1/rnd through a tree to another tree of the same kind within 500ft self concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ContactOtherPlane()
 {a='5th(Contact Other Plane)You make DC 15 save Vs Int to ask extraplanar entity 5 questions with one word answers; insane on fail Div 10/10 turns Self 10/10 turns P 226',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function DominatePerson()
 {a='5th(Dominate Person)1 humanoid DC8+' + characters[targeted].spellAbility + '+pro vsCon or charmed, follows telepathic commands, for complete control; +SL for dur 60ft concentration 10/10 turns ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Dream()
 {a='5th(Dream You or ally enters a target s dreams, manifesting as a messenger with whom it can communicate 10/10 turns Special 8hrs',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Geas()
 {a='5th(Geas)1 target)DC8+' + characters[targeted].spellAbility + '+pro vsWis or charmed; it must obeys commands or 5d10 psych damage; SL7: 1 year, SL9: til disp. 10/10 turns 60ft 30 days P244',
 b='0d0+0',
 c='',
 damageDice='5d10+0',
 getAction(t1)
}

 function GreaterRestoration()
 {a='5th(Greater Restoration Reduce exhaustion or end charm, petrify, curse, stat or max hp reduction(100gp cons.)touch',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function HoldMonster()
 {a='5th(Hold Monster)1+1/slot level targets within 30ft of each other)DC8+' + characters[targeted].spellAbility + '+pro vsWis 90ft concentration 10/10 turns P251',
 b='0d0+0',
 c='paralyzed;saves at the end of each of its turns',
 damageDice='5d10+0',
 getAction(t1)
}

 function LegendLore()
 {a='5th(Legend Lore)Learn summary of lore involved with named or described person, place, or object(200gp; 250gp cons.)Div 10min Self',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MassCureWounds()
 {a='5th(Mass Cure Wounds)30ft radius 6 allies heal',
 b='0d0+0',
 c='heal 3d8+1d8 per slot level' + characters[targeted].spellAbility + 'hp',
 damageDice='3d8+0',
 getAction(t1)
}

 function Mislead()
 {a='5th(Mislead)You invisible and illusionary duplicate of you; move it; bns a switch between its senses and yours Self S concentration 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ModifyMemory()
 {a='5th(Modify Memory)1 target)DC8+' + characters[targeted].spellAbility + '+pro vsWis or charmed, alter 1 memory of last(SL6: 7, SL7: 30, SL8: 365)day; SL:9 any memory 30ft concentration 10/10 turns P261',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function PlanarBinding()
 {a='5th(Planar Binding)1 celestial/elem/fey/fiend save or bound; SL6: 10, SL7: 30, SL8: 180, SL9: 366 days(1000gp cons.)Cha 1hr 60ft 24hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function RaiseDead()
 {a='5th(Raise Dead Restores a Creature s body that has died in the last 10 days to life with 1 hp;(500gp cons.)1hr touch ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Reincarnate()
 {a='5th(Reincarnate)dead within the last 10 days humanoid is back to life in a new random adult humanoid body(1000gp cons.)1hr touch m',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Scrying()
 {a='5th(Scrying 1 target save or sensor follows it around; or Create sensor in familiar location;(1000gp)Wis Div 10min Self concentration 10min ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Seeming()
 {a='5th(Seeming)Any targets)DC8+' + characters[targeted].spellAbility + '+pro vsCha or disguised by changing physical appearance; Int(Investigation)check vs. spell DC to detect 30ft 8hrs ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function TeleportationCircle()
 {a='5th(Teleportation Circle)Create a circle to teleport to another teleportation circle on same plane;(50gp cons.)10/10 turns 10ft 1 rnd ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function TreeStride()
 {a='5th(Tree Stride)You can teleport 1/rnd through a tree to another tree of the same kind within 500ft self concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function WallOfStone()
 {a='5th(Wall of Stone)10 10×10ft panels 6 thick wall connected with existing stone; half thickness, double surface; 120ft concentration 10min',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Commune()
 {a='5th(Commune Ask up to three yes/no questions to your deity or a divine proxy(25gp)Div 10/10 turns Self 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Contagion()
 {a='5th(Contagion Melee spell attack to infect targets with chosen disease; saves each rnd on 3 successes spell ends, touch 7 days',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function DispelEvilOrGood()
 {a='5th(Dispel Evil or Good Celestials, elementals, fey, fiends, undead dis. on attacks vs. you; break charm/fright/possession; banish Self concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function FlameStrike()
 {a='5th(Flame Strike)DC8+' + characters[targeted].spellAbility + '+pro vsDex save for half damage 10ft radius 40ft high 60ft',
 b='0d0+0',
 c='fire and radiant+1d6/slot',
 damageDice='8d6+0',
 getAction(t1)
}

 function Hallow()
 {a='5th(Hallow)30ft radius protected against celestials, elementals, fey, fiend, and undead; add additional effects; 24hrs touch Till dispelled ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function InsectPlague()
 {a='5th(Insect Plague 20ft radius all 4d10+1d10/slot level pierc damage; save halves; ignores cover; lightly obscures; difficult terrain Con 300ft concentration 10min',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ArcaneGate()
 {a='6th(Arcane Gate)Two portals, up to 500ft apart, teleport any to other side; portals are filled with opaque mist 500ft concentration 10min',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ControlWeather()
 {a='8th(Control Weather)Change current weather; changes take 1d4×10min; change precipitation, temperature, wind, 10min 5-mile radius concentration 8hrs P228',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ChainLightning()
 {a='6th(Chain Lightning)Lightning bolt 1 target and 3+1/slot level targets within 30 ft;DC8+' + characters[targeted].spellAbility + '+pro vsDex halves 150ft',
 b='0d0+0',
 c='lightning',
 damageDice='10d8+0',
 getAction(t1)
}

 function CompelledDuel()
 {a='1st(Compelled Duel)1 target)DC8+' + characters[targeted].spellAbility + '+pro vsWis or attack at disadv targets other than you save if you move more than 30ft away bonus 30ft concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function CrusadersMantle()
 {a='3rd(Crusader s Mantle)',
 b='0d0+0',
 c='10/10 turns weapon+ extra damage for you and allies within a 30ft radi',
 damageDice='3d8+0',
 getAction(t1)
}

 function CircleOfPower()
 {a='5th(Circle of Power)all in 30ft radius v',
 b='0d0+0',
 c='save for 0hp when saving for half concentration 10min',
 damageDice='0d0+0',
 getAction(t1)
}

 function CordonOfArrows()
 {a='2nd(Cordon of Arrows)4+2/slot arrows/bolts attack first targets in 30ft one at a time)DC8+' + characters[targeted].spellAbility + '+pro vsDex for half 5ft 8hrs',
 b='0d0+0',
 c='piercing',
 damageDice='1d6+0',
 getAction(t1)
}

 function CircleOfDeath()
 {a='6th(Circle of Death)60ft radius all 8d6+2d6/slot level Necrotic damage;)DC8+' + characters[targeted].spellAbility + '+pro vsCon halves(500gp)150ft P 221',
 b='0d0+0',
 c='',
 damageDice='8d6+0',
 getAction(t1)
}

 function ConjureFey()
 {a='6th(Conjure Fey)CR6+1/slot Fey that obeys your verbal commands not against its align on broken concentration fey breaks free 10/10 turns 90ft concentration 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Contingency()
 {a='6th(Contingency)Prepare another SL less than 6th lvl spell you can cast to activate when some condition is met 1500gp 10min Self 10 days',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ControlWinds()
 {a='5th(Control Winds)100ft cube of air either gusts, downdraft, or updraft; affects flying/jump/ranged; change; 300ft concentration 1hr E 16',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function CreateUndead()
 {a='6th(Create Undead)Turn corpses into 3+1/slot level ghoul a.o., ; control 24h; bns a command 120ft(150gp/corpse cons.)10/10 turns 10ft P 229',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Eyebite()
 {a='6th(Eyebite)1 target/rnd within 60ft)DC8+' + characters[targeted].spellAbility + '+pro vsWis or either fall asleep, panicked, or sickened, your choice Self concentration 10/10 turns ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function FindThePath()
 {a='6th(Find the Path Know the shortest route to a location you are familiar with and are on the same plane with(100gp)Div 10/10 turns Self concentration 1 day ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function FleshToStone()
 {a='6th(Flesh to Stone)1 target)DC8+' + characters[targeted].spellAbility + '+pro vsCon or restrained; save at end of turn, 3 consecutive fail: petrified, 3 consecutive succes: free 60ft concentration 10/10 turns P 243',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function GuardsAndWards()
 {a='6th(Guards and Wards)Protect an area with an assortment of effects including fog, web, illusions and locks(10gp)10min touch 24hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MassSuggestion()
 {a='6th(Mass Suggestion)12 targets save or follow stated course of action; SL7: 10 day; SL8: 30 days; SL9: 366 days;)DC8+' + characters[targeted].spellAbility + '+pro vsWis 60ft 24hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MoveEarth()
 {a='6th(Move Earth)Every 10min of concentration ntration, gradually reshape 40 cu ft of dirt, sand, or clay; 120ft concentration 2hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function OttsIrreDance()
 {a='6th(Otto s Irre. Dance)1 target dances in place, can not move, dis. on attacks/saves, adv. on attacks vs. target;)DC8+' + characters[targeted].spellAbility + '+pro vsWis save each rnd 30ft concentration 10/10 turns ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ProgrammedIllusion()
 {a='6th(Programmed Illusion)30ft cube illusion includes visible, audible; triggers on set condition;(25gp)120ft Till dispelled',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Sunbeam()
 {a='6th(Sunbeam)60ft long 5ft wide all 6d8 radius damage, 1 rnd blind; save halves and not blinded; for new line)DC8+' + characters[targeted].spellAbility + '+pro vsCon 60ft line concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function TransportViaPlants()
 {a='6th(Transport via Plants)For duration all can transport from a Large plant to a plant on the same plane that you have touched 10ft 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function TrueSeeing()
 {a='6th(True Seeing 1 ally gains truesight 120 ft; see through illusions, hidden doors, ethereal plane(25gp cons.)Div touch ,M† 1hr P284',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function WallOfThorns()
 {a='6th(Wall of Thorns)60×2×20ft(l×w×h)or 10-ft radius all)DC8+' + characters[targeted].spellAbility + '+pro vsDex halves; 1/4 move 120ft concentration 10min',
 b='0d0+0',
 c='piercing+1d8/slot',
 damageDice='7d8+0',
 getAction(t1)
}

 function WindWalk()
 {a='6th(Wind Walk)You+10 willing Creatures assume gaseous form with fly 300ft resist nonmagical damage 30ft 8hrs',
 b='0d0+0',
 c='piercing+1d8/slot',
 damageDice='7d8+0',
 getAction(t1)
}

 function Forbiddance()
 {a='6th(Forbiddance 40K sqft 30ft high no extraplanar travel; 1 target type 5d10 radi/Necrotic damage/rnd(1000gp)10min touch 1 day',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Harm()
 {a='6th(Harm 1 target 14d6 Necrotic damage, reduce max hp by same; not<1 hp; save halves and no max hp reduce Con 60ft ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Heal()
 {a='6th(Heal)60ft 1 target',
 b='0d0+0',
 c='heals 70+10/slot level hp and is cured of blindness, deafness, and all diseases',
 damageDice='0d0+70',
 getAction(t1)
}

 function HeroesFeast()
 {a='6th(Heroes Feast You+12 targets; 1h to consume; for 24h: disease/poison immune, +2d10 max hp,(1000gp cons.)10min 30ft',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function PlanarAlly()
 {a='6th(Planar Ally Otherwordly entity sends celestial, elemental or fiend to a location near you; 10min 60ft P265',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function TrueSeeing()
 {a='6th(True Seeing 1 ally gains truesight 120 ft; see through illusions, hidden doors, ethereal plane(25gp cons.)Div touch ,M 1hr P284',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function WordOfRecall()
 {a='6th(Word of Recall You+5 ally teleport to sanctuary of your deity, designated as such by casting this spell there 5ft P289',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Etherealness()
 {a='7th(Etherealness)1/slot level ally go to Ethereal Plane; move there, but able to perceive 60ft into the normal plane Self 8hrs ',
 b='0d0+0',
 c='',
 damageDice='12d6+0',
 getAction(t1)
}

 function FingerOfDeath()
 {a='7th(Finger of Death)1 target 7d8+30 Necrotic damage;)DC8+' + characters[targeted].spellAbility + '+pro vsCon halves; targets killed becomes zombie under your command 60ft',
 b='0d0+0',
 c='',
 damageDice='12d6+0',
 getAction(t1)
}

 function Forcecage()
 {a='7th(Forcecage)20ft cube cage, or 10ft cube solid; blocks all spells; extraplanar travel in/out on save(1500gp)Cha 100ft 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MirageArcane()
 {a='7th(Mirage Arcane)1 sq mile alter terrain illusion includes visible, audible, olfactory, tactile; can make difficult ter; 10min Sight 10 days',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MorMagniMansion()
 {a='7th(Mor. Magni. Mansion)Create extradimensional mansion with rooms, food and servants to serve 100 people;(15gp)10/10 turns 300ft 24hrs ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MorSword()
 {a='7th(Mor. Sword)Hovering sword makes melee spell attacks for 3d10 Force damage; bns a to move 20ft and/or attack 60ft concentration 10/10 turns ',
 b='1d20+0',
 c='force',
 damageDice='3d10+0',
 getAction(t1)
}

 function PlaneShift()
 {a='7th(Plane Shift)DC8+cha+pro vsCon You+8 allies teleport to a different plane; or roll a spell attack to teleport 1 enemy to a random plane touch m',
 b='1d20+0',
 c='teleported',
 damageDice='0d0+0',
 getAction(t1)
}

 function Etherealness()
 {a='7th(Etherealness)1/slot level ally go to Ethereal Plane; move there, but able to perceive 60ft into the normal plane Self 8hrs ',
 b='0d0+0',
 c='',
 damageDice='12d6+0',
 getAction(t1)
}

 function FingerOfDeath()
 {a='7th(Finger of Death)1 target 7d8+30 Necrotic damage;)DC8+' + characters[targeted].spellAbility + '+pro vsCon halves; targets killed becomes zombie under your command 60ft',
 b='0d0+0',
 c='',
 damageDice='12d6+0',
 getAction(t1)
}

 function FireStorm()
 {a='7th(Fire Storm)DC8cha+pro vsDex 10 connected 10ft cubebes 150ft s',
 b='0d0+0',
 c='save for half fire, flammables ignite',
 damageDice='7d10+0',
 getAction(t1)
}

 function ProjectImage()
 {a='7th(Project Image)Project image of you to familiar place; manipulate it; bns a switch between its senses and yours(5gp)500 miles concentration 1 day ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Regenerate()
 {a='7th(Regenerate 1 target heals 4d8+15 hp and 1 hp/rnd for rest of duration; restores lost body parts in 2 min 10/10 turns touch 1hr P271',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Ressurrection()
 {a='7th(Resurrection Resurrects a Creature, that has died in the last century, with whole body;(1000gp cons.)1hr touch P272',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function ReverseGravity()
 {a='7th(Reverse Gravity)50ft radius 100ft high everything falls upward; save to grab hold onto something solid)DC8+' + characters[targeted].spellAbility + '+pro vsDex 100ft concentration 10/10 turns',
 b='0d0+0',
 c='fall damage',
 damageDice='0d0+0',
 getAction(t1)
}

 function Symbol()
 {a='7th(Symbol Inscribe a glyph to activate for chosen effect on set trigger;(1000gp cons.)10/10 turns touch Till triggered P280',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function IncendiaryCloud()
 {a='8th(Incendiary Cloud)20ft radius all 10d8 fire damage; save halves; heavily obscures; move 10 ft/rnd in chosen direction)DC8+' + characters[targeted].spellAbility + '+pro vsDex 150ft concentration 10/10 turns',
 b='0d0+0',
 c='fire',
 damageDice='10d8+0',
 getAction(t1)
}

 function Teleport()
 {a='7th(Teleport)You, 8 willing targets, or an object teleport to a place you know, have seen, or can describe; 10ft ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Telekinesis()
 {a='5th(Telekinesis)Move Huge Creature or 1000 lb object 30ft as 1 a; ability check with)DC8+' + characters[targeted].spellAbility + '+pro vsStr; 60ft concentration 10min',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Whirlwind()
 {a='7th(Whirlwind)10ft radius 30ft high 10d6 bludg damage; save halves; restrains; move 30 ft',
 b='0d0+0',
 c='bludg',
 damageDice='10d6+0',
 getAction(t1)
}

 function ConjCelestial()
 {a='7th(Conjure Celestial)CR 4+1/2SL celestial that obeys your verbal commands if they do not go against its alignment 10/10 turns 90ft concentration 1hr p225',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function DivineWord()
 {a='7th(Divine Word)Any targets save or deaf/blind/stunned/dead depending on current HP; banishes extraplanar targets Cha 30ft',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function FireStorm()
 {a='7th(Fire Storm)DC8wis+pro vsDex 10 connected 10ft cubebes 150ft s',
 b='0d0+0',
 c='save for half fire, flammables ignite',
 damageDice='7d10+0',
 getAction(t1)
}

 function AnimalShapes()
 {a='8th(Animal Shapes)Any willing Creatures transform into up to Large CR4 beasts retain Wis, Int, Cha, but nothing else 30ft concentration 24hrs',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Demiplane()
 {a='8th(Demiplane)Create door to a demiplane of 30ft cubebe; when spell ends, Creatures inside remain trapped 60ft 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function DominateMonster()
 {a='8th(Dominate Monster)1 target save or charmed, follows telepathic commands, for complete control; SL9: conc, 8h)DC8+' + characters[targeted].spellAbility + '+pro vsWis 60ft concentration 1hr ',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Feeblemind()
 {a='8th(Feeblemind)1 target 4d6 psych damage and)DC8+' + characters[targeted].spellAbility + '+pro vsInt or Int and Cha become 1; extra save every 30 days to end spell 150ft ',
 b='0d0+0',
 c='',
 damageDice='4d6+0',
 getAction(t1)
}

 function Glibness()
 {a='8th(Glibness)You can choose to roll a 15 on any Charisma check magic cannot detect if you are lying self 1hr',
 damageDice='0d0+0',
 getAction(t1)
}

 function MindBlank()
 {a='8th(Mind Blank)1 target immune to charms, psychic damage, divination, mind reading, and any mind altering effects touch 24hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function PowerWordStun()
 {a='8th(Power Word Stun)1 target with 150 current hp or less is stunned; save ateoet to end spell)DC8+' + characters[targeted].spellAbility + '+pro vsCon 60ft',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function PrismaticSpray()
 {a='7th(Prismatic Spray)All random effect, : either 10d6 damage, restrained, or blinded; save halves/negates)DC8+' + characters[targeted].spellAbility + '+pro vsDex 60ft cone',
 b='0d0+0',
 c='',
 damageDice='10d6+0',
 getAction(t1)
}

 function Sunburst()
 {a='8th(Sunburst)60ft radius all 12d6 radius damage, 10/10 turns blind; save halves and not blinded; save ateoet)DC8+' + characters[targeted].spellAbility + '+pro vsCon 150ft',
 b='0d0+0',
 c='radia',
 damageDice='12d6+0',
 getAction(t1)
}

 function Tsunami()
 {a='8th(Tsunami)300ft l 50ft w 300ft h wall of water moves away at 50 ft/rnd; 6d10 bludg damage;)DC8+' + characters[targeted].spellAbility + '+pro vsStr for half 10/10 turns sight concentration 6rnds',
 b='0d0+0',
 c='bludg',
 damageDice='6d10+0',
 getAction(t1)
}

 function AntimagicField()
 {a='8th(Antimagic Field)No magical effectsfunction in area except those Created by an artefact or a deity 10ft radius concentration 1hr P213',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Earthquake()
 {a='8th(Earthquake)Cause an earthquake in a 100ft rad, damaging structures and targetsting dangerous fissures, 500ft concentration 10/10 turns P236',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function HolyAura()
 {a='8th(Holy Aura)Any in area adv. on saves; dis. attacks vs. targets; fiend/undead attack a target save or blinded(1000gp)Con 30ft concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function AstralProjection()
 {a='9th(Astral Projection)You+8 ally projected to Astral Plane with identical statistics(per targets 1100gp cons.)1hr 10ft Special',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Foresight()
 {a='9th(Foresight)1 ally can t be surprised; adv. on attacks, ability checks, and saves; dis. on attacks vs. target Div 10/10 turns touch 8hrs',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Imprisonment()
 {a='9th(Imprisonment)1 target save or trapped in chosen way with no means of escape;(500gp/HD cons.)DC8+' + characters[targeted].spellAbility + '+pro vsWis 10/10 turns 30ft Till dispelled P 252',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function PowerWordHeal()
 {a='9th(Power Word Heal)1 target heals all hp and stops being charmed, frightened, paralyzed, stunned; it can use rea to stand up 1 act touch s',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function TimeStop()
 {a='9th(Time Stop)You ntly take 1d4+1 turns; if affecting other Creatures or worn or carried object the spell ends Self P 283',
 damageDice='0d0+0',
 getAction(t1)
}

 function Wish()
 {a='9th(Wish)Duplicate any 8th lvl or lower spell, Create objects, heal, resurrect, alter time, etc.; Self P 288',
 damageDice='0d0+0',
 getAction(t1)
}

 function PowerWordKill()
 {a='9th(Power Word Kill)1 target with 100 current hp or less dies 60ft ',
 b='0d0+0',
 c='',
 damageDice='0d0+100',
 getAction(t1)
}

 function Shapechange()
 {a='9th(Shapechange)Take form of Creature with CR of CL or lower; keep Int, Wis, Cha and alignment;(1500gp)Self concentration 1hr',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function StormOfVengence()
 {a='9th(Storm of Vengeance)360ft radi)DC8+' + characters[targeted].spellAbility + '+pro vsCon; intensifies every rnd sight concentration 10/10 turns',
 c='thunder and deafened 5min',
 damageDice='2d6+0',
 getAction(t1)
}

 function TruePolymorph()
 {a='9th(True Polymorph)1 target/obj more than 0 hp save or transformed into another targets/obj with equal CR or lower;)DC8+' + characters[targeted].spellAbility + '+pro vsWis 30ft concentration 1hr P 283',
 damageDice='0d0+0',
 getAction(t1)
}

 function MeteorSwarm()
 {a='9th(Meteor Swarm)4× 40ft radius all 20d6 bludg damage and 20d6 Fire damage; save halves; areas do not stack)DC8+' + characters[targeted].spellAbility + '+pro vsDex 1 mile P 259',
 b='0d0+0',
 c='bludg fire',
 damageDice='40d6+0',
 getAction(t1)
}

 function DivineSmite()
 {a='Divine Smite extra damage',
 b='0d0+0',
 c='radiant damage+1d8 if undead target',
 damageDice='2d8+0',
 getAction(t1)
}

 function LayOnHands()
 {a='Lay On Hands)(6/6long rest)touch less undead and constructs',
 b='0d0+0',
 c='heal 5xLvl in hp and cure 1 disease or poison',
 damageDice='0d0+0',
 getAction(t1)
}

 function Gate()
 {a='9th(Gate)Create a portal to a precise location on a different plane; can transport named targets to you(5000gp)60ft concentration 10/10 turns P244',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function TrueSeeing()
 {a='6th(True Seeing 1 ally gains truesight 120 ft; see through illusions, hidden doors, ethereal plane(25gp cons.)Div touch ,M† 1hr P284',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function DelayedBlastFireball()
 {a='7th(Delayed Blast Fireball)Create bead at chosen moment, or if concentration is broken 20ft radius 150ft concentration 10/10 turns)DC8+' + characters[targeted].spellAbility + '+pro vsDex for half 60ft line concentration 10/10 turns P 279',
 b='0d0+0',
 c='fire+1d6/slot',
 damageDice='12d6+0',
 getAction(t1)
}

 function MassHeal()
 {a='9th(Mass Heal)Heal up to 700 hp to any Creatures in range; also cured of all diseases, blindness and deafness 60ft P258',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MoveEarth()
 {a='6th(Move Earth)Every 10min of concentration ntration, gradually reshape 40 cu ft of dirt, sand, or clay; 120ft concentration 2hr P 263',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function TrueResurrection()
 {a='9th(True Resurrection)Resurrects a Creature, that has died in last 200 years, with new body;(25000gp cons.)1hr touch P284',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function EldritchBlast()
 {a='Cantrip(Eldritch Blast)+' + characters[targeted].spellAbility + '+pro 120ft s',
 b='1d20+0',
 c='1 force beam+1 beam @5, 11, 17th lvl',
 damageDice='1d10+0',
 getAction(t1)
}

 function StormSphere()
 {a='4th(Storm Sphere)20ft radius difficult terrain,)DC8+' + characters[targeted].spellAbility + '+pro vsStr',
 b='0d0+0',
 c='2d6+1d6/slot level bludg; bns a 60ft ranged attack 4d6 Lightning 150ft concentration 10/10 turns',
 damageDice='4d6+0',
 getAction(t1)
}

 function VitriolicSphere()
 {a='4th(Vitriolic Sphere)20ft radius ;)DC8+' + characters[targeted].spellAbility + '+pro vsDex halves & no damage ateoynt',
 b='0d0+0',
 c='10d4+2d4/slot level now and 5d4 Acid damage ateoynt',
 damageDice='4d6+0',
 getAction(t1)
}

 function WaterySphere()
 {a='4th(Watery Sphere)10ft radius< Huge targets)DC8+' + characters[targeted].spellAbility + '+pro vsStr each rnd move sphere 30 to 90ft concentration 10/10 turns',
 b='0d0+0',
 c='restrained, ejected on save',
 damageDice='0d0+0',
 getAction(t1)
}

 function Immolation()
 {a='5th(Immolation)1 target)DC8+' + characters[targeted].spellAbility + '+pro vsDex save for half 90ft concentration 10/10 turns',
 b='0d0+0',
 c='fire+burns for 3d6 fire per round, save ateoyt',
 damageDice='7d6+0',
 getAction(t1)
}

 function Passwall()
 {a='5th(Passwall)Create a passage max 5ft wide, 8ft tall, 20ft deep in a wooden, plaster or stone surface duration 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function RarysTelepathicBond()
 {a='5th(Rary s Telepathic Bond )8 allies with intelligence more than 2 gain a telepathic bond that works for any distance on the same plane 30ft 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function TransmuteRock()
 {a='5th(Transmute Rock)40 cu ft stone to mud or mud to stone',
 b='0d0+0',
 c='restrained',
 damageDice='0d0+0',
 getAction(t1)
}

 function WallOfForce()
 {a='5th(Wall of Force)10 10×10ft panels or 10ft radius(hemi)sphere invisible, impenetrable wall, can float in air concentration 10min',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function WardingWind()
 {a='2nd(Warding Wind)evocation 1act self V concentration 10min',
 b='0d0+0',
 c='20mph wind 10ft aura, deafens targets, extinguishes flames, hedges out vapor, difficult terrain for targets, ranged attacks against you are at disadv',
 damageDice='0d0+0',
 getAction(t1)
}

 function Skywrite()
 {a='2nd(Skywrite)transmutation 1act range sight concentration',
 b='0d0+0',
 c='10 cloud words appear in the sky 1hr or strong wind',
 damageDice='0d0+0',
 getAction(t1)
}

 function DrawmijsInstantSummons()
 {a='6th(Drawmij s Instant Summons)Link object to a sapphire 1000gp crush gem to summon the unattended object or learn of wielder 10/10 turns touch Till dispelled',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function FleshToStone()
 {a='6th(Flesh to Stone)1 target)DC8+' + characters[targeted].spellAbility + '+pro vsCon or restrained; save at end of turn, 3 consecutive fail: petrified, 3 consecutive succes: free 60ft concentration 10/10 turns P 243',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function GlobeOfInvulerability()
 {a='6th(Globe of Invulnerability)spells less than(6+1/slot level)cast outside area cannot effect inside area 10ft radius concentration 10/10 turns',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function InvestitureOfFlame()
 {a='6th Investiture of Flame)Fire immune; Cold resist.; 1d10 Fire damage in 5 ft; 15ft long 5ft wide 4d8 Fire damage, DC8+' + characters[targeted].spellAbility + '+pro vsDex halves Self concentration 10min E 19',
 b='0d0+0',
 c='',
 damageDice='4d6+0',
 getAction(t1)
}

 function InvestitureOfIce()
 {a='6th Investiture of Ice)Cold immune; Fire resist.; 10ft radius dif. ter.; 15ft cone 4d6 Cold damage, half speed, save halves Con Self concentration 10min E 19',
 b='0d0+0',
 c='',
 damageDice='4d6+0',
 getAction(t1)
}

 function InvestitureOfStone()
 {a='6th Investiture of Stone)Nonmagical Bludg/Pierc/Slash resist.; 15ft radius DC8+' + characters[targeted].spellAbility + '+pro vsDex or prone; move through earth/stone Self concentration 10min E 19',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function InvestitureOfWind()
 {a='6th Investiture of Wind)Ranged wea attacks dis. vs. you; fly 60 ft; 15ft cube in 60ft all 2d10 bludg damage, push 10 ft, DC8+' + characters[targeted].spellAbility + '+pro vsCon halves Con Self concentration 10min E 20',
 b='0d0+0',
 c='',
 damageDice='2d10+0',
 getAction(t1)
}

 function MagicJar()
 {a='6th Magic Jar)Transport your soul into container from which you can attempt to possess humanoids;(500gp)10/10 turns Self Till dispelled P 257',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MassSuggestion()
 {a='6th Mass Suggestion)12 targets save or follow stated course of action; SL7: 10 day; SL8: 30 days; SL9: 366 days; DC8+' + characters[targeted].spellAbility + '+pro vsWis 60ft 24hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function OtilukesFreezingSphere()
 {a='6th Oti. Freezing Sphere)60ft radius all 10d6+1d6/slot level Cold damage; save halves; freezes water; can save up to 10/10 turns before using DC8+' + characters[targeted].spellAbility + '+pro vsDex 300ft P 263',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function WallOfIce()
 {a='6th(Wall of Ice)10 10×10ft panels 1ft thick; at casting can cut through; DC8+' + characters[targeted].spellAbility + '+pro vsDex 120ft concentration 10min',
 b='0d0+0',
 c='targets hit by wall save for half cold dmg',
 damageDice='10d6+0',
 getAction(t1)
}

 function Sequester()
 {a='7th(Sequester)1 willing targets/obj suspended, invisible, hidden from divination magic;(5000gp cons.)touch Till dispelled',
 b='0d0+0',
 c='targets hit by wall save for half cold dmg',
 damageDice='10d6+0',
 getAction(t1)
}

 function Simulacrum()
 {a='7th(Simulacrum)Create snow/ice duplicate of humanoid/beast; follows your verbal commands;(1500gp cons.)12hr touch Till dispelled',
 b='0d0+0',
 c='targets hit by wall save for half cold dmg',
 damageDice='10d6+0',
 getAction(t1)
}

 function AbiDsHorridWilting()
 {a='8th Abi-D s Horrid Wilting)30ft cube 10d8 Necrotic damage; save halves; plants/water elem. dis. const/undead immune DC8+' + characters[targeted].spellAbility + '+pro vsCon 150ft',
 b='0d0+0',
 c='necro',
 damageDice='10d8+0',
 getAction(t1)
}

 function AntipathySympathy()
 {a='8th Antipathy/Sympathy)Object or area up to 200ft cube attracts or repels specific type of intelligent targets; save DC8+' + characters[targeted].spellAbility + '+pro vsWis 1hr 60ft 10 days',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function CloneIt()
 {a='8th Clone)Create a clone of a living targets; after death its soul can move to the clone(1K gp cons.; 2K gp)1hr touch',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Telepathy()
 {a='8th Telepathy)1 willing familiar targets Int greater than 0 and you telepathic link; share words, sensory information if on same plane Unlimited 24hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function PrismaticWall()
 {a='9th Prismatic Wall)Up to 90ft long 30ft high 5 inch thick; all in 20ft save or blinded; 7 layers with effects, DC8+' + characters[targeted].spellAbility + '+pro vsCon 60ft 10min',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Shapechange()
 {a='9th Shapechange)Take form of Creature with CR of CL or lower; keep Int, Wis, Cha and alignment;(1500gp)Self concentration 1hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Weird()
 {a='9th(Weird)30ft radius all save or frightened for duration; extra save at end of each round or 4d10 psych damage DC8+' + characters[targeted].spellAbility + '+pro vsWis 120ft concentration 10/10 turns',
 b='0d0+0',
 c='psychic',
 damageDice='4d10+0',
 getAction(t1)
}

 function Puppet()
 {a='1st(Puppet)1 action, 120 feet, S, instantaneous, 1 target,)DC8+' + characters[targeted].spellAbility + '+pro vsCon',
 b='0d0+0',
 c='target drops everything and runs max speed in direction caster chooses',
 damageDice='0d0+0',
 getAction(t1)
}

 function GlobeOfInvul()
 {a='6th(Globe of Invulnerability)SL less than(6+1/slot level)cast outside area cannot effect inside area; casting with a higher spell slot does not help 10ft radius concentration 10/10 turns P 245',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MassSuggestion()
 {a='6th(Mass Suggestion)12 targets save or follow stated course of action; SL7: 10 day; SL8: 30 days; SL9: 366 days;)DC8+' + characters[targeted].spellAbility + '+pro vsWis 60ft 24hr',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function Disintigrate()
 {a='6th(Disintegrate)1 target save or 10d6+3d6 per slot level 40 Force damage; or up to 10ft cube nonmagical object is destroyed)DC8+' + characters[targeted].spellAbility + '+pro vsDex 60ft P 233',
 b='0d0+0',
 c='',
 damageDice='10d6+0',
 getAction(t1)
}

 function ArcaneGate()
 {a='6th(Arcane Gate)Two portals, up to 500ft apart, teleport any to other side; portals are filled with opaque mist 500ft concentration 10min P 214',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function DivineFavor()
 {a='1st(Divine Favor)bonus self concentration 10/10 turns',
 b='0d0+0',
 c='extra weapon radius damage',
 damageDice='1d4+0',
 getAction(t1)
}

 function Heroism()
 {a='(Heroism)1st(1 target+1/slot touch concentration 1min',
 b='0d0+0',
 c='immune fear gains your spell abi mod temp hp each turn concentration 1min 10/10',
 damageDice='0d0+0',
 getAction(t1)
}

 function SearingSmite()
 {a='1st(Searing Smite))DC8+' + characters[targeted].spellAbility + '+pro vsCon bonus self concentration 10/10 turns',
 b='0d0+0',
 c='fire+1d6slot and target ignites con save ateoet or +1d6 fire',
 damageDice='1d6+0',
 getAction(t1)
}

 function ThunderousSmite()
 {a='1st(Thunderous Smite)audible 300ft bonus concentration 1min',
 b='0d0+0',
 c='weapon+extra thunder and pushed 10ft',
 damageDice='2d6+0',
 getAction(t1)
}

 function WrathfulSmite()
 {a='1st(Wrathful Smite)DC8+' + characters[targeted].spellAbility + '+pro vsWis or frightened bonus concentration 10/10 turns',
 b='0d0+0',
 c='weapon+extra psych and frightened',
 damageDice='1d6+0',
 getAction(t1)
}

 function Darkvision()
 {a='2nd(Darkvision)touch 8hrss',
 b='0d0+0',
 c='you or ally darkvision 60ft',
 damageDice='0d0+0',
 getAction(t1)
}

 function FindSteed()
 {a='2nd(Find Steed)summon a steed telepathy share spells 10min 30ft s',
 b='0d0+0',
 c='',
 damageDice='0d0+0',
 getAction(t1)
}

 function MagicWeapon()
 {a='2nd(Magic Weapon)bonus touch concentration 1hr',
 b='0d0+0',
 c='weapon becomes +1/+1 more@4th/+1 more@6th attack and damage magical',
 damageDice='0d0+0',
 getAction(t1)
}

 function AuraOfVitality()
 {a='3rd(Aura of Vitality)1 ally within 30ft radius 10/10 turns',
 b='0d0+0',
 c='heal',
 damageDice='2d6+0',
 getAction(t1)
}

 function ElementalWeapon()
 {a='3rd(Elemental weapon)touch 1hr',
 b='0d0+0',
 c='your weapon is +1 +2/slot2 +3/slot3 magical and extra +1d4 +2d4/slot2 +3d4/slot3 acid cold fire lightning or thunder dmg',
 damageDice='1d4+0',
 getAction(t1)
}

 function EnsnaringStrike()
 {a='3rd(Ensnaring Strike)DC8+' + characters[targeted].spellAbility + '+pro vsStr',
 b='0d0+0',
 c='10/10 turns slashing+1d6/slot+restrained',
 damageDice='1d6+0',
 getAction(t1)
}

 function AuraOfLife()
 {a='4th(Aura of Life)',
 b='0d0+0',
 c='resist heals all 0hp within 30ft radius to 1hp',
 damageDice='0d0+1',
 getAction(t1)
}

 function StaggeringSmite()
 {a='4th(Staggering Smite)DC8+' + characters[targeted].spellAbility + '+pro vsWis',
 b='0d0+0',
 c='psych+roll at disadv+no reactions til eoynt',
 damageDice='4d6+0',
 getAction(t1)
}

 function DestructiveSmite()
 {a='5th(Destructive Smite)DC8+' + characters[targeted].spellAbility + '+pro vsCon save for half 30ft radius v',
 b='0d0+0',
 c='5d6 thunder dmg+ 5d6 radiant or necrotic dmg+knocked prone',
 damageDice='10d6+0',
 getAction(t1)
}

 function RaiseDead()
 {a='5th(Raise Dead)Restores a Creature s body that has died in the last 10 days to life with 1 hp costs 500gp, 1hr, touch ',
 b='0d0+0',
 c='heal',
 damageDice='0d0+1',
 getAction(t1)
}

 function HailOfThorns()
 {a='1st(Hail of Thorns)DC8+' + characters[targeted].spellAbility + '+pro vsDex for half next ranged weapon attack, all within 5ft of target bonus self concentration 10/10 turns',
 b='0d0+0',
 c='piercing+1d10/slot',
 damageDice='1d10+0',
 getAction(t1)
}

 function HuntersMark()
 {a='1st(Hunter s Mark)Perception/Survival at adv vs target slot3 8hrs slot5 24hrs bonus 90ft concentration 1hr',
 b='0d0+0',
 c='weapon+ extra 1d6 transfer mark after target dies',
 damageDice='1d6+0',
 getAction(t1)
}

 function SmokeStick()
 {a='(Smoke Stick)1 action, 30ft 10ft rad',
 b='0d0+0',
 c='blocks vision and darkvision 1min, recharge 1min',
 damageDice='0d0+0',
 getAction(t1)
}

 function SwiftStepDraught()
 {a='(Swift Step Draught)1 action, 30ft 5ft rad',
 b='0d0+0',
 c='speed+20ft 1min, recharge 1min',
 damageDice='0d0+0',
 getAction(t1)
}

 function TanglefootBag()
 {a='(Tanglefoot Bag)1 action, 30ft 10ft rad',
 b='0d0+0',
 c='difficult terrain speed/2 1min, recharge 1min',
 damageDice='0d0+0',
 getAction(t1)
}

 function Thunderstone()
 {a="(Thunderstone)DC8+" + characters[targeted].spellAbility + "+pro vsCon, 1 action, 30ft 10ft rad",
 b='0d0+0',
 c='pushed 10ft, knocked prone',
 damageDice='0d0+0',
 getAction(t1)
}

 function
 getAction()
 {characters[targeted].setRollName1(a),
 characters[targeted].setRoll1(b),
 characters[targeted].setRollName2(c),
 characters[targeted].setRoll2(damageDice),
 addRollPrompt(targeted)
}
 s1="<input onClick='",
 s2="()' type='button' value='",
 s3="'/></td></tr><tr><td>"
 s4=document.write.bind(document)
 s4("<table><tr><td><table><tr><td><h3>Weapons</h3>")
 s4(s1 + 'Club' + s2 + 'Club' + s3)
 s4(s1 + 'Dagger' + s2 + 'Dagger' + s3)
 s4(s1 + 'Dart' + s2 + 'Dart' + s3)
 s4(s1 + 'Falchion' + s2 + 'Falchion' + s3)
 s4(s1 + 'Greatclub' + s2 + 'Greatclub' + s3)
 s4(s1 + 'Handaxe' + s2 + 'Handaxe' + s3)
 s4(s1 + 'Javelin' + s2 + 'Javelin' + s3)
 s4(s1 + 'LightHammer' + s2 + 'Light Hammer' + s3)
 s4(s1 + 'Mace' + s2 + 'Mace' + s3)
 s4(s1 + 'OneHandedQuarterstaff' + s2 + '1 Handed Quarterstaff' + s3)
 s4(s1 + 'TwoHandedQuarterstaff' + s2 + '2 Handed Quarterstaff' + s3)
 s4(s1 + 'Shortbow()' + s2 + '2 Handed Shortbow' + s3)
 s4(s1 + 'Sling' + s2 + 'Sling' + s3)
 s4(s1 + 'OneHandedBattleaxe' + s2 + '1 Handed Battleaxe' + s3)
 s4(s1 + 'TwoHandedBattleaxe' + s2 + '2 Handed Battleaxe' + s3)
 s4(s1 + 'Flail' + s2 + 'Flail' + s3)
 s4(s1 + 'Glaive' + s2 + '2 Handed Glaive' + s3)
 s4(s1 + 'TwoHandedGreataxe' + s2 + '2 Handed Greataxe' + s3)
 s4(s1 + 'TwoHandedGreatsword' + s2 + '2 Handed Greatsword' + s3)
 s4(s1 + 'TwoHandedHalberd' + s2 + '2 Handed Halberd' + s3)
 s4(s1 + 'Lance' + s2 + '2 Handed Lance' + s3)
 s4(s1 + 'OneHandedLongsword' + s2 + '1 Handed Longsword' + s3)
 s4(s1 + 'TwoHandedLongsword' + s2 + '2 Handed Longsword' + s3)
 s4(s1 + 'TwoHandedMaul' + s2 + '2 Handed Maul' + s3)
 s4(s1 + 'Morningstar' + s2 + 'Morningstar' + s3)
 s4(s1 + 'TwoHandedPike' + s2 + '2 Handed Pike' + s3)
 s4(s1 + 'Rapier' + s2 + 'Rapier' + s3)
 s4(s1 + 'Scimitar' + s2 + 'Scimitar' + s3)
 s4(s1 + 'Shortsword' + s2 + 'Shortsword' + s3)
 s4(s1 + 'OneHandedTrident' + s2 + '1 Handed Trident' + s3)
 s4(s1 + 'TwoHandedTrident' + s2 + '2 Handed Trident' + s3)
 s4(s1 + 'WarPick' + s2 + 'War Pick' + s3)
 s4(s1 + 'OneHandedWarhammer' + s2 + '1 Handed Warhammer' + s3)
 s4(s1 + 'TwoHandedWarhammer' + s2 + '2 Handed Warhammer' + s3)
 s4(s1 + 'Whip' + s2 + 'Whip' + s3)
 s4(s1 + 'Blowgun' + s2 + 'Blowgun' + s3)
 s4(s1 + 'OneHandedCrossbow' + s2 + '1 Handed Crossbow' + s3)
 s4(s1 + 'HeavyTwoHandedCrossbow' + s2 + 'Heavy 2 Handed Crossbow' + s3)
 s4(s1 + 'LongBow' + s2 + '2 Handed Longbow' + s3)
 s4(s1 + 'Net' + s2 + 'Net' + s3)
 s4('</td></tr></table></td><td><table><tr><td><h3>Arcane Trickster Spells</h3>Cantrips@3rd Class Level 3 Cantrips Known @10th Class Level 4 Cantrips Known')
 s4(s1 + 'AcidSplash' + s2 + 'Acid Splash' + s3)
 s4(s1 + 'BladeWard' + s2 + 'Blade Ward' + s3)
 s4(s1 + 'ChillTouch' + s2 + 'Chill Touch' + s3)
 s4(s1 + 'DancingLights' + s2 + 'Dancing Lights' + s3)
 s4(s1 + 'FireBolt' + s2 + 'Fire Bolt' + s3)
 s4(s1 + 'Light' + s2 + 'Light' + s3)
 s4(s1 + 'MageHand' + s2 + 'Mage Hand' + s3)
 s4(s1 + 'Mending' + s2 + 'Mending' + s3)
 s4(s1 + 'Message' + s2 + 'Message' + s3)
 s4(s1 + 'MinorIllusion' + s2 + 'Minor Illusion' + s3)
 s4(s1 + 'PoisonSpray' + s2 + 'Poison Spray' + s3)
 s4(s1 + 'Prestidigitation' + s2 + 'Prestidigitation' + s3)
 s4(s1 + 'RayOfFrost' + s2 + 'Ray of Frost' + s3)
 s4(s1 + 'ShockingGrasp' + s2 + 'Shocking Grasp' + s3)
 s4(s1 + 'TrueStrike' + s2 + 'True Strike' + s3)
 s4('Spells Knownat 3rd level, 3 spells at 4th level, 4 spells at 7th level, 5 spells at 8th level, 6 spells at 10th level, 7 spells at 11th level, 8 spells at 13th level, 9 spells at 14th level, 10 spells at 16th level, 11 spells at 19th level, 12 spells at 20th level 13 spells1st SlotAt 3rd Class Level, 3 1st Level Slots At 4th Class Level, 4 1st Level Slots')
 s4(s1 + 'CharmPerson' + s2 + 'Charm Person' + s3)
 s4(s1 + 'ColorSpray' + s2 + 'Color Spray' + s3)
 s4(s1 + 'DisguiseSelf' + s2 + 'Disguise Self' + s3)
 s4(s1 + 'IllusoryScript' + s2 + 'Illusory Script' + s3)
 s4(s1 + 'SilentImage' + s2 + 'Silent Image' + s3)
 s4(s1 + 'Sleep' + s2 + 'Sleep' + s3)
 s4(s1 + 'TashasHideousLaughter' + s2 + 'Tasha s Hideous Laughter' + s3)
 s4(s1 + 'Thunderwave' + s2 + 'Thunderwave' + s3)
 s4('2nd(SlotAt 7th Class Level, 2 2nd(Level Slots At 10th Class Level, 3 2nd(Level Slots')
 s4(s1 + 'Blur' + s2 + 'Blur' + s3)
 s4(s1 + 'CrownOfMadness' + s2 + 'Crown of Madness' + s3)
 s4(s1 + 'HoldPerson' + s2 + 'Hold Person' + s3)
 s4(s1 + 'Invisibility' + s2 + 'Invisibility' + s3)
 s4(s1 + 'MagicMouth' + s2 + 'Magic Mouth' + s3)
 s4(s1 + 'MirrorImage' + s2 + 'Mirror Image' + s3)
 s4(s1 + 'NystulsMagicAura' + s2 + 'Nystul s Magic Aura' + s3)
 s4(s1 + 'PhantasmalForce' + s2 + 'Phantasmal Force' + s3)
 s4(s1 + 'Suggestion' + s2 + 'Suggestion' + s3)
 s4('3rd SlotAt 13th Class Level, 2 3rd Level Slots At 16th Class Level, 3 3rd Level Slots')
 s4(s1 + 'Fear' + s2 + 'Fear' + s3)
 s4(s1 + 'HypnoticPattern' + s2 + 'Hypnotic Pattern' + s3)
 s4(s1 + 'MajorImage' + s2 + 'Major Image' + s3)
 s4(s1 + 'PhantomSteed' + s2 + 'Phantom Steed' + s3)
 s4('4th SlotAt 19th Class Level, 1 4th Level Slot')
 s4(s1 + 'Confusion' + s2 + 'Confusion' + s3)
 s4(s1 + 'GreaterInvisibility' + s2 + 'Greater Invisibility' + s3)
 s4(s1 + 'HallucinatoryTerrain' + s2 + 'Hallucinatory Terrain' + s3)
 s4(s1 + 'PhantasmalKiller' + s2 + 'Phantasmal Killer' + s3)
 s4('</td></tr></table></td><td><table><tr><td><h3>Bard Spells</h3>')
 s4(s1 + 'SongOfRest' + s2 + 'Song of Rest' + s3)
 s4('CantripsAt 1st Class Level, 2 Cantrips Known At 3rd Class Level, 3 Cantrips Known At 10th Class Level, 4 Cantrips Known ')
 s4(s1 + 'BladeWard' + s2 + 'Blade Ward' + s3)
 s4(s1 + 'DancingLights' + s2 + 'Dancing Lights' + s3)
 s4(s1 + 'Friends' + s2 + 'Friends' + s3)
 s4(s1 + 'Light' + s2 + 'Light' + s3)
 s4(s1 + 'MageHand' + s2 + 'Mage Hand' + s3)
 s4(s1 + 'Mending' + s2 + 'Mending' + s3)
 s4(s1 + 'Message' + s2 + 'Message' + s3)
 s4(s1 + 'MinorIllusion' + s2 + 'Minor Illusion' + s3)
 s4(s1 + 'Prestidigitation' + s2 + 'Prestidigitation' + s3)
 s4(s1 + 'Thunderclap' + s2 + 'Thunderclap' + s3)
 s4(s1 + 'TrueStrike' + s2 + 'True Strike' + s3)
 s4(s1 + 'Vicious Mockery' + s2 + 'Vicious Mockery' + s3)
 s4('Spells Known@1st(4) @2nd(5) @3rd(6) @4th(7) @5th(8) @6th(9) @7th(10) @8th(11) @9th(12) @(10th 14) @(11th 15) @(13th 16) @14th 18) @(15th 19) @(17th 20) @(18th 22)1st SlotAt 1st Class Level, 2 1st Level Slots At 2nd(Class Level, 3 1st Level Slots At 3rd Class Level, 4 1st Level Slots')
 s4(s1 + 'AnimalFriendship' + s2 + 'Animal Friendship' + s3)
 s4(s1 + 'Bane DC8+' + s2 + 'Bane' + s3)
 s4(s1 + 'CharmPerson+' + s2 + 'Charm Person' + s3)
 s4(s1 + 'ComprehendLanguages' + s2 + 'Comprehend Languages' + s3)
 s4(s1 + 'CureWounds' + s2 + 'Cure Wounds' + s3)
 s4(s1 + 'DetectMagic' + s2 + 'Detect Magic' + s3)
 s4(s1 + 'DisguiseSelf' + s2 + 'Disguise Self' + s3)
 s4(s1 + 'DissonantWhispers' + s2 + 'Dissonant Whispers' + s3)
 s4(s1 + 'EarthTremor' + s2 + 'Earth Tremor' + s3)
 s4(s1 + 'FaerieFire' + s2 + 'Faerie Fire' + s3)
 s4(s1 + 'FeatherFall' + s2 + 'Feather Fall' + s3)
 s4(s1 + 'HealingWord' + s2 + 'Healing Word' + s3)
 s4(s1 + 'Heroism' + s2 + 'Heroism' + s3)
 s4(s1 + 'Identify' + s2 + 'Identify' + s3)
 s4(s1 + 'IllusoryScript' + s2 + 'Illusory Script' + s3)
 s4(s1 + 'Longstrider' + s2 + 'Longstrider' + s3)
 s4(s1 + 'Puppet' + s2 + 'Puppet' + s3)
 s4(s1 + 'SilentImage' + s2 + 'Silent Image' + s3)
 s4(s1 + 'Sleep' + s2 + 'Sleep' + s3)
 s4(s1 + 'SpeakWithAnimals' + s2 + 'Speak with Animals' + s3)
 s4(s1 + 'TashasHideousLaughter' + s2 + 'Tasha s Hideous Laughter' + s3)
 s4(s1 + 'Thunderwave' + s2 + 'Thunderwave' + s3)
 s4(s1 + 'UnseenServant' + s2 + 'Unseen Servant' + s3)
 s4('2nd(Slot@4th(2/2)@5th(3/3)')
 s4(s1 + 'AnimalMessenger' + s2 + 'Animal Messenger' + s3)
 s4(s1 + 'Blindness' + s2 + 'BlindnessDeafness' + s3)
 s4(s1 + 'CalmEmotions)' + s2 + 'Calm Emotions' + s3)
 s4(s1 + 'CloudOfDagger' + s2 + 'Cloud of Daggers' + s3)
 s4(s1 + 'CrownOfMadness' + s2 + 'Crown of Madness' + s3)
 s4(s1 + 'DetectThoughts' + s2 + 'Detect Thoughts' + s3)
 s4(s1 + 'EnhanceAbility' + s2 + 'Enhance Ability' + s3)
 s4(s1 + 'Enthrall' + s2 + 'Enthrall' + s3)
 s4(s1 + 'Heat Metal' + s2 + 'Heat Metal' + s3)
 s4(s1 + 'HoldPerson' + s2 + 'Hold Person' + s3)
 s4(s1 + 'Invisibility' + s2 + 'Invisibility' + s3)
 s4(s1 + 'Knock' + s2 + 'Knock' + s3)
 s4(s1 + 'LesserRestoration' + s2 + 'Lesser Restoration' + s3)
 s4(s1 + 'LocateAnimals' + s2 + 'Locate Animals or Plants' + s3)
 s4(s1 + 'LocateObject' + s2 + 'Locate Object' + s3)
 s4(s1 + 'MagicMouth' + s2 + 'Magic Mouth' + s3)
 s4(s1 + 'PhantasmalForce' + s2 + 'Phantasmal Force' + s3)
 s4(s1 + 'Pyrotechnics' + s2 + 'Pyrotechnics' + s3)
 s4(s1 + 'SeeInvisibility' + s2 + 'See Invisibility' + s3)
 s4(s1 + 'Shatter' + s2 + 'Shatter' + s3)
 s4(s1 + 'Silence' + s2 + 'Silence' + s3)
 s4(s1 + 'Skywrite' + s2 + 'Skywrite' + s3)
 s4(s1 + 'Suggestion' + s2 + 'Suggestion' + s3)
 s4(s1 + 'WardingWind' + s2 + 'Warding Wind' + s3)
 s4(s1 + 'ZoneOfTruth' + s2 + 'Zone of Truth' + s3)
 s4('3rd Slot@5th(2/2) @6th(3/3)')
 s4(s1 + 'BestowCurse' + s2 + 'Bestow Curse' + s3)
 s4(s1 + 'Clairvoyance' + s2 + 'Clairvoyance' + s3)
 s4(s1 + 'DispelMagic' + s2 + 'Dispel Magic' + s3)
 s4(s1 + 'Fear' + s2 + 'Fear' + s3)
 s4(s1 + 'FeignDeath' + s2 + 'Feign Death' + s3)
 s4(s1 + 'GlyphOfWarding' + s2 + 'Glyph of Warding' + s3)
 s4(s1 + 'HypnoticPattern' + s2 + 'Hypnotic Pattern' + s3)
 s4(s1 + 'LeomundsTinyHut' + s2 + 'Leomund s Tiny Hut' + s3)
 s4(s1 + 'MajorImage' + s2 + 'Major Image' + s3)
 s4(s1 + 'Nondetection' + s2 + 'Nondetection' + s3)
 s4(s1 + 'PlantGrowth' + s2 + 'Plant Growth' + s3)
 s4(s1 + 'Sending' + s2 + 'Sending' + s3)
 s4(s1 + 'SpeakWithDead' + s2 + 'Speak with Dead' + s3)
 s4(s1 + 'SpeakWithPlants' + s2 + 'Speak with Plants' + s3)
 s4(s1 + 'StinkingCloud' + s2 + 'Stinking Cloud' + s3)
 s4(s1 + 'Tongues' + s2 + 'Tongues' + s3)
 s4('4th Slot@7th(1/1) @8th(2/2) @9th(3/3)')
 s4(s1 + 'Compulsion' + s2 + 'Compulsion' + s3)
 s4(s1 + 'Confusion' + s2 + 'Confusion' + s3)
 s4(s1 + 'DimensionDoor' + s2 + 'Dimension Door' + s3)
 s4(s1 + 'FreedomOfMovement' + s2 + 'Freedom of Movement' + s3)
 s4(s1 + 'GreaterInvisibility' + s2 + 'Greater Invisibility' + s3)
 s4(s1 + 'HallucinatoryTerrain' + s2 + 'Hallucinatory Terrain' + s3)
 s4(s1 + 'LocateCreature' + s2 + 'Locate Creature' + s3)
 s4(s1 + 'Polymorph' + s2 + 'Polymorph' + s3)
 s4('5th Slot@9th(1/1) @(10th 2/2)')
 s4(s1 + 'AnimateObjects' + s2 + 'Animate Objects' + s3)
 s4(s1 + 'Awaken' + s2 + 'Awaken' + s3)
 s4(s1 + 'DominatePerson' + s2 + 'Dominate Person' + s3)
 s4(s1 + 'Dream' + s2 + 'Dream' + s3)
 s4(s1 + 'Geas' + s2 + 'Geas' + s3)
 s4(s1 + 'GreaterRestoration' + s2 + 'Greater Restoration' + s3)
 s4(s1 + 'HoldMonster' + s2 + 'Hold Monster' + s3)
 s4(s1 + 'LegendLore' + s2 + 'Legend Lore' + s3)
 s4(s1 + 'MassCureWounds' + s2 + 'Mass Cure Wounds' + s3)
 s4(s1 + 'Mislead' + s2 + 'Mislead' + s3)
 s4(s1 + 'ModifyMemory' + s2 + 'Modify Memory' + s3)
 s4(s1 + 'PlanarBinding' + s2 + 'Planar Binding' + s3)
 s4(s1 + 'RaiseDead' + s2 + 'Raise Dead' + s3)
 s4(s1 + 'Scrying' + s2 + 'Scrying' + s3)
 s4(s1 + 'Seeming' + s2 + 'Seeming' + s3)
 s4(s1 + 'TeleportationCircle' + s2 + 'Teleportation Circle' + s3)
 s4('6th Slot@(11th 1/1)(19th 2/2)')
 s4(s1 + 'Eyebite' + s2 + 'Eyebite' + s3)
 s4(s1 + 'FindThePath' + s2 + 'Find the Path' + s3)
 s4(s1 + 'GuardsAndWards' + s2 + 'Guards and Wards' + s3)
 s4(s1 + 'MassSuggestion' + s2 + 'Mass Suggestion' + s3)
 s4(s1 + 'OttosIrreDance' + s2 + 'Otto s Irre. Dance' + s3)
 s4(s1 + 'ProgrammedIllusion' + s2 + 'Programmed Illusion' + s3)
 s4(s1 + 'TrueSeeing' + s2 + 'True Seeing' + s3)
 s4('7th Slot@(13th 1/1) @(20th 2/2)')
 s4(s1 + 'Etherealness' + s2 + 'Etherealness' + s3)
 s4(s1 + 'Forcecage' + s2 + 'Forcecage' + s3)
 s4(s1 + 'MirageArcane' + s2 + 'Mirage Arcane' + s3)
 s4(s1 + 'MorMagniMansion' + s2 + 'Mor. Magni. Mansion' + s3)
 s4(s1 + 'MorSword' + s2 + 'Mor. Sword' + s3)
 s4(s1 + 'ProjectImage' + s2 + 'Project Image' + s3)
 s4(s1 + 'Regenerate' + s2 + 'Regenerate' + s3)
 s4(s1 + 'Resurrection' + s2 + 'Resurrection' + s3)
 s4(s1 + 'Symbol' + s2 + 'Symbol' + s3)
 s4(s1 + 'Teleport' + s2 + 'Teleport' + s3)
 s4(s1 + 'Whirlwind' + s2 + 'Whirlwind' + s3)
 s4('8th Slot@(15th 1/1)')
 s4(s1 + 'DominateMonster' + s2 + 'Dominate Monster' + s3)
 s4(s1 + 'Feeblemind' + s2 + 'Feeblemind' + s3)
 s4(s1 + 'Glibness' + s2 + 'Glibness' + s3)
 s4(s1 + 'MindBlank' + s2 + 'Mind Blank' + s3)
 s4(s1 + 'PowerWordStun' + s2 + 'Power Word Stun' + s3)
 s4('9th Slot@(17th 1/1)')
 s4(s1 + 'Foresight' + s2 + 'Foresight' + s3)
 s4(s1 + 'PowerWordHeal' + s2 + 'Power Word Heal' + s3)
 s4(s1 + 'PowerWordKill' + s2 + 'True Polymorph' + s3)
 s4('</td></tr></table></td><td><table><tr><td><h3>Cleric Spells</h3>')
 s4(s1 + 'PreserveLife' + s2 + 'Preserve Life' + s3)
 s4(s1 + 'TurnUndead' + s2 + 'Turn Undead' + s3)
 s4('CantripsAt 1st Class Level 3 Cantrips Known At 4th Class Level 4 Cantrips Known At 10th Class Level 5 Cantrips Known ')
 s4(s1 + 'Guidance' + s2 + 'Guidance' + s3)
 s4(s1 + 'Light' + s2 + 'Light' + s3)
 s4(s1 + 'Mending' + s2 + 'Mending' + s3)
 s4(s1 + 'Resistance' + s2 + 'Resistance' + s3)
 s4(s1 + 'SacredFlame' + s2 + 'Sacred Flame' + s3)
 s4(s1 + 'SpareTheDying' + s2 + 'Spare the Dying' + s3)
 s4(s1 + 'Thaumaturgy' + s2 + 'Thaumaturgy' + s3)
 s4('1st Slot@1st(2) @2nd(3) @3rd(4) ')
 s4(s1 + 'Bane' + s2 + 'Bane' + s3)
 s4(s1 + 'Bless' + s2 + 'Bless' + s3)
 s4(s1 + 'Command' + s2 + 'Command' + s3)
 s4(s1 + 'CreateDestroyWater' + s2 + 'Create/Destroy Water' + s3)
 s4(s1 + 'CureWounds' + s2 + 'Cure Wounds' + s3)
 s4(s1 + 'DetectEvilGood' + s2 + 'Detect Evil/Good' + s3)
 s4(s1 + 'DetectMagic' + s2 + 'Detect Magic' + s3)
 s4(s1 + 'DetectPoisonDisease' + s2 + 'Detect Poison and Disease' + s3)
 s4(s1 + 'GuidingBolt' + s2 + 'Guiding Bolt' + s3)
 s4(s1 + 'HealingWord' + s2 + 'Healing Word' + s3)
 s4(s1 + 'InflictWounds' + s2 + 'Inflict Wounds' + s3)
 s4(s1 + 'ProtectionFromEvilOrGood' + s2 + 'Protection from Evil or Good' + s3)
 s4(s1 + 'PurifyFoodAndDrink' + s2 + 'Sanctuary' + s3)
 s4(s1 + 'ShieldOfFaith' + s2 + 'Shield of Faith' + s3)
 s4('2nd(Slot4th(2) @5th(3)')
 s4(s1 + 'Aid' + s2 + 'Aid' + s3)
 s4(s1 + 'Augury' + s2 + 'Augury' + s3)
 s4(s1 + 'BlindnessDeafness' + s2 + 'Blindness Deafness' + s3)
 s4(s1 + 'CalmEmotions' + s2 + 'Calm Emotions' + s3)
 s4(s1 + 'ContinualFlame' + s2 + 'Continual Flame' + s3)
 s4(s1 + 'EnhanceAbility' + s2 + 'Gentle Repose' + s3)
 s4(s1 + 'HoldPerson' + s2 + 'Hold Person' + s3)
 s4(s1 + 'LesserRestoration' + s2 + 'Lesser Restoration' + s3)
 s4(s1 + 'LocateObject' + s2 + 'Locate Object' + s3)
 s4(s1 + 'PrayerOfHealing' + s2 + 'Prayer of Healing' + s3)
 s4(s1 + 'ProtectionFromPoison' + s2 + 'Protection from Poison' + s3)
 s4(s1 + 'Silence' + s2 + 'Silence' + s3)
 s4(s1 + 'SpiritualWeapon' + s2 + 'Spiritual Weapon' + s3)
 s4(s1 + 'WardingBond' + s2 + 'Warding Bond' + s3)
 s4(s1 + 'ZoneOfTruth' + s2 + 'Zone of Truth' + s3)
 s4('3rd Slot@5th(2)@6th(3)')
 s4(s1 + 'AnimateDead' + s2 + 'Animate Dead' + s3)
 s4(s1 + 'BeaconOfHope' + s2 + 'Beacon of Hope' + s3)
 s4(s1 + 'BestowCurse' + s2 + 'Clairvoyance' + s3)
 s4(s1 + 'CreateFoodWater' + s2 + 'Create Food/Water' + s3)
 s4(s1 + 'Daylight' + s2 + 'Daylight' + s3)
 s4(s1 + 'DispelMagic' + s2 + 'Dispel Magic' + s3)
 s4(s1 + 'FeignDeath' + s2 + 'Feign Death' + s3)
 s4(s1 + 'GlyphOfWarding' + s2 + 'Glyph of Warding' + s3)
 s4(s1 + 'MagicCircle' + s2 + 'Magic Circle' + s3)
 s4(s1 + 'MassHealingWord' + s2 + 'Mass Healing Word' + s3)
 s4(s1 + 'MeldIntoStone' + s2 + 'Meld into Stone' + s3)
 s4(s1 + 'ProtectionFromEnergy' + s2 + 'Protection from Energy' + s3)
 s4(s1 + 'RemoveCurse' + s2 + 'Remove Curse' + s3)
 s4(s1 + 'Revivify' + s2 + 'Revivify' + s3)
 s4(s1 + 'Sending' + s2 + 'Sending' + s3)
 s4(s1 + 'SpeakWithDead' + s2 + 'Speak with Dead' + s3)
 s4(s1 + 'SpiritGuardians' + s2 + 'Spirit Guardians' + s3)
 s4(s1 + 'Tongues' + s2 + 'Tongues' + s3)
 s4(s1 + 'WaterWalk' + s2 + 'Water Walk' + s3)
 s4('4th Slot@7th(1) @8th(2) @9th(3)')
 s4(s1 + 'Banishment' + s2 + 'Banishment' + s3)
 s4(s1 + 'ControlWater' + s2 + 'Control Water' + s3)
 s4(s1 + 'DeathWard' + s2 + 'Death Ward' + s3)
 s4(s1 + 'Divination' + s2 + 'Divination' + s3)
 s4(s1 + 'FreedomOfMovement' + s2 + 'Freedom of Movement' + s3)
 s4(s1 + 'GuardianOfFaith' + s2 + 'Guardian of Faith' + s3)
 s4(s1 + 'LocateCreature' + s2 + 'Locate Creature' + s3)
 s4(s1 + 'StoneShape' + s2 + 'Stone Shape' + s3)
 s4('5th Slot@9th(1) @(10th 2)')
 s4(s1 + 'Commune' + s2 + 'Commune' + s3)
 s4(s1 + 'Contagion' + s2 + 'Contagion' + s3)
 s4(s1 + 'DispelEvilOrGood' + s2 + 'Dispel Evil or Good' + s3)
 s4(s1 + 'Geas' + s2 + 'Geas' + s3)
 s4(s1 + 'GreaterRestoration' + s2 + 'Greater Restoration' + s3)
 s4(s1 + 'Hallow' + s2 + 'Hallow' + s3)
 s4(s1 + 'InsectPlague' + s2 + 'Insect Plague' + s3)
 s4(s1 + 'LegendLore' + s2 + 'Legend Lore' + s3)
 s4(s1 + 'MassCureWounds' + s2 + 'Mass Cure Wounds' + s3)
 s4(s1 + 'PlanarBinding' + s2 + 'Planar Binding' + s3)
 s4(s1 + 'RaiseDead' + s2 + 'Raise Dead' + s3)
 s4(s1 + 'Scrying' + s2 + 'Scrying' + s3)
 s4('6th Slot@(11th 1) @(19th 2)')
 s4(s1 + 'BladeBarrier' + s2 + 'Blade Barrier' + s3)
 s4(s1 + 'CreateUndead' + s2 + 'Create Undead' + s3)
 s4(s1 + 'FindThePath' + s2 + 'Find the Path' + s3)
 s4(s1 + 'Forbiddance' + s2 + 'Forbiddance' + s3)
 s4(s1 + 'Harm' + s2 + 'Harm' + s3)
 s4(s1 + 'Heal' + s2 + 'Heal' + s3)
 s4(s1 + 'HeroesFeast' + s2 + 'Heroes Feast' + s3)
 s4(s1 + 'PlanarAlly' + s2 + 'Planar Ally' + s3)
 s4(s1 + 'TrueSeeing' + s2 + 'True Seeing' + s3)
 s4(s1 + 'WordOfRecall' + s2 + 'Word of Recall' + s3)
 s4('7th Slot@(13th 1) @(20th 2) ')
 s4(s1 + 'ConjCelestial' + s2 + 'Divine Word' + s3)
 s4(s1 + 'FireStorm' + s2 + 'Fire Storm' + s3)
 s4(s1 + 'PlaneShift' + s2 + 'Plane Shift' + s3)
 s4(s1 + 'Regenerate' + s2 + 'Regenerate' + s3)
 s4(s1 + 'Resurrection' + s2 + 'Resurrection' + s3)
 s4('8th Slot@(15th 1)')
 s4(s1 + 'AntimagicField' + s2 + 'Antimagic Field' + s3)
 s4(s1 + 'ControlWeather' + s2 + 'Control Weather' + s3)
 s4(s1 + 'Earthquake' + s2 + 'Earthquake' + s3)
 s4(s1 + 'HolyAura' + s2 + 'Holy Aura' + s3)
 s4('9th Slot@(17th 1) @(20th 2) ')
 s4(s1 + 'AstralProjection' + s2 + 'Astral Projection' + s3)
 s4(s1 + 'Gate' + s2 + 'Gate' + s3)
 s4(s1 + 'MassHeal' + s2 + 'Mass Heal' + s3)
 s4(s1 + 'TrueResurrection' + s2 + 'True Resurrection' + s3)
 s4('</td></tr></table></td><td><table><tr><td><h3>Druid Spells</h3>Cantrips@1st(2) @4th(3) @(10th 4)')
 s4(s1 + 'DruidCraft' + s2 + 'DruidCraft' + s3)
 s4(s1 + 'Guidance' + s2 + 'Guidance' + s3)
 s4(s1 + 'Mending' + s2 + 'Mending' + s3)
 s4(s1 + 'PoisonSpray' + s2 + 'Poison Spray' + s3)
 s4(s1 + 'ProduceFlame' + s2 + 'Produce Flame' + s3)
 s4(s1 + 'Resistance' + s2 + 'Resistance' + s3)
 s4(s1 + 'Shillelagh' + s2 + 'Shillelagh' + s3)
 s4(s1 + 'ThornWhip' + s2 + 'Thorn Whip' + s3)
 s4(s1 + 'Thunderclap' + s2 + 'Thunderclap' + s3)
 s4('1st Slot@1st(2/2) @2nd(3/3)@3rd(4/4)')
 s4(s1 + 'AnimalFriendship' + s2 + 'Animal Friendship' + s3)
 s4(s1 + 'CharmPerson' + s2 + 'Charm Person' + s3)
 s4(s1 + 'CreateDestroyWater' + s2 + 'Create/Destroy Water' + s3)
 s4(s1 + 'CureWounds' + s2 + 'Cure Wounds' + s3)
 s4(s1 + 'DetectMagic' + s2 + 'Detect Magic' + s3)
 s4(s1 + 'DetectPoisonDisease' + s2 + 'Detect Poison and Disease' + s3)
 s4(s1 + 'EarthTremor' + s2 + 'Earth Tremor' + s3)
 s4(s1 + 'Entangle' + s2 + 'Entangle' + s3)
 s4(s1 + 'FaerieFire' + s2 + 'Faerie Fire' + s3)
 s4(s1 + 'FogCloud' + s2 + 'Fog Cloud' + s3)
 s4(s1 + 'Goodberry' + s2 + 'Goodberry' + s3)
 s4(s1 + 'HealingWord' + s2 + 'Healing Word' + s3)
 s4(s1 + 'Jump' + s2 + 'Jump' + s3)
 s4(s1 + 'Longstrider' + s2 + 'Longstrider' + s3)
 s4(s1 + 'PurifyFoodAndDrink' + s2 + 'Purify Food and Drink' + s3)
 s4(s1 + 'SpeakWithAnimals' + s2 + 'Speak with Animals' + s3)
 s4(s1 + 'Thunderwave' + s2 + 'Thunderwave' + s3)
 s4('2nd(Slot@4th(2/2) @5th(3/3)')
 s4(s1 + 'AnimalMessenger' + s2 + 'Animal Messenger' + s3)
 s4(s1 + 'Barkskin' + s2 + 'Barkskin' + s3)
 s4(s1 + 'BeastSense' + s2 + 'Beast Sense' + s3)
 s4(s1 + 'Darkness' + s2 + 'Darkness' + s3)
 s4(s1 + 'EnhanceAbility' + s2 + 'Enhance Ability' + s3)
 s4(s1 + 'FindTraps' + s2 + 'Find Traps' + s3)
 s4(s1 + 'FlameBlade' + s2 + 'Flame Blade' + s3)
 s4(s1 + 'GustOfWind' + s2 + 'Gust of Wind' + s3)
 s4(s1 + 'HeatMetal' + s2 + 'Heat Metal' + s3)
 s4(s1 + 'HoldPerson' + s2 + 'Hold Person' + s3)
 s4(s1 + 'LesserRestoration' + s2 + 'Lesser Restoration' + s3)
 s4(s1 + 'LocateAnimals or Plants' + s2 + 'Locate Animals or Plants' + s3)
 s4(s1 + 'LocateObject' + s2 + 'Locate Object' + s3)
 s4(s1 + 'Moonbeam' + s2 + 'Moonbeam' + s3)
 s4(s1 + 'PassWithoutTrace' + s2 + 'Pass without Trace' + s3)
 s4(s1 + 'ProtectionFromPoison' + s2 + 'Protection from Poison' + s3)
 s4(s1 + 'SpikeGrowth' + s2 + 'Spike Growth' + s3)
 s4(s1 + 'Skywrite' + s2 + 'Skywrite' + s3)
 s4(s1 + 'WardingWind' + s2 + 'Warding Wind' + s3)
 s4('3rd Slot@5th(2/2) @6th(3/3) ')
 s4(s1 + 'CallLightning' + s2 + 'Call Lightning' + s3)
 s4(s1 + 'ConjureAnimals' + s2 + 'ConjureAnimals' + s3)
 s4(s1 + 'Daylight' + s2 + 'Daylight' + s3)
 s4(s1 + 'Dispel Magic' + s2 + 'Dispel Magic' + s3)
 s4(s1 + 'FeignDeath' + s2 + 'Feign Death' + s3)
 s4(s1 + 'MeldIntoStone' + s2 + 'Meld into Stone' + s3)
 s4(s1 + 'PlantGrowth' + s2 + 'Plant Growth' + s3)
 s4(s1 + 'ProtectionFromEnergy' + s2 + 'Protection from Energy' + s3)
 s4(s1 + 'SleetStorm' + s2 + 'Sleet Storm' + s3)
 s4(s1 + 'SpeakWithPlants' + s2 + 'Speak with Plants' + s3)
 s4('4th Slot@7th(1/1) @8th(2/2) @9th(3/3) ')
 s4(s1 + 'Blight' + s2 + 'Blight' + s3)
 s4(s1 + 'Confusion' + s2 + 'Confusion' + s3)
 s4(s1 + 'ConjureMinorElementals' + s2 + 'Conjure Minor Elementals' + s3)
 s4(s1 + 'ConjureWoodlandBeings' + s2 + 'Conjure Woodland Beings' + s3)
 s4(s1 + 'ControlWater' + s2 + 'Control Water' + s3)
 s4(s1 + 'DominateBeast' + s2 + 'Dominate Beast' + s3)
 s4(s1 + 'FreedomOfMovement' + s2 + 'Freedom of Movement' + s3)
 s4(s1 + 'GiantInsect' + s2 + 'Giant Insect' + s3)
 s4(s1 + 'GraspingVine' + s2 + 'Grasping Vine' + s3)
 s4(s1 + 'HallucinatoryTerrain' + s2 + 'Hallucinatory Terrain' + s3)
 s4(s1 + 'IceStorm' + s2 + 'Ice Storm' + s3)
 s4(s1 + 'LocateCreature' + s2 + 'Locate Creature' + s3)
 s4(s1 + 'Polymorph' + s2 + 'Polymorph' + s3)
 s4(s1 + 'StoneShape' + s2 + 'Stone Shape' + s3)
 s4(s1 + 'Stoneskin' + s2 + 'Stoneskin' + s3)
 s4(s1 + 'WallOfFire' + s2 + 'Wall of Fire' + s3)
 s4('5th Slot@9th(1/1) @(10th 2/2) ')
 s4(s1 + 'AntilifeShell' + s2 + 'Antilife Shell' + s3)
 s4(s1 + 'Awaken' + s2 + 'Awaken' + s3)
 s4(s1 + 'CommuneWithNature' + s2 + 'Commune with Nature' + s3)
 s4(s1 + 'ConjureElemental' + s2 + 'Conjure Elemental' + s3)
 s4(s1 + 'Contagion' + s2 + 'Contagion' + s3)
 s4(s1 + 'Geas' + s2 + 'Geas' + s3)
 s4(s1 + 'GreaterRestoration' + s2 + 'Greater Restoration' + s3)
 s4(s1 + 'InsectPlague' + s2 + 'Mass Cure Wounds' + s3)
 s4(s1 + 'PlanarBinding' + s2 + 'Planar Binding' + s3)
 s4(s1 + 'Reincarnate' + s2 + 'Reincarnate' + s3)
 s4(s1 + 'Scrying' + s2 + 'Scrying' + s3)
 s4(s1 + 'TreeStride' + s2 + 'Tree Stride' + s3)
 s4(s1 + 'WallOfStone' + s2 + 'Wall of Stone' + s3)
 s4('6th Slot@(11th 1/1) @(19th 2/2) ')
 s4(s1 + 'ConjureFey' + s2 + 'Conjure Fey' + s3)
 s4(s1 + 'FindThePath' + s2 + 'Find the Path' + s3)
 s4(s1 + 'Heal' + s2 + 'Heal' + s3)
 s4(s1 + 'HeroesFeast' + s2 + 'Heroes Feast' + s3)
 s4(s1 + 'MoveEarth' + s2 + 'Move Earth' + s3)
 s4(s1 + 'Sunbeam' + s2 + 'Sunbeam' + s3)
 s4(s1 + 'TransportViaPlants' + s2 + 'Transport via Plants' + s3)
 s4(s1 + 'WallOfThorns' + s2 + 'Wall of Thorns' + s3)
 s4(s1 + 'WindWalk' + s2 + 'Wind Walk' + s3)
 s4('7th Slot@(13th 1/1) @(20th 2/2) ')
 s4(s1 + 'FireStorm' + s2 + 'Fire Storm' + s3)
 s4(s1 + 'MirageArcane' + s2 + 'Mirage Arcane' + s3)
 s4(s1 + 'PlaneShift' + s2 + 'Plane Shift' + s3)
 s4(s1 + 'Regenerate' + s2 + 'Regenerate' + s3)
 s4(s1 + 'ReverseGravity' + s2 + 'Reverse Gravity' + s3)
 s4('8th Slot@(15th 1/1)')
 s4(s1 + 'AnimalShapes' + s2 + 'Animal Shapes' + s3)
 s4(s1 + 'PrismaticSpray' + s2 + 'Prismatic Spray' + s3)
 s4(s1 + 'ControlWeather' + s2 + 'Control Weather' + s3)
 s4(s1 + 'Earthquake' + s2 + 'Earthquake' + s3)
 s4(s1 + 'Feeblemind' + s2 + 'Feeblemind' + s3)
 s4(s1 + 'Sunburst' + s2 + 'Sunburst' + s3)
 s4(s1 + 'Tsunami' + s2 + 'Tsunami' + s3)
 s4('9th Slot@(17th 1/1)')
 s4(s1 + 'Foresight' + s2 + 'Foresight' + s3)
 s4(s1 + 'Shapechange' + s2 + 'Shapechange' + s3)
 s4(s1 + 'StormOfVengeance' + s2 + 'Storm of Vengeance' + s3)
 s4('</td></tr></table></td><td><table><tr><td><h3>Eldritch Knight Spells</h3>CantripsAt 3rd Class Level 2 Cantrips Known At 10th Class Level 3 Cantrips Known ')
 s4(s1 + 'BladeWard' + s2 + 'Blade Ward' + s3)
 s4(s1 + 'DancingLights' + s2 + 'Dancing Lights' + s3)
 s4(s1 + 'FireBolt' + s2 + 'Fire Bolt' + s3)
 s4(s1 + 'Light' + s2 + 'Light' + s3)
 s4(s1 + 'RayOfFrost' + s2 + 'Ray of Frost' + s3)
 s4(s1 + 'ShockingGrasp' + s2 + 'Shocking Grasp' + s3)
 s4('Spells Known@3rd(3)@4th(4)@7th(5)@8th(6)@(10th 7)@(11th 8)@(13th 9)@14(10)@16th 11)@19(12)@(20th 13)1st Slot@3rd(2/2)@4th(3/3)@7th(4/4)')
 s4(s1 + 'BurningHands' + s2 + 'Burning Hands' + s3)
 s4(s1 + 'ChromaticOrb' + s2 + 'Chromatic Orb' + s3)
 s4(s1 + 'MagicMissile' + s2 + 'Magic Missile' + s3)
 s4(s1 + 'ProtectionFromEvilOrGood' + s2 + 'Protection from Evil or Good' + s3)
 s4(s1 + 'Shield' + s2 + 'Shield' + s3)
 s4('2nd(Slot@7th(2/2) @(10th 3/3) ')
 s4(s1 + 'ContinualFlame' + s2 + 'Continual Flame' + s3)
 s4(s1 + 'Darkness' + s2 + 'Darkness' + s3)
 s4(s1 + 'GustOfWind' + s2 + 'GustOfWind' + s3)
 s4(s1 + 'ScorchingRay' + s2 + 'Scorching Ray' + s3)
 s4(s1 + 'Shatter' + s2 + 'Shatter' + s3)
 s4(s1 + 'ArcaneLock' + s2 + 'Arcane Lock' + s3)
 s4('3rd Slot@(13th 2/2) @16th 3/3)')
 s4(s1 + 'Fireball' + s2 + 'Fireball' + s3)
 s4(s1 + 'LightningBolt' + s2 + 'LightningBolt' + s3)
 s4(s1 + 'Sending' + s2 + 'Sending' + s3)
 s4(s1 + 'Counterspell' + s2 + 'Counterspell' + s3)
 s4(s1 + 'DispelMagic' + s2 + 'Dispel Magic' + s3)
 s4(s1 + 'GlyphOfWarding' + s2 + 'Glyph of Warding' + s3)
 s4(s1 + 'MagicCircle' + s2 + 'Arcane Lock' + s3)
 s4(s1 + 'Nondetection' + s2 + 'Nondetection' + s3)
 s4(s1 + 'ProtectionFromEnergy' + s2 + 'Protection From Energy' + s3)
 s4(s1 + 'RemoveCurse' + s2 + 'Remove Curse' + s3)
 s4('4th Spell Slot@(19th 1/1)')
 s4(s1 + 'FireShield' + s2 + 'Fire Shield' + s3)
 s4(s1 + 'IceStorm' + s2 + 'Ice Storm' + s3)
 s4(s1 + 'OtelukesResilientSphere' + s2 + 'Otiluke s Resilient Sphere' + s3)
 s4(s1 + 'WallOfFire' + s2 + 'Wall of Fire' + s3)
 s4(s1 + 'Stoneskin' + s2 + 'Stoneskin' + s3)
 s4('</br></div>Paladin Spells<div>')
 s4(s1 + 'DivineSmite' + s2 + 'Divine Smite' + s3)
 s4(s1 + 'LayOnHands' + s2 + 'Lay On Hands' + s3)
 s4('1st Slot @2nd 2/2)@3rd(3/3)@5th(4/4)')
 s4(s1 + 'Bless' + s2 + 'Bless' + s3)
 s4(s1 + 'Command' + s2 + 'Command' + s3)
 s4(s1 + 'CompelledDuel' + s2 + 'Compelled Duel' + s3)
 s4(s1 + 'DetectEvilGood' + s2 + 'Detect Evil Good' + s3)
 s4(s1 + 'DetectMagic' + s2 + 'Detect Magic' + s3)
 s4(s1 + 'DetectPoisonDisease' + s2 + 'Detect Poison Disease' + s3)
 s4(s1 + 'DivineFavor' + s2 + 'Divine Favor' + s3)
 s4(s1 + 'Heroism' + s2 + 'Heroism' + s3)
 s4(s1 + 'ProtectionFromEvilOrGood' + s2 + 'Protection from Evil or Good' + s3)
 s4(s1 + 'PurifyFoodAndDrink' + s2 + 'Purify Food and Drink' + s3)
 s4(s1 + 'SearingSmite' + s2 + 'Searing Smite' + s3)
 s4(s1 + 'ShieldOfFaith' + s2 + 'ShieldOfFaith' + s3)
 s4(s1 + 'ThunderousSmite' + s2 + 'ThunderousSmite' + s3)
 s4(s1 + 'WrathfulSmite' + s2 + 'Wrathful Smite' + s3)
 s4('2nd(Slot@5th(2/2) @7th(3/3) ')
 s4(s1 + 'Aid' + s2 + 'Aid' + s3)
 s4(s1 + 'BrandingSmite' + s2 + 'Branding Smite' + s3)
 s4(s1 + 'FindSteed' + s2 + 'Find Steed' + s3)
 s4(s1 + 'LocateObject' + s2 + 'LocateObject' + s3)
 s4(s1 + 'MagicWeapon' + s2 + 'Magic Weapon' + s3)
 s4(s1 + 'ProtectionFromPoision' + s2 + 'Protection From Poison' + s3)
 s4(s1 + 'ZoneOfTruth' + s2 + 'Zone of Truth' + s3)
 s4('3rd Slot@9th(2/2) @(11th 3/3) ')
 s4(s1 + 'AuraOfVitality' + s2 + 'Aura of Vitality' + s3)
 s4(s1 + 'BanishingSmite' + s2 + 'Banishing Smite' + s3)
 s4(s1 + 'BlindingSmite' + s2 + 'Blinding Smite' + s3)
 s4(s1 + 'CreateFoodWater' + s2 + 'CreateFoodWater' + s3)
 s4(s1 + 'CrusadersMantle' + s2 + 'Crusader s Mantle' + s3)
 s4(s1 + 'Daylight' + s2 + 'Daylight' + s3)
 s4(s1 + 'DispelMagic' + s2 + 'Dispel Magic' + s3)
 s4(s1 + 'ElementalWeapon' + s2 + 'Elemental weapon' + s3)
 s4(s1 + 'EnsnaringStrike' + s2 + 'Ensnaring Strike' + s3)
 s4(s1 + 'MagicCircle' + s2 + 'Magic Circle' + s3)
 s4(s1 + 'RemoveCurse' + s2 + 'Remove Curse' + s3)
 s4(s1 + 'Revivify' + s2 + 'Revivify' + s3)
 s4('4th Slot@(13th 1/1)@(15th 2/2)@(17th 3/3)')
 s4(s1 + 'AuraOfLife' + s2 + 'Aura of Life' + s3)
 s4(s1 + 'Banishment' + s2 + 'Banishment' + s3)
 s4(s1 + 'DeathWard' + s2 + 'Death Ward' + s3)
 s4(s1 + 'LocateCreature' + s2 + 'LocateCreature' + s3)
 s4(s1 + 'DestructiveSmite' + s2 + 'Destructive Smite' + s3)
 s4(s1 + 'DispelEvilOrGood' + s2 + 'Dispel Evil or Good' + s3)
 s4(s1 + 'Geas' + s2 + 'Geas' + s3)
 s4(s1 + 'RaiseDead' + s2 + 'Raise Dead' + s3)
 s4(s1 + 'StaggeringSmite' + s2 + 'Staggering Smite' + s3)
 s4('5th Slot@(17th 1/1)@(19th 2/2)')
 s4(s1 + 'CircleOfPower' + s2 + 'Circle of Power' + s3)
 s4('</div>Ranger Spells<div>1st Slot@1st(1/1) @2nd 2/2) ')
 s4(s1 + 'Alarm' + s2 + 'Alarm' + s3)
 s4(s1 + 'AnimalFriendship' + s2 + 'Animal Friendship' + s3)
 s4(s1 + 'CureWounds' + s2 + 'Cure Wounds' + s3)
 s4(s1 + 'DetectMagic' + s2 + 'Detect Magic' + s3)
 s4(s1 + 'AnimalFriendship' + s2 + 'Animal Friendship' + s3)
 s4(s1 + 'DetectPoisonAndDisease' + s2 + 'Detect Poison and Disease' + s3)
 s4(s1 + 'EnsnaringStrike' + s2 + 'Ensnaring Strike' + s3)
 s4(s1 + 'FogCloud' + s2 + 'Fog Cloud' + s3)
 s4(s1 + 'Goodberry' + s2 + 'Goodberry' + s3)
 s4(s1 + 'HailOfThorns' + s2 + 'Hail of Thorns' + s3)
 s4(s1 + 'HuntersMark' + s2 + 'Hunter s Mark' + s3)
 s4(s1 + 'Jump' + s2 + 'Jump' + s3)
 s4(s1 + 'Longstrider' + s2 + 'Longstrider' + s3)
 s4(s1 + 'SpeakWithAnimals' + s2 + 'Speak with Animals' + s3)
 s4(s1 + 'AnimalMessenger' + s2 + 'Animal Messenger' + s3)
 s4('2nd(Slot@5th(2/2) ')
 s4(s1 + 'Barkskin' + s2 + 'Barkskin' + s3)
 s4(s1 + 'BeastSense' + s2 + 'Beast Sense' + s3)
 s4(s1 + 'CordonOfArrows' + s2 + 'Cordon of Arrows' + s3)
 s4(s1 + 'FindTraps' + s2 + 'Find Traps' + s3)
 s4(s1 + 'LesserRestoration' + s2 + 'Lesser Restoration' + s3)
 s4(s1 + 'LocateAnimalsOrPlants' + s2 + 'LocateAnimalsOrPlants' + s3)
 s4(s1 + 'Darkness' + s2 + 'Darkness' + s3)
 s4(s1 + 'LocateObject' + s2 + 'Locate Object' + s3)
 s4(s1 + 'PassWithoutTrace' + s2 + 'Pass Without Trace' + s3)
 s4(s1 + 'ProtectionFromPoison' + s2 + 'Protection From Poison' + s3)
 s4(s1 + 'Silence' + s2 + 'Silence' + s3)
 s4(s1 + 'SpikeGrowth' + s2 + 'Spike Growth' + s3)
 s4('3rd Slot@9th(2/2) ')
 s4(s1 + 'ConjureAnimals' + s2 + 'Conjure Animals' + s3)
 s4(s1 + 'ConjureBarrage' + s2 + 'Conjure Barrage' + s3)
 s4(s1 + 'Daylight' + s2 + 'Daylight' + s3)
 s4(s1 + 'LightningArrow' + s2 + 'Lightning Arrow' + s3)
 s4(s1 + 'Nondetection' + s2 + 'Nondetection' + s3)
 s4(s1 + 'PlantGrowth' + s2 + 'Plant Growth' + s3)
 s4(s1 + 'ProtectionFromEnergy' + s2 + 'ProtectionFromEnergy' + s3)
 s4(s1 + 'SpeakWithPlants' + s2 + 'Speak With Plants' + s3)
 s4(s1 + 'WaterBreathing' + s2 + 'Water Breathing' + s3)
 s4(s1 + 'WaterWalk' + s2 + 'Water Walk' + s3)
 s4('4th Slotat 13th level, 1 ')
 s4(s1 + 'ConjureWoodlandBeings' + s2 + 'Conjure Woodland Beings' + s3)
 s4(s1 + 'FreedomOfMovement' + s2 + 'Freedom of Movement' + s3)
 s4(s1 + 'GraspingVine' + s2 + 'Grasping Vine' + s3)
 s4(s1 + 'LocateCreature' + s2 + 'Locate Creature' + s3)
 s4(s1 + 'Stoneskin' + s2 + 'Stoneskin' + s3)
 s4(s1 + 'CommuneWithNature' + s2 + 'Commune with Nature' + s3)
 s4(s1 + 'ConjureVolley' + s2 + 'Conjure Volley' + s3)
 s4(s1 + 'SwiftQuiver' + s2 + 'Swift Quiver' + s3)
 s4(s1 + 'TreeStride' + s2 + 'Tree Stride' + s3)
 s4('</td></tr></table></td><td><table><tr><td><h3>Sorcerer Spells</h3>CantripsAt 1st Class Level 4 Cantrips Known At 4th Class Level 5 Level Cantrips Known At 10th Class Level 6 LevelCantrips Known')
 s4(s1 + 'AcidSplash' + s2 + 'Acid Splash' + s3)
 s4(s1 + 'BladeWard' + s2 + 'Blade Ward' + s3)
 s4(s1 + 'ChillTouch' + s2 + 'Chill Touch' + s3)
 s4(s1 + 'DancingLights' + s2 + 'Dancing Lights' + s3)
 s4(s1 + 'FireBolt' + s2 + 'Fire Bolt' + s3)
 s4(s1 + 'Friends' + s2 + 'Friends' + s3)
 s4(s1 + 'Light' + s2 + 'Light' + s3)
 s4(s1 + 'MageHand' + s2 + 'Mage Hand' + s3)
 s4(s1 + 'Mending' + s2 + 'Mending' + s3)
 s4(s1 + 'Message' + s2 + 'Message' + s3)
 s4(s1 + 'MinorIllusion' + s2 + 'Minor Illusion' + s3)
 s4(s1 + 'PoisonSpray' + s2 + 'Poison Spray' + s3)
 s4(s1 + 'Prestidigitation' + s2 + 'Prestidigitation' + s3)
 s4(s1 + 'RayOfFrost' + s2 + 'Ray of Frost' + s3)
 s4(s1 + 'ShockingGrasp' + s2 + 'Shocking Grasp' + s3)
 s4(s1 + 'Thunderclap' + s2 + 'Thunderclap' + s3)
 s4(s1 + 'TrueStrike' + s2 + 'True Strike' + s3)
 s4('1st Slot@1st(2/2) @2nd(3/3) @3rd(4/4) ')
 s4(s1 + 'BurningHands' + s2 + 'Burning Hands' + s3)
 s4(s1 + 'ChromaticOrb' + s2 + 'Chromatic Orb' + s3)
 s4(s1 + 'ColorSpray' + s2 + 'Color Spray' + s3)
 s4(s1 + 'ComprehendLanguages' + s2 + 'Comprehend Languages' + s3)
 s4(s1 + 'DetectMagic' + s2 + 'DetectMagic' + s3)
 s4(s1 + 'DisguiseSelf' + s2 + 'Disguise Self' + s3)
 s4(s1 + 'EarthTremor' + s2 + 'Earth Tremor' + s3)
 s4(s1 + 'ExpeditiousRetreat' + s2 + 'Expeditious Retreat' + s3)
 s4(s1 + 'FalseLife' + s2 + 'FalseLife' + s3)
 s4(s1 + 'FeatherFall' + s2 + 'Feather Fall' + s3)
 s4(s1 + 'FogCloud' + s2 + 'Fog Cloud' + s3)
 s4(s1 + 'Jump' + s2 + 'Jump' + s3)
 s4(s1 + 'FeatherFall' + s2 + 'Feather Fall' + s3)
 s4(s1 + 'MageArmor' + s2 + 'Mage Armor' + s3)
 s4(s1 + 'MagicMissile' + s2 + 'Magic Missile' + s3)
 s4(s1 + 'RayOfSickness' + s2 + 'Ray of Sickness' + s3)
 s4(s1 + 'Shield' + s2 + 'Shield' + s3)
 s4(s1 + 'SilentImage' + s2 + 'Silent Image' + s3)
 s4(s1 + 'Sleep' + s2 + 'Sleep' + s3)
 s4(s1 + 'Thunderwave' + s2 + 'Thunderwave' + s3)
 s4(s1 + 'WitchBolt' + s2 + 'Witch Bolt' + s3)
 s4('2nd(Slot(2/2) @2nd(3/3)4th ')
 s4(s1 + 'AlterSelf' + s2 + 'Alter Self' + s3)
 s4(s1 + 'BlindnessDeafness' + s2 + 'Blindness Deafness' + s3)
 s4(s1 + 'Blur' + s2 + 'Blur' + s3)
 s4(s1 + 'CloudOfDaggers' + s2 + 'Cloud of Daggers' + s3)
 s4(s1 + 'CrownOfMadness' + s2 + 'Crown of Madness' + s3)
 s4(s1 + 'Darkness' + s2 + 'Darkness' + s3)
 s4(s1 + 'DetectThoughts' + s2 + 'Detect Thoughts' + s3)
 s4(s1 + 'EnhanceAbility' + s2 + 'Enhance Ability' + s3)
 s4(s1 + 'EnlargeReduce' + s2 + 'Enlarge or Reduce' + s3)
 s4(s1 + 'Gust of Wind' + s2 + 'Gust of Wind' + s3)
 s4(s1 + 'HoldPerson' + s2 + 'Hold Person' + s3)
 s4(s1 + 'Invisibility' + s2 + 'Invisibility' + s3)
 s4(s1 + 'Knock' + s2 + 'Knock' + s3)
 s4(s1 + 'Levitate' + s2 + 'Levitate' + s3)
 s4(s1 + 'MirrorImage' + s2 + 'Mirror Image' + s3)
 s4(s1 + 'MistyStep' + s2 + 'Misty Step' + s3)
 s4(s1 + 'PhantasmalForce' + s2 + 'Phantasmal Force' + s3)
 s4(s1 + 'Pyrotechnics' + s2 + 'Pyrotechnics' + s3)
 s4(s1 + 'ScorchingRay' + s2 + 'Scorching Ray' + s3)
 s4(s1 + 'SeeInvisibility' + s2 + 'See Invisibility' + s3)
 s4(s1 + 'Shatter' + s2 + 'Shatter' + s3)
 s4(s1 + 'SpiderClimb' + s2 + 'Spider Climb' + s3)
 s4(s1 + 'Suggestion' + s2 + 'Suggestion' + s3)
 s4(s1 + 'WardingWind' + s2 + 'Warding Wind' + s3)
 s4(s1 + 'Web' + s2 + 'Web' + s3)
 s4('3rd Slot(2/2)@5th(3/3)@6th ')
 s4(s1 + 'Blink' + s2 + 'Blink' + s3)
 s4(s1 + 'Clairvoyance' + s2 + 'Clairvoyance' + s3)
 s4(s1 + 'Counterspell' + s2 + 'Counterspell' + s3)
 s4(s1 + 'Daylight' + s2 + 'Daylight' + s3)
 s4(s1 + 'DispelMagic' + s2 + 'Dispel Magic' + s3)
 s4(s1 + 'Fear' + s2 + 'Fear' + s3)
 s4(s1 + 'Fireball' + s2 + 'Fireball' + s3)
 s4(s1 + 'Fly' + s2 + 'Fly' + s3)
 s4(s1 + 'GaseousForm' + s2 + 'Gaseous Form' + s3)
 s4(s1 + 'Haste' + s2 + 'Haste' + s3)
 s4(s1 + 'HypnoticPattern' + s2 + 'Hypnotic Pattern' + s3)
 s4(s1 + 'LightningBolt' + s2 + 'Lightning Bolt' + s3)
 s4(s1 + 'MajorImage' + s2 + 'Major Image' + s3)
 s4(s1 + 'ProtectionFromEnergy' + s2 + 'Protection from Energy' + s3)
 s4(s1 + 'SleetStorm' + s2 + 'Sleet Storm' + s3)
 s4(s1 + 'Slow' + s2 + 'Slow' + s3)
 s4(s1 + 'StinkingCloud' + s2 + 'Stinking Cloud' + s3)
 s4(s1 + 'Tongues' + s2 + 'Tongues' + s3)
 s4(s1 + 'WaterBreathing' + s2 + 'Water Breathing' + s3)
 s4(s1 + 'WaterWalk' + s2 + 'Water Walk' + s3)
 s4('Slot(1/1)@(2/2)@(3/3)@9th')
 s4(s1 + 'Banishment' + s2 + 'Banishment' + s3)
 s4(s1 + 'Blight' + s2 + 'Blight' + s3)
 s4(s1 + 'Confusion' + s2 + 'Confusion' + s3)
 s4(s1 + 'DimensionDoor' + s2 + 'Dimension Door' + s3)
 s4(s1 + 'DominateBeast' + s2 + 'Dominate Beast' + s3)
 s4(s1 + 'IceStorm' + s2 + 'Ice Storm' + s3)
 s4(s1 + 'Polymorph' + s2 + 'Polymorph' + s3)
 s4(s1 + 'Stoneskin' + s2 + 'Stoneskin' + s3)
 s4(s1 + 'WallOfFire' + s2 + 'Wall of Fire' + s3)
 s4('Slot(1/1)@(2/2)@10th')
 s4(s1 + 'AnimateObjects' + s2 + 'Animate Objects' + s3)
 s4(s1 + 'Cloudkill' + s2 + 'Cloudkill' + s3)
 s4(s1 + 'ConeOfCold' + s2 + 'Cone of Cold' + s3)
 s4(s1 + 'Creation' + s2 + 'Creation' + s3)
 s4(s1 + 'DominatePerson' + s2 + 'Dominate Person' + s3)
 s4(s1 + 'HoldMonster' + s2 + 'Hold Monster' + s3)
 s4(s1 + 'InsectPlague' + s2 + 'Insect Plague' + s3)
 s4(s1 + 'Seeming' + s2 + 'Seeming' + s3)
 s4(s1 + 'Telekinesis' + s2 + 'Telekinesis' + s3)
 s4(s1 + 'Teleportation Circle' + s2 + 'Teleportation Circle' + s3)
 s4(s1 + 'WallOfStone' + s2 + 'Wall of Stone' + s3)
 s4('Slot(1/1)@11th(2/2)@19th ')
 s4(s1 + 'ArcaneGate' + s2 + 'Arcane Gate' + s3)
 s4(s1 + 'ChainLightning' + s2 + 'Chain Lightning' + s3)
 s4(s1 + 'CircleOfDeath' + s2 + 'Circle of Death' + s3)
 s4(s1 + 'Disintegrate' + s2 + 'Disintegrate' + s3)
 s4(s1 + 'Eyebite' + s2 + 'Eyebite' + s3)
 s4(s1 + 'GlobeOfInvul' + s2 + 'Globe of Invulnerability' + s3)
 s4(s1 + 'MassSuggestion' + s2 + 'Mass Suggestion' + s3)
 s4(s1 + 'MoveEarth' + s2 + 'Move Earth' + s3)
 s4(s1 + 'Sunbeam' + s2 + 'Sunbeam' + s3)
 s4(s1 + 'TrueSeeing' + s2 + 'True Seeing' + s3)
 s4('Slot(1/1)@13th(2/2)@20th ')
 s4(s1 + 'DelayedBlastFireball' + s2 + 'Delayed Blast Fireball' + s3)
 s4(s1 + 'Etherealness' + s2 + 'Etherealness' + s3)
 s4(s1 + 'FingerOfDeath' + s2 + 'Finger of Death' + s3)
 s4(s1 + 'FireStorm' + s2 + 'Fire Storm' + s3)
 s4(s1 + 'PlaneShift' + s2 + 'Plane Shift' + s3)
 s4(s1 + 'PrismaticSpray' + s2 + 'Prismatic Spray' + s3)
 s4(s1 + 'ReverseGravity' + s2 + 'Reverse Gravity' + s3)
 s4(s1 + 'Teleport' + s2 + 'Teleport' + s3)
 s4(s1 + 'Whirlwind' + s2 + 'Whirlwind' + s3)
 s4('Slot(1/1)@15th ')
 s4(s1 + 'DominateMonster' + s2 + 'Dominate Monster' + s3)
 s4(s1 + 'Earthquake' + s2 + 'Earthquake' + s3)
 s4(s1 + 'IncendiaryCloud' + s2 + 'Power Word Stun' + s3)
 s4(s1 + 'Sunburst' + s2 + 'Sunburst' + s3)
 s4('Slot(1/1)@17th')
 s4(s1 + 'Gate' + s2 + 'Gate' + s3)
 s4(s1 + 'MeteorSwarm' + s2 + 'Meteor Swarm' + s3)
 s4(s1 + 'PowerWordKill' + s2 + 'PowerWordKill' + s3)
 s4(s1 + 'Wish' + s2 + 'Wish' + s3)
 s4('</td></tr></table></td><td><table><tr><td><h3>Warlock Spells</h3>Cantrips@1st Level 2 Cantrips Known @4th(Level 3 Cantrips Known @10th Level 4 Cantrips Known ')
 s4(s1 + 'BladeWard' + s2 + 'Blade Ward' + s3)
 s4(s1 + 'ChillTouch' + s2 + 'Chill Touch' + s3)
 s4(s1 + 'EldritchBlast' + s2 + 'Eldritch Blast' + s3)
 s4(s1 + 'Friends' + s2 + 'Friends' + s3)
 s4(s1 + 'MageHand' + s2 + 'Mage Hand' + s3)
 s4(s1 + 'MinorIllusion' + s2 + 'Minor Illusion' + s3)
 s4(s1 + 'PoisonSpray' + s2 + 'Poison Spray' + s3)
 s4(s1 + 'Prestidigitation' + s2 + 'Prestidigitation' + s3)
 s4(s1 + 'Thunderclap' + s2 + 'Thunderclap' + s3)
 s4(s1 + 'TrueStrike' + s2 + 'True Strike' + s3)
 s4('Spells Known@1st(2) @2nd(3)@3rd(4)@4th(5)@5th(6)@6th(7)@7th(8)@8th(9)@9th(10)@(11th 11)@(13th 12)@(15th 13)@(17th 14)@(19th 15)1st Slot')
 s4(s1 + 'ArmorOfAgathys' + s2 + 'Armor of Agathys' + s3)
 s4(s1 + 'ArmsOfHadar' + s2 + 'ArmsOfHadar' + s3)
 s4(s1 + 'CharmPerson' + s2 + 'Charm Person' + s3)
 s4(s1 + 'ComprehendLanguages' + s2 + 'Comprehend Languages' + s3)
 s4(s1 + 'ExpeditiousRetreat' + s2 + 'Expeditious Retreat' + s3)
 s4(s1 + 'HellishRebuke' + s2 + 'Hellish Rebuke' + s3)
 s4(s1 + 'Hex' + s2 + 'Hex' + s3)
 s4(s1 + 'IllusoryScript' + s2 + 'Illusory Script' + s3)
 s4(s1 + 'ProtectionFromEvilOrGood' + s2 + 'Protection from Evil or Good' + s3)
 s4(s1 + 'UnseenServant' + s2 + 'Unseen Servant' + s3)
 s4(s1 + 'WitchBolt' + s2 + 'Witch Bolt' + s3)
 s4('2nd(Slot')
 s4(s1 + 'CloudOfDaggers' + s2 + 'Cloud of Daggers' + s3)
 s4(s1 + 'CrownOfMadness' + s2 + 'Crown of Madness' + s3)
 s4(s1 + 'Darkness' + s2 + 'Darkness' + s3)
 s4(s1 + 'Enthrall' + s2 + 'Enthrall' + s3)
 s4(s1 + 'HoldPerson' + s2 + 'Hold Person' + s3)
 s4(s1 + 'Invisibility' + s2 + 'Invisibility' + s3)
 s4(s1 + 'MirrorImage' + s2 + 'Mirror Image' + s3)
 s4(s1 + 'MistyStep' + s2 + 'Misty Step' + s3)
 s4(s1 + 'RayOfEnfeeblement' + s2 + 'Ray of Enfeeblement' + s3)
 s4(s1 + 'Shatter' + s2 + 'Shatter' + s3)
 s4(s1 + 'SpiderClimb' + s2 + 'Spider Climb' + s3)
 s4(s1 + 'Suggestion' + s2 + 'Suggestion' + s3)
 s4('3rd Slot')
 s4(s1 + 'Counterspell' + s2 + 'Counterspell' + s3)
 s4(s1 + 'DispelMagic' + s2 + 'Dispel Magic' + s3)
 s4(s1 + 'Fear' + s2 + 'Fear' + s3)
 s4(s1 + 'Fly' + s2 + 'Fly' + s3)
 s4(s1 + 'GaseousForm' + s2 + 'Gaseous Form' + s3)
 s4(s1 + 'HungerOfHadar' + s2 + 'Hunger of Hadar' + s3)
 s4(s1 + 'HypnoticPattern' + s2 + 'Hypnotic Pattern' + s3)
 s4(s1 + 'MagicCircle' + s2 + 'Magic Circle' + s3)
 s4(s1 + 'MajorImage' + s2 + 'Major Image' + s3)
 s4(s1 + 'RemoveCurse' + s2 + 'Remove Curse' + s3)
 s4(s1 + 'Tongues' + s2 + 'Tongues' + s3)
 s4(s1 + 'VampiricTouch' + s2 + 'Vampiric Touch' + s3)
 s4('4th Slot')
 s4(s1 + 'Banishment' + s2 + 'Banishment' + s3)
 s4(s1 + 'Blight' + s2 + 'Blight' + s3)
 s4(s1 + 'DimensionDoor' + s2 + 'Dimension Door' + s3)
 s4(s1 + 'HallucinatoryTerrain' + s2 + 'Hallucinatory Terrain' + s3)
 s4('5th Slot')
 s4(s1 + 'ContactOtherPlane' + s2 + 'Contact Other Plane' + s3)
 s4(s1 + 'Dream' + s2 + 'Dream' + s3)
 s4(s1 + 'HoldMonster' + s2 + 'Hold Monster' + s3)
 s4(s1 + 'Scrying' + s2 + 'Scrying' + s3)
 s4('6th Slot')
 s4(s1 + 'ArcaneGate' + s2 + 'Arcane Gate' + s3)
 s4(s1 + 'CircleOfDeath' + s2 + 'Circle of Death' + s3)
 s4(s1 + 'ConjureFey' + s2 + 'Conjure Fey' + s3)
 s4(s1 + 'CreateUndead' + s2 + 'Create Undead' + s3)
 s4(s1 + 'Eyebite' + s2 + 'Eyebite' + s3)
 s4(s1 + 'FleshToStone' + s2 + 'Flesh to Stone' + s3)
 s4(s1 + 'MassSuggestion' + s2 + 'Mass Suggestion' + s3)
 s4(s1 + 'TrueSeeing' + s2 + 'True Seeing' + s3)
 s4('7th Slot')
 s4(s1 + 'Etherealness' + s2 + 'Etherealness' + s3)
 s4(s1 + 'FingerOfDeath' + s2 + 'Finger of Death' + s3)
 s4(s1 + 'Forcecage' + s2 + 'Forcecage' + s3)
 s4(s1 + 'PlaneShift' + s2 + 'Plane Shift' + s3)
 s4('8th Slot')
 s4(s1 + 'Demiplane' + s2 + 'Demiplane' + s3)
 s4(s1 + 'DominateMonster' + s2 + 'Dominate Monster' + s3)
 s4(s1 + 'Feeblemind' + s2 + 'Feeblemind' + s3)
 s4(s1 + 'Glibness' + s2 + 'Glibness' + s3)
 s4(s1 + 'PowerWordStun' + s2 + 'Power Word Stun' + s3)
 s4('9th Slot')
 s4(s1 + 'AstralProjectio' + s2 + 'Astral Projection' + s3)
 s4(s1 + 'Foresight' + s2 + 'Foresight' + s3)
 s4(s1 + 'Imprisonment' + s2 + 'Imprisonment' + s3)
 s4(s1 + 'PowerWordKill' + s2 + 'Power Word Kill' + s3)
 s4(s1 + 'Polymorph' + s2 + 'Polymorph' + s3)
 s4('</td></tr></table></td><td><table><tr><td><h3>Wizard Spells</h3>CantripsAt 1st Class Level 3 Cantrips Known At 4th Class Level 4 Cantrips Known At 10th Class Level 5 Cantrips Known ')
 s4(s1 + 'AcidSplash' + s2 + 'Acid Splash' + s3)
 s4(s1 + 'BladeWard' + s2 + 'Blade Ward' + s3)
 s4(s1 + 'ChillTouch' + s2 + 'Chill Touch' + s3)
 s4(s1 + 'DancingLights' + s2 + 'Dancing Lights' + s3)
 s4(s1 + 'FireBolt' + s2 + 'Fire Bolt' + s3)
 s4(s1 + 'Friends' + s2 + 'Friends' + s3)
 s4(s1 + 'Light' + s2 + 'Light' + s3)
 s4(s1 + 'MageHand' + s2 + 'Mage Hand' + s3)
 s4(s1 + 'Mending' + s2 + 'Mending' + s3)
 s4(s1 + 'Message' + s2 + 'Message' + s3)
 s4(s1 + 'MinorIllusion' + s2 + 'Minor Illusion' + s3)
 s4(s1 + 'PoisonSpray' + s2 + 'Poison Spray' + s3)
 s4(s1 + 'Prestidigitation' + s2 + 'Prestidigitation' + s3)
 s4(s1 + 'RayOfFrost' + s2 + 'Ray of Frost' + s3)
 s4(s1 + 'Thunderclap' + s2 + 'Thunderclap' + s3)
 s4(s1 + 'TrueStrike' + s2 + 'True Strike' + s3)
 s4('1st Slot @1st(2) @2nd(3)@3rd(4)')
 s4(s1 + 'Alarm' + s2 + 'Alarm' + s3)
 s4(s1 + 'BurningHands' + s2 + 'Burning Hands' + s3)
 s4(s1 + 'CauseFear' + s2 + 'Cause Fear' + s3)
 s4(s1 + 'CharmPerson' + s2 + 'Charm Person' + s3)
 s4(s1 + 'ChromaticOrb' + s2 + 'Chromatic Orb' + s3)
 s4(s1 + 'ColorSpray' + s2 + 'Color Spray' + s3)
 s4(s1 + 'ComprehendLanguages' + s2 + 'Comprehend Languages' + s3)
 s4(s1 + 'DetectMagic' + s2 + 'DetectMagic' + s3)
 s4(s1 + 'DisguiseSelf' + s2 + 'Disguise Self' + s3)
 s4(s1 + 'EarthTremor' + s2 + 'Earth Tremor' + s3)
 s4(s1 + 'ExpeditiousRetreat' + s2 + 'Expeditious Retreat' + s3)
 s4(s1 + 'FalseLife' + s2 + 'FalseLife' + s3)
 s4(s1 + 'FeatherFall' + s2 + 'Feather Fall' + s3)
 s4(s1 + 'FindFamiliar' + s2 + 'Find Familiar' + s3)
 s4(s1 + 'FogCloud' + s2 + 'Fog Cloud' + s3)
 s4(s1 + 'Grease' + s2 + 'Grease' + s3)
 s4(s1 + 'Identify' + s2 + 'Identify' + s3)
 s4(s1 + 'IllusoryScript' + s2 + 'IllusoryScript' + s3)
 s4(s1 + 'Jump' + s2 + 'Jump' + s3)
 s4(s1 + 'Longstrider' + s2 + 'Longstrider' + s3)
 s4(s1 + 'MageArmor' + s2 + 'Mage Armor' + s3)
 s4(s1 + 'MagicMissile' + s2 + 'Magic Missile' + s3)
 s4(s1 + 'ProtectionFromGoodOrEvil' + s2 + 'ProtectionFromGoodOrEvil' + s3)
 s4(s1 + 'RayOfSickness' + s2 + 'Ray of Sickness' + s3)
 s4(s1 + 'Shield' + s2 + 'Shield' + s3)
 s4(s1 + 'SilentImage' + s2 + 'Silent Image' + s3)
 s4(s1 + 'Sleep' + s2 + 'Sleep' + s3)
 s4(s1 + 'TashasHideousLaughter' + s2 + 'TashasHideousLaughter' + s3)
 s4(s1 + 'TensorsFloatingDisk' + s2 + 'Tensor s Floating Disk' + s3)
 s4(s1 + 'Thunderwave' + s2 + 'Thunderwave' + s3)
 s4(s1 + 'UnseenServant' + s2 + 'Unseen Servant' + s3)
 s4('2nd(Slot @3rd(2)@4th(3)')
 s4(s1 + 'AlterSelf' + s2 + 'Alter Self' + s3)
 s4(s1 + 'ArcaneLock' + s2 + 'Arcane Lock' + s3)
 s4(s1 + 'BlindnessOrDeafness' + s2 + 'Blindness Deafness' + s3)
 s4(s1 + 'Blur' + s2 + 'Blur' + s3)
 s4(s1 + 'CloudOfDaggers' + s2 + 'Cloud of Daggers' + s3)
 s4(s1 + 'ContinualFlame' + s2 + 'Continual Flame' + s3)
 s4(s1 + 'CrownOfMadness' + s2 + 'Crown of Madness' + s3)
 s4(s1 + 'Darkness' + s2 + 'Darkness' + s3)
 s4(s1 + 'Darkvision' + s2 + 'Darkvision' + s3)
 s4(s1 + 'EnlargeOrReduce' + s2 + 'Enlarge or Reduce' + s3)
 s4(s1 + 'FlamingSphere' + s2 + 'Flaming Sphere' + s3)
 s4(s1 + 'GustOfWind' + s2 + 'Gust of Wind' + s3)
 s4(s1 + 'HoldPerson' + s2 + 'Hold Person' + s3)
 s4(s1 + 'Invisibility' + s2 + 'Invisibility' + s3)
 s4(s1 + 'Knock' + s2 + 'Knock' + s3)
 s4(s1 + 'LocateObject' + s2 + 'Locate Object' + s3)
 s4(s1 + 'MagicMouth' + s2 + 'Magic Mouth' + s3)
 s4(s1 + 'MagicWeapon' + s2 + 'Magic Weapon' + s3)
 s4(s1 + 'MelfsAcidArrow' + s2 + 'MelfsAcidArrow' + s3)
 s4(s1 + 'MirrorImage' + s2 + 'Mirror Image' + s3)
 s4(s1 + 'NystulsMagicAura' + s2 + 'Nystul s Magic Aura' + s3)
 s4(s1 + 'PhantasmalForce' + s2 + 'Phantasmal Force' + s3)
 s4(s1 + 'Pyrotechnics' + s2 + 'Pyrotechnics' + s3)
 s4(s1 + 'RayOfEnfeeblement' + s2 + 'Ray of Enfeeblement' + s3)
 s4(s1 + 'RopeTrick' + s2 + 'Rope Trick' + s3)
 s4(s1 + 'ScorchingRay' + s2 + 'ScorchingRay' + s3)
 s4(s1 + 'SeeInvisiblity' + s2 + 'See Invisibility' + s3)
 s4(s1 + 'Shatter' + s2 + 'Shatter' + s3)
 s4(s1 + 'SpiderClimb' + s2 + 'Spider Climb' + s3)
 s4(s1 + 'Suggestion' + s2 + 'Suggestion' + s3)
 s4(s1 + 'WardingWind' + s2 + 'Warding Wind' + s3)
 s4(s1 + 'Web' + s2 + 'Web' + s3)
 s4('3rd Slot@5th(2)@6th(3)')
 s4(s1 + 'AnimateDead' + s2 + 'Animate Dead' + s3)
 s4(s1 + 'BestowCurse' + s2 + 'Bestow Curse' + s3)
 s4(s1 + 'Blink' + s2 + 'Blink' + s3)
 s4(s1 + 'Clairvoyance' + s2 + 'Clairvoyance' + s3)
 s4(s1 + 'Counterspell' + s2 + 'Counterspell' + s3)
 s4(s1 + 'DispelMagic' + s2 + 'Dispel Magic' + s3)
 s4(s1 + 'Fear' + s2 + 'Fear' + s3)
 s4(s1 + 'FeignDeath' + s2 + 'Feign Death' + s3)
 s4(s1 + 'Fireball' + s2 + 'Fireball' + s3)
 s4(s1 + 'Fly' + s2 + 'Fly' + s3)
 s4(s1 + 'GaseousForm' + s2 + 'GaseousForm' + s3)
 s4(s1 + 'GlyphOfWarding' + s2 + 'Glyph of Warding' + s3)
 s4(s1 + 'Haste' + s2 + 'Haste' + s3)
 s4(s1 + 'HypnoticPattern' + s2 + 'Hypnotic Pattern' + s3)
 s4(s1 + 'Web' + s2 + 'Web' + s3)
 s4(s1 + 'LeomundsTinyHut' + s2 + 'Leomund s Tiny Hut' + s3)
 s4(s1 + 'LightningBolt' + s2 + 'Lightning Bolt' + s3)
 s4(s1 + 'MagicCircle' + s2 + 'Magic Circle' + s3)
 s4(s1 + 'MajorImage' + s2 + 'MajorImage' + s3)
 s4(s1 + 'Nodetection' + s2 + 'Nondetection' + s3)
 s4(s1 + 'PhantomSteed' + s2 + 'Phantom Steed' + s3)
 s4(s1 + 'ProtectionFromEnergy' + s2 + 'Protection from Energy' + s3)
 s4(s1 + 'RemoveCurse' + s2 + 'Remove Curse' + s3)
 s4(s1 + 'Sending' + s2 + 'Sending' + s3)
 s4(s1 + 'SleetStorm' + s2 + 'Sleet Storm' + s3)
 s4(s1 + 'Slow' + s2 + 'Slow' + s3)
 s4(s1 + 'StinkingCloud' + s2 + 'Stinking Cloud' + s3)
 s4(s1 + 'Tongues' + s2 + 'Tongues' + s3)
 s4(s1 + 'VampiricTouch' + s2 + 'Vampiric Touch' + s3)
 s4(s1 + 'WaterBreathing' + s2 + 'Water Breathing' + s3)
 s4('4th Slot @7th(1)@8th(2)@9th(3)')
 s4(s1 + 'ArcaneEye' + s2 + 'Arcane Eye' + s3)
 s4(s1 + 'Banishment' + s2 + 'Banishment' + s3)
 s4(s1 + 'Blight' + s2 + 'Blight' + s3)
 s4(s1 + 'Confusion' + s2 + 'Confusion' + s3)
 s4(s1 + 'ConjureMinorElementals' + s2 + 'Conjure Minor Elementals' + s3)
 s4(s1 + 'ControlWater' + s2 + 'Control Water' + s3)
 s4(s1 + 'DimensionDoor' + s2 + 'Dimension Door' + s3)
 s4(s1 + 'ElementalBane' + s2 + 'Elemental Bane' + s3)
 s4(s1 + 'EvardsBlackTentacles' + s2 + 'Evard s Black Tentacles' + s3)
 s4(s1 + 'Fabricate' + s2 + 'Fabricate' + s3)
 s4(s1 + 'FireShield' + s2 + 'Fire Shield' + s3)
 s4(s1 + 'GreaterInvisibility' + s2 + 'Greater Invisibility' + s3)
 s4(s1 + 'HallucinatoryTerrain' + s2 + 'Hallucinatory Terrain' + s3)
 s4(s1 + 'LeomundsSecretChest' + s2 + 'Leomund s Secret Chest' + s3)
 s4(s1 + 'LocateCreature' + s2 + 'Locate Creature' + s3)
 s4(s1 + 'MorFaithfulHound' + s2 + 'Mor. Faithful Hound' + s3)
 s4(s1 + 'MorPrivateSanctum' + s2 + 'Mor. Private Sanctum' + s3)
 s4(s1 + 'OtilukesResilientSphere' + s2 + 'Otiluke s Resilient Sphere' + s3)
 s4(s1 + 'PhantasmalKiller' + s2 + 'Phantasmal Killer' + s3)
 s4(s1 + 'Polymorph' + s2 + 'Polymorph' + s3)
 s4(s1 + 'StoneShape' + s2 + 'Stone Shape' + s3)
 s4(s1 + 'Stoneskin' + s2 + 'Stoneskin' + s3)
 s4(s1 + 'StormSphere' + s2 + 'Storm Sphere' + s3)
 s4(s1 + 'VitriolicSphere' + s2 + 'Vitriolic Sphere' + s3)
 s4(s1 + 'WallOfFire' + s2 + 'Wall of Fire' + s3)
 s4(s1 + 'WaterySphere' + s2 + 'Watery Sphere' + s3)
 s4('5th Slot @9th(1)@(10th 2)@(18th 3)')
 s4(s1 + 'AnimateObjects' + s2 + 'AnimateObjects' + s3)
 s4(s1 + 'BigbysHand' + s2 + 'BigbysHand' + s3)
 s4(s1 + 'Cloudkill' + s2 + 'Cloudkill' + s3)
 s4(s1 + 'ConeOfCold' + s2 + 'Cone of Cold' + s3)
 s4(s1 + 'ConjureElemental' + s2 + 'Conjure Elemental' + s3)
 s4(s1 + 'ContactOtherPlane' + s2 + 'Contact Other Plane' + s3)
 s4(s1 + 'ControlWinds' + s2 + 'Control Winds' + s3)
 s4(s1 + 'Creation' + s2 + 'Creation' + s3)
 s4(s1 + 'DominatePerson' + s2 + 'Dominate Person' + s3)
 s4(s1 + 'Dream' + s2 + 'Dream' + s3)
 s4(s1 + 'Geas' + s2 + 'Geas' + s3)
 s4(s1 + 'HoldMonster' + s2 + 'HoldMonster' + s3)
 s4(s1 + 'Immolation' + s2 + 'Immolation' + s3)
 s4(s1 + 'LegendLore' + s2 + 'Legend Lore' + s3)
 s4(s1 + 'Mislead' + s2 + 'Mislead' + s3)
 s4(s1 + 'ModifyMemory' + s2 + 'Modify Memory' + s3)
 s4(s1 + 'Passwall' + s2 + 'Passwall' + s3)
 s4(s1 + 'PlanarBinding' + s2 + 'Planar Binding' + s3)
 s4(s1 + 'RarysTelepathicBond' + s2 + 'Rary s Telepathic Bond' + s3)
 s4(s1 + 'Scrying' + s2 + 'Scrying' + s3)
 s4(s1 + 'Seeming' + s2 + 'Seeming' + s3)
 s4(s1 + 'Telekinesis' + s2 + 'Telekinesis' + s3)
 s4(s1 + 'TeleportationCircle' + s2 + 'Teleportation Circle' + s3)
 s4(s1 + 'TransmuteRock' + s2 + 'TransmuteRock' + s3)
 s4(s1 + 'WallOfForce' + s2 + 'Wall of Force' + s3)
 s4(s1 + 'WallOfStone' + s2 + 'Wall of Stone' + s3)
 s4('6th Slot@(11th 1)@(19th 2)')
 s4(s1 + 'ArcaneGate' + s2 + 'ArcaneGate' + s3)
 s4(s1 + 'ChainLightning' + s2 + 'Chain Lightning' + s3)
 s4(s1 + 'CircleOfDeath' + s2 + 'Circle of Death' + s3)
 s4(s1 + 'Contingency' + s2 + 'Contingency' + s3)
 s4(s1 + 'CreateUndead' + s2 + 'Create Undead' + s3)
 s4(s1 + 'Disintegrate' + s2 + 'Disintegrate' + s3)
 s4(s1 + 'DrawmijsInstantSummons' + s2 + 'Dramij s Instant Summons' + s3)
 s4(s1 + 'Eyebite' + s2 + 'Eyebite' + s3)
 s4(s1 + 'FleshToStone' + s2 + 'Flesh to Stone' + s3)
 s4(s1 + 'GlobeOfInvulnerability' + s2 + 'Globe of Invulnerability' + s3)
 s4(s1 + 'GuardsAndWards' + s2 + 'Guards and Wards' + s3)
 s4(s1 + 'InvestitureOfFlame' + s2 + 'Investiture of Flame' + s3)
 s4(s1 + 'InvestitureOfIce' + s2 + 'Investiture of Ice' + s3)
 s4(s1 + 'InvestitureOfStone' + s2 + 'Investiture of Stone' + s3)
 s4(s1 + 'InvestitureOfWind' + s2 + 'Investiture of Wind' + s3)
 s4(s1 + 'MagicJar' + s2 + 'Magic Jar' + s3)
 s4(s1 + 'MassSuggestion' + s2 + 'Mass Suggestion' + s3)
 s4(s1 + 'MoveEarth' + s2 + 'Move Earth' + s3)
 s4(s1 + 'OtilukesFreezingSphere' + s2 + 'Otiluke s Freezing Sphere' + s3)
 s4(s1 + 'OttosIrreDance' + s2 + 'Otto s Irre. Dance' + s3)
 s4(s1 + 'ProgrammedIllusion' + s2 + 'Programmed Illusion' + s3)
 s4(s1 + 'Sunbeam' + s2 + 'Sunbeam' + s3)
 s4(s1 + 'TrueSeeing' + s2 + 'TrueSeeing' + s3)
 s4(s1 + 'WallOfIce' + s2 + 'Wall of Ice' + s3)
 s4('7th Slot@(13th 1)@(20th 2)')
 s4(s1 + 'DelayedBlastFireball' + s2 + 'Delayed Blast Fireball' + s3)
 s4(s1 + 'Etherealness' + s2 + 'Etherealness' + s3)
 s4(s1 + 'FingerOfDeath' + s2 + 'Finger of Death' + s3)
 s4(s1 + 'Forcecage' + s2 + 'Forcecage' + s3)
 s4(s1 + 'MirageArcane' + s2 + 'Mirage Arcane' + s3)
 s4(s1 + 'MorMagMansion' + s2 + 'Mor. Mag. Mansion' + s3)
 s4(s1 + 'MorSword' + s2 + 'Mor. Sword' + s3)
 s4(s1 + 'PlaneShift' + s2 + 'Plane Shift' + s3)
 s4(s1 + 'PrismaticSpray' + s2 + 'Prismatic Spray' + s3)
 s4(s1 + 'ProjectImage' + s2 + 'Project Image' + s3)
 s4(s1 + 'ReverseGravity' + s2 + 'Reverse Gravity' + s3)
 s4('8th Slot')
 s4(s1 + 'Demiplane' + s2 + 'Demiplane' + s3)
 s4(s1 + 'DominateMonster' + s2 + 'Dominate Monster' + s3)
 s4(s1 + 'Feeblemind' + s2 + 'Feeblemind' + s3)
 s4(s1 + 'Glibness' + s2 + 'Glibness' + s3)
 s4(s1 + 'PowerWordStun' + s2 + 'Power Word Stun' + s3)
 s4('9th Slot')
 s4(s1 + 'AstralProjection' + s2 + 'Astral Projection' + s3)
 s4(s1 + 'Foresight' + s2 + 'Foresight' + s3)
 s4(s1 + 'Imprisonment' + s2 + 'Imprisonment' + s3)
 s4(s1 + 'PowerWordKill' + s2 + 'Power Word Kill' + s3)
 s4(s1 + 'Polymorph' + s2 + 'Polymorph' + s3)
 s4(s1 + 'Sequester' + s2 + 'Sequester' + s3)
 s4(s1 + 'Simulacrum' + s2 + 'Simulacrum' + s3)
 s4(s1 + 'Symbol' + s2 + 'Symbol' + s3)
 s4(s1 + 'Teleport' + s2 + 'Teleport' + s3)
 s4(s1 + 'Whirlwind' + s2 + 'Whirlwind' + s3)
 s4('8th Slot @(15th 1)')
 s4(s1 + 'AbiDsHorridWilting' + s2 + 'Abi-D s Horrid Wilting' + s3)
 s4(s1 + 'AntimagicField' + s2 + 'Antimagic Field' + s3)
 s4(s1 + 'AntipathySympathy' + s2 + 'Antipathy Sympathy' + s3)
 s4(s1 + 'CloneIt' + s2 + 'Clone' + s3)
 s4(s1 + 'ControlWeather' + s2 + 'ControlWeather' + s3)
 s4(s1 + 'Demiplane' + s2 + 'Demiplane' + s3)
 s4(s1 + 'DominateMonster' + s2 + 'Dominate Monster' + s3)
 s4(s1 + 'Feeblemind' + s2 + 'Feeblemind' + s3)
 s4(s1 + 'IncendiaryCloud' + s2 + 'IncendiaryCloud' + s3)
 s4(s1 + 'Maze' + s2 + 'Maze' + s3)
 s4(s1 + 'MindBlank' + s2 + 'Mind Blank' + s3)
 s4(s1 + 'PowerWordStun' + s2 + 'PowerWordStun' + s3)
 s4(s1 + 'Sunburst' + s2 + 'Sunburst' + s3)
 s4(s1 + 'Telepathy' + s2 + 'Telepathy' + s3)
 s4('9th Slot @(17th 1)')
 s4(s1 + 'AstralProjectio' + s2 + 'Astral Projection' + s3)
 s4(s1 + 'Foresight' + s2 + 'Foresight' + s3)
 s4(s1 + 'Gate' + s2 + 'Gate' + s3)
 s4(s1 + 'Imprisonment' + s2 + 'Imprisonment' + s3)
 s4(s1 + 'MeteorSwarm' + s2 + 'Meteor Swarm' + s3)
 s4(s1 + 'PowerWordKill' + s2 + 'PowerWordKill' + s3)
 s4(s1 + 'PrismaticWall' + s2 + 'Prismatic Wall' + s3)
 s4(s1 + 'Shapechange' + s2 + 'Shapechange' + s3)
 s4(s1 + 'TimeStop' + s2 + 'Time Stop' + s3)
 s4(s1 + 'TruePolymorph' + s2 + 'TruePolymorph' + s3)
 s4(s1 + 'Weird' + s2 + 'Weird' + s3)
 s4(s1 + 'Wish' + s2 + 'Wish' + s3)
 s4('</td></tr></table>')
 s4("</td></tr></table>")
</script>
</body>
<script>
function toggleTab1(x)
{if(characters[x].toggled1.match(/none/))
{characters[x].setToggled1("block");
 document.getElementById('toggled1' + x).style.display=characters[x].toggled1;
}
else
{characters[x].setToggled1("none");
 document.getElementById('toggled1' + x).style.display=characters[x].toggled1;
}
}

function toggleTab2(x)
{if(characters[x].toggled2.match(/none/))
{characters[x].setToggled2("block");
 document.getElementById('toggled2' + x).style.display=characters[x].toggled2;
}
else
{characters[x].setToggled2("none");
 document.getElementById('toggled2' + x).style.display=characters[x].toggled2;
}
}

function toggleTab3(x)
{if(characters[x].toggled3.match(/none/))
{characters[x].setToggled3("block");
 document.getElementById('toggled3' + x).style.display=characters[x].toggled3;
}
else
{characters[x].setToggled3("none");
 document.getElementById('toggled3' + x).style.display=characters[x].toggled3;
}
}

function toggleTab4(x)
{if(characters[x].toggled4.match(/none/))
{characters[x].setToggled4("block");
 document.getElementById('toggled4' + x).style.display=characters[x].toggled4;
}
else
{characters[x].setToggled4("none");
 document.getElementById('toggled4' + x).style.display=characters[x].toggled4;
}
}

function toggleTab5(x)
{if(characters[x].toggled5.match(/none/))
{characters[x].setToggled5("block");
 document.getElementById('toggled5' + x).style.display=characters[x].toggled5;
}
else
{characters[x].setToggled5("none");
 document.getElementById('toggled5' + x).style.display=characters[x].toggled5;
}
}

function toggleTab6(x)
{if(characters[x].toggled6.match(/none/))
{characters[x].setToggled6("block");
 document.getElementById('toggled6' + x).style.display=characters[x].toggled6;
}
else
{characters[x].setToggled6("none");
 document.getElementById('toggled6' + x).style.display=characters[x].toggled6;
}
}
$(".draggable").draggable(
{snap: ".map",
grid: [50, 50],
snapMode: 'inner',
snapTolerance: 50,
scroll: 'true',
refreshPositions: true,
stack: 'div',
stackOption: 'both',
});
characterBoxWidth=100;
characterBoxHeight="*";
characters=new Array();
currentElementId=0;
PC="PC";
menuWidth=400;
pcBox=new AGEBox();
pcMenu=new AGEBox();
savePaneBox=new AGEBox();
savePane=new AGEElement();
savePane.setStyle("zIndex", "100");
savePane.putAt(100, 100);

function setStats()
{

if(rip=stats.match(/^([\s\S]*)(Tiny|Small|Medium|Large|Huge|Gargantuan)/))
{characters[targeted].setName(rip[1])}

if(size=stats.match(/(Tiny|Small|Medium|Large|Huge|Gargantuan)/))
{characters[targeted].setSize(size[1])
}
if(race=stats.match(/(aberration|beast|construct|elemental|fiend|giant|humanoid|human|monstrosity|undead)/i))
{characters[targeted].setRace(race[1])
}
if(alignment=stats.match(/(neutral)/))
{characters[targeted].setAlignment(alignment[1])
}
if(alignment=stats.match(/(lawful good|lawful neutral|lawful evil|chaotic good|chaotic neutral|chaotic evil|neutral evil|unaligned)/i))
{characters[targeted].setAlignment(alignment[1])
}
if(ac=stats.match(/Armor\sClass\s(\d{1,2})([\s\S]*?)(Hit Points )/))
{characters[targeted].setAC(ac[1])
}
if(armortype=stats.match(/mage\sarmor/))
{characters[targeted].setArmor('Mage Armor AC13+dex')
};
if(armortype=stats.match(/natural armor/))
{characters[targeted].setArmor('Natural Armor')
};
if(armortype=stats.match(/leather/))
{characters[targeted].setArmor('Leather AC11+dex')
};
if(armortype=stats.match(/padded/))
{characters[targeted].setArmor('Padded AC11+dex Stealth at disadv')
};
if(armortype=stats.match(/studded/))
{characters[targeted].setArmor('Studded AC12+dex')
};
if(armortype=stats.match(/hide/))
{characters[targeted].setArmor('Hide AC12+dex max 2')
};
if(armortype=stats.match(/chain\sshirt/))
{characters[targeted].setArmor('Chain Shirt AC13+dex max 2')
};
if(armortype=stats.match(/scale/))
{characters[targeted].setArmor('Scale AC14+dex max 2 Stealth at disadv')
};
if(armortype=stats.match(/breastplate/))
{characters[targeted].setArmor('Breastplate AC14+dex max 2')
};
if(armortype=stats.match(/plate/))
{characters[targeted].setArmor('Plate AC18 Stealth at disadv str15')
};
if(armortype=stats.match(/half\splate/))
{characters[targeted].setArmor('Half Plate AC15+dex max 2 Stealth at disadv')
};
if(armortype=stats.match(/ring\smail/))
{characters[targeted].setArmor('Ring AC14 Stealth at disadv')
};
if(armortype=stats.match(/chain\smail/))
{characters[targeted].setArmor('Chain Mail AC16 Stealth at disadv')
};
if(armortype=stats.match(/splint/))
{characters[targeted].setArmor('Splint AC17 Stealth at disadv')
};
if(armortype=stats.match(/Unarmored\sDefense/))
{characters[targeted].setArmor('Unarmored Defense AC10+dex+wis')
};
if(shieldtype=stats.match(/Armor\sClass[\s\S]*shield[\s\S]*STR/i))
{
characters[targeted].setShield('Shield AC+2')
}
else
{
characters[targeted].setShield('No Shield AC+0');
}
if(hp=stats.match(/(Hit Points )(\d{1,3})([\s\S]*?)(Speed )/))
{
characters[targeted].setMaxHp(hp[2]);
characters[targeted].setClass('Creature');
characters[targeted].setHitDice(hp[3]);
};
if(rip=stats.match(/Speed\s([\s\S]*?)STR/i))
{characters[targeted].setSpeed(rip[1])}
if(str=stats.match(/(\d{1,2})\s\(\+|(\d{1,2})\s\(\-|(\d{1,2})\s\(\–/g))
{characters[targeted].setStr(parseInt(str[0]));
 characters[targeted].setDex(parseInt(str[1]));
 characters[targeted].setCon(parseInt(str[2]));
 characters[targeted].setInt(parseInt(str[3]));
 characters[targeted].setWis(parseInt(str[4]));
 characters[targeted].setCha(parseInt(str[5]));
}
if(resist=stats.match(/(Resistances|Resistance)([\s\S]*?)(Senses|Condition\s|Damage\sImmunities)/))
{characters[targeted].setResistance(resist[2])
}
characters[targeted].setImmunity('');
if(immune=stats.match(/(Damage\sImmunities)([\s\S]*?)(Damage\sResistance|Damage\sCondition|Condition\sImmuniti|Senses)/))
{characters[targeted].setImmunity(immune[2])
}
if(damageimmune=stats.match(/Condition\sImmunities\s([\s\S]*?)Senses/))
{characters[targeted].setDamageConditions('immune to '+damageimmune[1])
}
if(vulnerable=stats.match(/Vulnerabilities\s([\s\S]*?)(?:Senses|Condition\s|Damage\s)/))
{characters[targeted].setVulnerability(vulnerable[1])
}
if(saves=stats.match(/(Throws )([\s\S]*?)(Skills)/))
{characters[targeted].setSaving(saves[2])
}
if(senses=stats.match(/Senses\s([\s\S]*?Perception\s\d{1,2})/))
{characters[targeted].setSenses(senses[1])
}
if(languages=stats.match(/(Languages )([\s\S]*?)(Challenge )/))
{characters[targeted].setBackL(languages[2])
}
if(level=stats.match(/Challenge\s(\d\/\d)/))
{characters[targeted].setLevel(level[1])
}
if(level=stats.match(/Challenge\s(\d{1,2})(?!\/)/))
{characters[targeted].setLevel(level[1])
}
if(xp=stats.match(/Challenge[\s\S]*\(([\s\S]*)\sXP/))
{characters[targeted].setExperience(xp[1])
}
if(casting=stats.match(/spellcasting[\s\S]*?(cha|int|wis)/i))
{characters[targeted].setSpellAbility(casting[1])
}
if(features=stats.match(/\sXP\)([\s\S]*?)ACTIONS/i))
{characters[targeted].setFeatures(features[1])
}
characters[targeted].setStrPro('');
if(savingThrows=stats.match(/Str\s\+(\d{1,2})/))
{if(parseInt(savingThrows[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].strMod)))
 {characters[targeted].setStrPro('exp')
}
 else
 {characters[targeted].setStrPro('pro')
}
};
characters[targeted].setDexPro('');
if(savingThrows=stats.match(/Dex\s\+(\d{1,2})/))
{if(parseInt(savingThrows[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].dexMod)))
 {characters[targeted].setDexPro('exp')
}
 else
 {characters[targeted].setDexPro('pro')
}
};
characters[targeted].setConPro('');
if(savingThrows=stats.match(/Con\s\+(\d{1,2})/))
{if(parseInt(savingThrows[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].conMod)))
 {characters[targeted].setConPro('exp')
}
 else
 {characters[targeted].setConPro('pro')
}
};
characters[targeted].setIntPro('');
if(savingThrows=stats.match(/Int\s\+(\d{1,2})/))
{if(parseInt(savingThrows[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].intMod)))
 {characters[targeted].setIntPro('exp')
}
 else
 {characters[targeted].setIntPro('pro')
}
};
characters[targeted].setWisPro('');
if(savingThrows=stats.match(/Wis\s\+(\d{1,2})/))
{if(parseInt(savingThrows[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].wisMod)))
 {characters[targeted].setWisPro('exp')
}
 else
 {characters[targeted].setWisPro('pro')
}
};
characters[targeted].setChaPro('');
if(savingThrows=stats.match(/Cha\s\+(\d{1,2})/))
{if(parseInt(savingThrows[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].chaMod)))
 {characters[targeted].setChaPro('exp')
}
 else
 {characters[targeted].setChaPro('pro')
}
};
if(nameit=stats.match(/^Skills\s([\s\S]*?)\n/))
{characters[targeted].setName(nameit[1])
}
if(skills=stats.match(/Skills\s([\s\S]*?)(Senses|Condition\sI|Damage\sI|Damage\sR|Damage\sV)/))
{characters[targeted].setBackS(skills[1])
};
characters[targeted].setAthletics('');
if(skills=stats.match(/Athletics\s\+(\d{1,2})/))
{
if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].dexMod)))
 {characters[targeted].setAthletics('exp')
}
 else
 {characters[targeted].setAthletics('pro')
}
};
characters[targeted].setAcrobatics('');
if(skills=stats.match(/Acrobatics\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].dexMod)))
 {characters[targeted].setAcrobatics('exp')
}
 else
 {characters[targeted].setAcrobatics('pro')
}
};
characters[targeted].setSleight('');
if(skills=stats.match(/Sleight\sof\sHand\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].dexMod)))
 {characters[targeted].setSleight('exp')
}
 else
 {characters[targeted].setSleight('pro')
}
};
characters[targeted].setStealth('');
if(skills=stats.match(/Stealth\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].dexMod)))
 {characters[targeted].setStealth('exp')
}
 else
 {characters[targeted].setStealth('pro')
}
};
characters[targeted].setArcana('');
if(skills=stats.match(/Arcana\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].intMod)))
 {characters[targeted].setArcana('exp')
}
 else
 {characters[targeted].setArcana('pro')
}
};
characters[targeted].setHistory('');
if(skills=stats.match(/History\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].intMod)))
 {characters[targeted].setHistory('exp')
}
 else
 {characters[targeted].setHistory('pro')
}
};
characters[targeted].setInvestigation('');
if(skills=stats.match(/Investigation\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].intMod)))
 {characters[targeted].setInvestigation('exp')
}
 else
 {characters[targeted].setInvestigation('pro')
}
};
characters[targeted].setNature('');
if(skills=stats.match(/Nature\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].intMod)))
 {characters[targeted].setNature('exp')
}
 else
 {characters[targeted].setNature('pro')
}
};
characters[targeted].setReligion('');
if(skills=stats.match(/Religion\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].intMod)))
 {characters[targeted].setReligion('exp')
}
 else
 {characters[targeted].setReligion('pro')
}
};
characters[targeted].setAnimal('');
if(skills=stats.match(/Animal\sHandling\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].wisMod)))
 {characters[targeted].setAnimal('exp')
}
 else
 {characters[targeted].setAnimal('pro')
}
};
characters[targeted].setInsight('')
if(skills=stats.match(/Insight\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].wisMod)))
 {characters[targeted].setInsight('exp')
}
 else
 {characters[targeted].setInsight('pro')
}
};
characters[targeted].setMedicine('')
if(skills=stats.match(/Medicine\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].wisMod)))
 {characters[targeted].setMedicine('exp')
}
 else
 {characters[targeted].setMedicine('pro')
}
};
characters[targeted].setPerception('');
if(skills=stats.match(/Perception\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].wisMod)))
 {characters[targeted].setPerception('exp')
}
 else
 {characters[targeted].setPerception('pro')
}
};
characters[targeted].setSurvival('');
if(skills=stats.match(/Survival\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].wisMod)))
 {characters[targeted].setSurvival('exp')
}
 else
 {characters[targeted].setSurvival('pro')
}
};
characters[targeted].setDeception('');
if(skills=stats.match(/Deception\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].chaMod)))
 {characters[targeted].setDeception('exp')
}
 else
 {characters[targeted].setDeception('pro')
}
};
characters[targeted].setIntimidation('');
if(skills=stats.match(/Intimidation\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].chaMod)))
 {characters[targeted].setIntimidation('exp')
}
 else
 {characters[targeted].setIntimidation('pro')
}
};
characters[targeted].setPerformance('');
if(skills=stats.match(/Performance\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].chaMod)))
 {characters[targeted].setPerformance('exp')
}
 else
 {characters[targeted].setPerformance('pro')
}
};
characters[targeted].setPersuasion('');
if(skills=stats.match(/Persuasion\s\+(\d{1,2})/))
{if(parseInt(skills[1]) >(parseInt(characters[targeted].pro) + parseInt(characters[targeted].chaMod)))
 {characters[targeted].setPersuasion('exp')
}
else
{
characters[targeted].setPersuasion('pro')
}
}

//Bard Class Features
if(rip=stats.match(/song\sof\srest/i)){this.SongOfRest();}
if(rip=stats.match(/taunt/i)){this.Taunt();}

//Monk Class Features
if(weapon=stats.match(/deflect\smissile/i)){this.DeflectMissile();}
if(weapon=stats.match(/unarmed\sstrike/i)){this.UnarmedStrike();this.Disarmed();this.KnockedProne();this.Stunned()}

//Weapons
if(weapon=stats.match(/dagger/i)){this.Dagger()}
if(weapon=stats.match(/dart/i)){this.Dart()}
if(weapon=stats.match(/glaive/i)){this.Glaive()}
if(weapon=stats.match(/longbow/i)){this.Longbow()}
if(weapon=stats.match(/morningstar/i)){this.Morningstar()}
if(weapon=stats.match(/quarterstaff/i)){this.OneHandedQuarterstaff();this.TwoHandedQuarterstaff()}
if(weapon=stats.match(/shortsword/i)){this.Shortsword()}
if(weapon=stats.match(/shortbow/i)){this.Shortbow()}

//Cantrips
if(spell=stats.match(/chill\stouch/i)){this.ChillTouch()}
if(spell=stats.match(/dancing\slights/i)){this.DancingLights()}
if(spell=stats.match(/druid\scraft|druidcraft/i)){this.DruidCraft()}
if(spell=stats.match(/eldritch\sblast/i)){this.EldritchBlast()}
if(spell=stats.match(/friends/i)){this.Friends()}
if(spell=stats.match(/guidance/i)){this.Guidance()}
if(spell=stats.match(/light\s|light\,/i)){this.Light()}
if(spell=stats.match(/mage\shand/i)){this.MageHand()}
if(spell=stats.match(/mending/i)){this.Mending()}
if(spell=stats.match(/message/i)){this.Message()}
if(spell=stats.match(/minor\sillusion/i)){this.MinorIllusion()}
if(spell=stats.match(/poison\sspray/i)){this.PoisonSpray()}
if(spell=stats.match(/prestidigitation/i)){this.Prestidigitation()}
if(spell=stats.match(/produce\sflame/i)){this.ProduceFlame()}
if(spell=stats.match(/shillelagh/i)){this.Shillelagh()}
if(spell=stats.match(/shocking\sgrasp/i)){this.ShockingGrasp()}
if(spell=stats.match(/thaumaturgy/i)){this.Thaumaturgy()}
if(spell=stats.match(/vicious\smockery/i)){this.ViciousMockery()}
//1st Level Spells
if(spell=stats.match(/animal\sfriendship/i)){this.AnimalFriendship()}
if(spell=stats.match(/charm\sperson/i)){this.CharmPerson()}
if(spell=stats.match(/create\sor\sdestroy\swater/i)){this.CreateDestroyWater()}
if(spell=stats.match(/color\sspray/i)){this.ColorSpray()}
if(spell=stats.match(/command/i)){this.Command()}
if(spell=stats.match(/cure\swounds/i)){this.CureWounds()}
if(spell=stats.match(/detect\smagic/i)){this.DetectMagic()}
if(spell=stats.match(/disguise\sself/i)){this.DisguiseSelf()}
if(spell=stats.match(/entangle/i)){this.Entangle()}
if(spell=stats.match(/faerie\sfire/i)){this.FaerieFire()}
if(spell=stats.match(/healing\sword/i)){this.HealingWord()}
if(spell=stats.match(/heroism/i)){this.Heroism()}
if(spell=stats.match(/mage\sarmor/i)){this.MageArmor()}
if(spell=stats.match(/magic\smissile/i)){this.MagicMissile()}
if(spell=stats.match(/protection\sfrom\sevil\sand\sgood/i)){this.ProtectionFromEvilOrGood()}
if(spell=stats.match(/shield\s|shield\,/i)){this.Shield()}
if(spell=stats.match(/sleep/i)){this.Sleep()}
if(spell=stats.match(/speak\swith\sanimals/i)){this.SpeakWithAnimals()}
if(spell=stats.match(/thunderous\ssmite/i)){this.ThunderousSmite()}
if(spell=stats.match(/thunderwave/i)){this.Thunderwave()}
//2nd Level Spells
if(spell=stats.match(/animal\smessenger/i)){this.AnimalMessenger()}
if(spell=stats.match(/augury/i)){this.Augury()}
if(spell=stats.match(/beast\ssense/i)){this.BeastSense()}
if(spell=stats.match(/branding\ssmite/i)){this.BrandingSmite()}
if(spell=stats.match(/darkness/i)){this.Darkness()}
if(spell=stats.match(/find\ssteed/i)){this.FindSteed()}
if(spell=stats.match(/flame\sblade/i)){this.FlameBlade()}
if(spell=stats.match(/hold\sperson/i)){this.HoldPerson()}
if(spell=stats.match(/invisibility/i)){this.Invisibility()}
if(spell=stats.match(/lesser\srestoration/i)){this.LesserRestoration()}
if(spell=stats.match(/mirror\simage/i)){this.MirrorImage()}
if(spell=stats.match(/moonbeam/i)){this.Moonbeam()}
if(spell=stats.match(/phantasmal\sforce/i)){this.PhantasmalForce()}
if(spell=stats.match(/shatter/i)){this.Shatter()}
if(spell=stats.match(/silence/i)){this.Silence()}
if(spell=stats.match(/suggestion/i)){this.Suggestion()}
//3rd Level Spells
if(spell=stats.match(/blinding\ssmite/i)){this.BlindingSmite()}
if(spell=stats.match(/call\slightning/i)){this.CallLightning()}
if(spell=stats.match(/conjure\sanimals/i)){this.ConjureAnimals()}
if(spell=stats.match(/dispel\smagic/i)){this.DispelMagic()}
if(spell=stats.match(/fireball/i)){this.Fireball()}
if(spell=stats.match(/haste/i)){this.Haste()}
if(spell=stats.match(/major\simage/i)){this.MajorImage()}
if(spell=stats.match(/meld\sinto\sstone/i)){this.MeldIntoStone()}
if(spell=stats.match(/phantom\ssteed/i)){this.PhantomSteed()}
if(spell=stats.match(/water\sbreathing/i)){this.WaterBreathing()}
if(spell=stats.match(/water\swalk/i)){this.WaterWalk()}
//4th Level Spells
if(spell=stats.match(/control\swater/i)){this.ControlWater()}
if(spell=stats.match(/dominate\sbeast/i)){this.DominateBeast()}
if(spell=stats.match(/evard/i)){this.EvardsBlackTentacles()}
if(spell=stats.match(/ice\sstorm/i)){this.IceStorm()}
if(spell=stats.match(/locate\screature/i)){this.LocateCreature()}
if(spell=stats.match(/phantasmal\skiller/i)){this.PhantasmalKiller()}
if(spell=stats.match(/stoneskin/i)){this.Stoneskin()}
if(spell=stats.match(/tongues/i)){this.Tongues()}
if(spell=stats.match(/wall\sof\sfire/i)){this.WallOfFire()}
//5th Level Spells
if(spell=stats.match(/commune\swith\snature/i)){this.CommuneWithNature()}
if(spell=stats.match(/hold\smonster/i)){this.HoldMonster()}
if(spell=stats.match(/mass\scure\swounds/i)){this.MassCureWounds()}
if(spell=stats.match(/tree\sstride/i)){this.TreeStride()}
//6th Level Spells

}
function _addRoll(name, roll, name2, roll2)
{x=this.rolls.length;
this.rolls[x]=roll;
this.rollNames[x]=name;
x=this.rolls2.length;
this.rolls2[x]=roll2;
this.rollNames2[x]=name2;
this.refresh();
}

function _deleteRoll(i)
{this.rolls.splice(i, 1);
this.rollNames.splice(i, 1);
this.rolls2.splice(i, 1);
this.rollNames2.splice(i, 1);
this.refresh();
checkTheTarget();
}

function _getSaveText()
{this.updateXY();
varName="";
varName="pc";
varName+=Math.ceil(Math.random() * 10000);
toSave="\/\/" + this.name + "<br>";
toSave+=varName + "=new Character('" + this.name + "','" + this.type + "')<br>";
for(var i=0; i< this.rolls.length; i++)
{toSave+="<tr draggable='true' ondragstart='start()' ondragover='dragover()'><td>"+varName + ".addRoll('" + this.rollNames[i] + "','" + this.rolls[i] + "','" + this.rollNames2[i] + "','" + this.rolls2[i] + "')</td></tr>";
}
toSave+="<tr><td>"+varName + ".putAt(\'" + this.x + "\',\'" + this.y + "\' )<br>";
toSave+=varName + ".setClass('" + this.class + "')<br>";
toSave+=varName + ".setLevel('" + this.level + "')<br>";
toSave+=varName + ".setRace('" + this.race + "')<br>";
toSave+=varName + ".setBackground('" + this.background + "')<br>";
toSave+=varName + ".setAbility('" + this.ability + "')<br>";
toSave+=varName + ".setAC(" + this.ac + ")<br>";
toSave+=varName + ".setAcrobatics('" + this.acrobatics + "')<br>";
toSave+=varName + ".setAlignment('" + this.alignment + "')<br>";
toSave+=varName + ".setAnimal('" + this.animal + "')<br>";
toSave+=varName + ".setArmor('" + this.armor + "')<br>";
toSave+=varName + ".setArcana('" + this.arcana + "')<br>";
toSave+=varName + ".setAthletics('" + this.athletics + "')<br>";
toSave+=varName + ".setBackF('" + this.backF + "')<br>";
toSave+=varName + ".setBackL('" + this.backL + "')<br>";
toSave+=varName + ".setBackS('" + this.backS + "')<br>";
toSave+=varName + ".setBackT('" + this.backT + "')<br>";
toSave+=varName + ".setBonds('" + this.bonds + "')<br>";
toSave+=varName + ".setCha(" + this.cha + ")<br>";
toSave+=varName + ".setChaPro('" + this.chaPro + "')<br>";
toSave+=varName + ".setCon(" + this.con + ")<br>";
toSave+=varName + ".setConPro('" + this.conPro + "')<br>";
toSave+=varName + ".setCurHp(" + this.curHp + ")<br>";
toSave+=varName + ".setDeception('" + this.deception + "')<br>";
toSave+=varName + ".setDex(" + this.dex + ")<br>";
toSave+=varName + ".setDexPro('" + this.dexPro + "')<br>";
toSave+=varName + ".setEquipment('" + this.equipment + "')<br>";
toSave+=varName + ".setExperience('" + this.experience + "')<br>";
toSave+=varName + ".setFeats('" + this.feats + "')<br>";
toSave+=varName + ".setFeatureNotes('" + this.featureNotes + "')<br>";
toSave+=varName + ".setFigure('" + this.figure + "')<br>";
toSave+=varName + ".setFlaws('" + this.flaws + "')<br>";
toSave+=varName + ".setHistory('" + this.history + "')<br>";
toSave+=varName + ".setHitDice('" + this.hitDice + "')<br>";
toSave+=varName + ".setIdeals('" + this.ideals + "')<br>";
if(!isNaN(this.init))
{toSave+=varName + ".setInit(" + this.init + ")<br>";
}
toSave+=varName + ".setImmunity('" + this.immunity + "')<br>";
toSave+=varName + ".setInitBonus('" + this.initBonus + "')<br>";
toSave+=varName + ".setInsight('" + this.insight + "')<br>";
toSave+=varName + ".setInt(" + this.inte + ")<br>";
toSave+=varName + ".setIntimidation('" + this.intimidation + "')<br>";
toSave+=varName + ".setIntPro('" + this.intPro + "')<br>";
toSave+=varName + ".setInvestigation('" + this.investigation + "')<br>";
toSave+=varName + ".setLanguages('" + this.languages + "')<br>";
toSave+=varName + ".setMaxHp(" + this.maxHp + ")<br>";
toSave+=varName + ".setCurHp(" + this.curHp + ")<br>";
toSave+=varName + ".setMedicine('" + this.medicine + "')<br>";
toSave+=varName + ".setNature('" + this.nature + "')<br>";
toSave+=varName + ".setPerception('" + this.perception + "')<br>";
toSave+=varName + ".setPerformance('" + this.performance + "')<br>";
toSave+=varName + ".setPersuasion('" + this.persuasion + "')<br>";
toSave+=varName + ".setPro('" + this.pro + "')<br>";
toSave+=varName + ".setProficiencies('" + this.proficiencies + "')<br>";
toSave+=varName + ".setProficienciesRace('" + this.proficienciesRace + "')<br>";
toSave+=varName + ".setReligion('" + this.religion + "')<br>";
toSave+=varName + ".setResistance('" + this.resistance + "')<br>";
toSave+=varName + ".setSaving('" + this.saving + "')<br>";
toSave+=varName + ".setSenses('" + this.senses + "')<br>";
toSave+=varName + ".setShield('" + this.shield + "')<br>";
toSave+=varName + ".setSize('" + this.size + "')<br>";
toSave+=varName + ".setSleight('" + this.sleight + "')<br>";
toSave+=varName + ".setSkills('" + this.skills + "')<br>";
toSave+=varName + ".setSpeed('" + this.speed + "')<br>";
toSave+=varName + ".setSpellAbility('" + this.spellAbility + "')<br>";
toSave+=varName + ".setSpellAbilityNumber('" + this.spellAbilityNumber + "')<br>";
toSave+=varName + ".setStealth('" + this.stealth + "')<br>";
toSave+=varName + ".setStr(" + this.str + ")<br>";
toSave+=varName + ".setStrPro('" + this.strPro + "')<br>";
toSave+=varName + ".setSurvival('" + this.survival + "')<br>";
toSave+=varName + ".setTrait('" + this.trait + "')<br>";
toSave+=varName + ".setVulnerability('" + this.vulnerability + "')<br>";
toSave+=varName + ".setWis(" + this.wis + ")<br>";
toSave+=varName + ".setWisPro('" + this.wisPro + "')<br>";
toSave+=varName + ".setCurKiPointSlot(" + this.curKiPointSlot + ")<br>";
toSave+=varName + ".setCurChannelDivinitySlot(" + this.curChannelDivinitySlot + ")<br>";
toSave+=varName + ".setCurFirstSlot(" + this.curFirstSlot + ")<br>";
toSave+=varName + ".setCurSecondSlot(" + this.curSecondSlot + ")<br>";
toSave+=varName + ".setCurThirdSlot(" + this.curThirdSlot + ")<br>";
toSave+=varName + ".setCurFourthSlot(" + this.curFourthSlot + ")<br>";
toSave+=varName + ".setCurFifthSlot(" + this.curFifthSlot + ")<br>";
toSave+=varName + ".setCurSixthSlot(" + this.curSixthSlot + ")<br>";
toSave+=varName + ".setCurSeventhSlot(" + this.curSeventhSlot + ")<br>";
toSave+=varName + ".setCurEighthSlot(" + this.curEighthSlot + ")<br>";
toSave+=varName + ".setCurNinthSlot(" + this.curNinthSlot + ")<br>";
toSave+=varName + ".setDamageConditions('" + this.damageConditions + "')<br>";
if(this.menuShown)
{toSave+=varName + ".showMenu( )<br>";
}
toSave+="add(" + varName + ")<br>";
toSave+="\/\/End of " + this.name + "<br>";
return toSave;
}

function _hide()
{document.getElementById(this.elementId).style.visibility="hidden";
}

function _hideBox()
{this.box.hide();
}

function _hideMenu()
{this.menu.hide();
this.menuShown=false;
}

function _putAt(x, y)
{this.x=x;
this.y=y;
document.getElementById(this.elementId).style.top=y;
document.getElementById(this.elementId).style.left=x;
}

function _putCharAt(x, y)
{this.x=x;
this.y=y;
numX=x.substring(0, x.length - 2);
menuX=(numX / 1 + characterBoxWidth) + "px";
this.box.putAt(x, y);
this.menu.putAt(menuX, y);
}
$("input[name='id_radioname']").on('change', function(e)
{var value=$("input[name='id_radioname']:checked").val();
localStorage.setItem('option', value);
location.reload();
})

function _ref()
{boxContents="<img src='" + this.figure + "'> ";
boxContents+="<table><tr><td>" + this.name;
boxContents+="</td></tr><tr><td>HP : " + this.curHp + "/" + this.maxHp;
boxContents+="</td></tr><tr><td>Target?<input id='targeted" + this.index + "' name='targeted' onClick='targeted=" + this.index + "' type='radio'>"
boxContents+="</td></tr><tr><td><input type='button' onClick='toggleMenu(" + this.index + ")' value='Show stats?'>";
boxContents+="</td></tr><tr><td>Initiative : " + this.init;
boxContents+="</td></tr></table>"
this.box.setContents(boxContents);
menuContents="</td></tr></table><table><tr><td><input type='button' value='Roll(Init)iative?'onClick='askInit(" + this.index + ")'> bonus:<input maxLength=4 onChange='characters[" + this.index + "].setInitBonus(this.value)'size=4 type='text' value=" + this.initBonus + ">/" + this.curIni;
menuContents+="</td><td>Spell Ability:<select onChange='characters[" + this.index + "].setSpellAbility(this.value)'><option>" + this.spellAbility + "<option>int<option>wis<option>cha</select>" + this.spellAbilityNumber;
menuContents+="</td><td>Level(Pro)ficiency bonus:<input maxLength=4 onChange='characters[" + this.index + "].setPro(this.value)'size=4 type='text' value='" + this.pro + "'>";
menuContents+="</td><td>(Sit)uation mod:<input maxLength=4 onChange='characters[" + this.index + "].setSit(this.value)'size=4 type='text' value=" + this.sit + ">";
menuContents+="</td></tr></table></td><td><table><tr><td>" + this.combatLog;
menuContents+="</td></tr></table><table><tr><td>Show ";
menuContents+="</td><td><input onClick='toggleTab1(" + this.index + ")' type='button' value='Name AC HP?'>";
menuContents+="</td><td><input onClick='toggleTab5(" + this.index + ")' type='button' value=' Abilities?'>";
menuContents+="</td><td><input onClick='toggleTab6(" + this.index + ")' type='button' value=' Actions?'>";
menuContents+="</td><td><input onClick='toggleTab2(" + this.index + ")' type='button' value=' Background?'>";
menuContents+="</td><td><input onClick='toggleTab4(" + this.index + ")' type='button' value=' Class?'>";

menuContents+="</td></tr></table></span><span id=toggled1" + this.index + " style='display : " + this.toggled1 + "'>";

menuContents+="<table><tr><td><table><tr><td>"
menuContents+="Name : <input class=name maxLength=50 onChange='characters[" + this.index + "].setName(this.value)' placeHolder='Name'size=20 type='text' value='" + this.name + "'>";
menuContents+="</td></tr><tr><td>Size:<select onChange='characters[" + this.index + "].setSize(this.value)'><option>" + this.size + "<option>Tiny 2.5x2.5ft<option>Small 5x5ft<option>Medium 5x5ft<option>Large 10x10ft<option>Huge 15x15ft<option>Gargantuan 20x20ft+</select>"
menuContents+="</td></tr><tr><td>Speed :<input onChange='characters[" + this.index + "].setSpeed(this.value)' size='25' type='text' value='" + this.speed + "'>";
menuContents+="</td></tr><tr><td>Senses :<input onChange='characters[" + this.index + "].setSenses(this.value)' size='25' type='text' value='" + this.senses + "'>";
menuContents+="</td></tr><tr><td>Race:<select onChange='characters[" + this.index + "].setRace(this.value)'><option>" + this.race + "<option>Aasimar, Fallen</option><option>Aasimar, Protector</option><option>Aasimar, Scourge</option><option>Dragonborn<option>Dwarf, Gray<option>Dwarf, Hill<option>Dwarf, Mountain<option>Elf, Dark<option>Elf, Half<option>Elf, High<option>Elf, Moon<option>Elf, Wood<option>Elf, Shadow<option>Gnome, Deep<option>Gnome, Forest<option>Gnome, Rock<option>Halfling, Lightfoot<option>Halfling, Stout<option>Human<option>Orc, Half<option>Satyr<option>Tiefling</select>";
menuContents+="</td></tr><tr><td><input onChange='characters[" + this.index + "].setRace(this.value)' placeHolder='other race' size='25' type='text'>";
menuContents+="</td></tr><tr><td>Traits :<textArea cols='25' rows='3' onChange='characters[" + this.index + "].setTrait(this.value)'placeHolder='Gender, Age, Color, Height, Personality, Weight'>" + this.trait + "</textarea>";
menuContents+="</td></tr><tr><td>Miniature File :<input onChange='characters[" + this.index + "].setFigure(this.value)'placeHolder='*.png'size='25' type='text' value='" + this.figure + "'>";
menuContents+="</td></tr></table></td><td><table><tr><td>Armor Class(AC) :<input maxLength=2 onChange='characters[" + this.index + "].setAC(this.value)'size=2 type='text' value=" + this.ac + ">/" + this.curAc;
menuContents+="</td></tr><tr><td><select onChange='characters[" + this.index + "].setArmor(this.value)'><option>" + this.armor + "<option>No Armor AC10+dex<option>Natural Armor<option>Padded AC11+dex Stealth at disadv<option>Leather AC11+dex<option>Studded AC12+dex<option>Hide AC12+dex max 2<option>Mage Armor AC13+dex<option>Chain Shirt AC13+dex max 2<option>Scale AC14+dex max 2 Stealth at disadv<option>Breastplate AC14+dex max 2<option>Half Plate AC15+dex max 2 Stealth at disadv<option>Ring AC14 Stealth at disadv<option>Chain Mail AC16 Stealth at disadv str13<option>Splint AC17 Stealth at disadv str15<option>Plate AC18 Stealth at disadv str15<option>Unarmored Defense AC10+dex+wis</select>";
menuContents+="</td></tr><tr><td><input onChange='characters[" + this.index + "].setArmor(this.value)' placeHolder='other armor or magical defense' size='25' type='text'>";
menuContents+="</td></tr><tr><td><select onChange='characters[" + this.index + "].setShield(this.value)'><option>" + this.shield + "<option>No Shield AC+0<option>Shield AC+2</select>";
menuContents+="</td></tr><tr><td><input onChange='characters[" + this.index + "].setShield(this.value)' placeHolder='other shield or magical defense' size='25' type='text'>";
menuContents+="</td></tr><tr><td>Resistance(dmg /2) :<input onChange='characters[" + this.index + "].setResistance(this.value)' size='25' value='" + this.resistance + "'>";
menuContents+="</td></tr><tr><td>Damage Immunity(dmg 0) :<input onChange='characters[" + this.index + "].setImmunity(this.value)' size='25' value='" + this.immunity + "'>";
menuContents+="</td></tr><tr><td>Vulnerability(dmg x2) :<input onChange='characters[" + this.index + "].setVulnerability(this.value)' size='25' value='" + this.vulnerability + "'>";
menuContents+="</td></tr><tr><td><input type='button' onClick='characters[" + this.index + "].save()'value='Save this character?'>";
menuContents+="</td></tr></table></td><td><table><tr><td>Hit Points(HP) :<input maxLength=4 onChange='characters[" + this.index + "].setMaxHp(this.value)' size=4 type='text' value=" + this.maxHp + ">";
menuContents+="/<input maxLength=4 onChange='characters[" + this.index + "].setCurHp(this.value)' size=4 type='text' value=" + this.curHp + "> Temp HP : " + this.tempHp + "";
menuContents+="</td></tr><tr><td>Hit Dice(HD):<input maxLength=10 onChange='characters[" + this.index + "].setHitDice(this.value)' placeHolder='XdY+Z' size=10 type='text' value='" + this.hitDice + "'>";
menuContents+="</td></tr><tr><td>Take damage?<input maxLength=4 onChange='characters[" + this.index + "].setdamage(this.value)'size=4 type='text'>";
menuContents+="</td></tr><tr><td>Heal up?<input maxLength=4 onChange='characters[" + this.index + "].setHealing(this.value)'size=4 type='text'>";
menuContents+="</td></tr><tr><td>Damage Conditions :<br>example temp hp+20 ac+5 str-4 ini+10 blinded<br></td></tr><tr><td><textArea cols='25' rows=2 onChange='characters[" + this.index + "].setDamageConditions(this.value)'placeHolder='temp hp+10, ac-1, str+1, ini+3, blinded'>" + this.damageConditions + "</textArea>"
menuContents+="</td></tr><tr><td><input type='button' value='Delete this character?'onClick='removeChar(" + this.index + ")'>";
menuContents+="</td></tr></table>";

menuContents+="</td></tr></table></span><span id=toggled5" + this.index + " style='display : " + this.toggled5 + "'>";

menuContents+="<table><tr><td><table><tr><td><input onClick='abi=1;abiMod=characters[" + this.index + "].strMod;skillMod=characters[" + this.index + "].strPro;abiRoll(" + this.index + ")'value='Roll(str)ength?' type='button'>score:<input maxLength=2 onChange='characters[" + this.index + "].setStr(this.value)'size=2 type='text' value=" + this.str + ">/" + this.curStr + " mod : " + this.strMod + "+<select onChange='characters[" + this.index + "].setStrPro(this.value)'><option>" + this.strPro + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=10;abiMod=characters[" + this.index + "].strMod;skillMod=characters[" + this.index + "].athletics;abiRoll(" + this.index + ")'value='Roll Athletics(str)?'type='button'>+<select onChange='characters[" + this.index + "].setAthletics(this.value)'><option>" + this.athletics + "<option><option>pro<option>exp</select>";
menuContents+="</td></tr><tr><td>Carrying Capacity : " + this.carryingCapacity + "lbs";
menuContents+="</td></tr><tr><td>Drag, Lift, Push : " + this.dragLiftPush + "lbs";
menuContents+="</td></tr><tr><td>High Jump : " + this.highJump + "ft Long Jump : " + this.longJump + "ft";
menuContents+="</td></tr></table></td><td><table><tr><td><input onClick='abi=2;abiMod=characters[" + this.index + "].dexMod;skillMod=characters[" + this.index + "].dexPro;abiRoll(" + this.index + ")'value='Roll(dex)terity?' type='button'>score:<input maxLength=2 onChange='characters[" + this.index + "].setDex(this.value)'size=2 type='text' value=" + this.dex + ">/" + this.curDex + " mod : " + this.dexMod + "+<select onChange='characters[" + this.index + "].setDexPro(this.value)'><option>" + this.dexPro + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=7;abiMod=characters[" + this.index + "].dexMod;skillMod=characters[" + this.index + "].acrobatics;abiRoll(" + this.index + ")'value='Roll Acrobatics(dex)?'type='button'>+<select onChange='characters[" + this.index + "].setAcrobatics(this.value)'><option>" + this.acrobatics + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=22;abiMod=characters[" + this.index + "].dexMod;skillMod=characters[" + this.index + "].sleight;abiRoll(" + this.index + ")'value='Roll Sleight of Hand(dex)?'type='button'>+<select onChange='characters[" + this.index + "].setSleight(this.value)'><option>" + this.sleight + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=23;abiMod=characters[" + this.index + "].dexMod;skillMod=characters[" + this.index + "].stealth;abiRoll(" + this.index + ")'value='Roll Stealth(dex)?'type='button'>+<select onChange='characters[" + this.index + "].setStealth(this.value)'><option>" + this.stealth + "<option><option>pro<option>exp</select>";
menuContents+="</td></tr></table></td><td><table><tr><td><input onClick='abi=3;abiMod=characters[" + this.index + "].conMod;skillMod=characters[" + this.index + "].conPro;abiRoll(" + this.index + ")'value='Roll(con)stitution?'type='button'>score:<input maxLength=2 onChange='characters[" + this.index + "].setCon(this.value)'size=2 type='text' value=" + this.con + ">/" + this.curCon + " mod : " + this.conMod + "+<select onChange='characters[" + this.index + "].setConPro(this.value)'><option>" + this.conPro + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td>Hold Breath : " +(parseInt(this.conMod) + 1) + "min"
menuContents+="</td></tr><tr><td>Suffocate : " + parseInt(this.conMod) + "min";
menuContents+="</td></tr></table></td></tr><tr><td><table><tr><td><input onClick='abi=4;abiMod=characters[" + this.index + "].intMod;skillMod=characters[" + this.index + "].intPro;abiRoll(" + this.index + ")'value='Roll(int)elligence?'type='button'>score:<input maxLength=2 onChange='characters[" + this.index + "].setInt(this.value)'size=2 type='text' value=" + this.inte + ">/" + this.curInt + " mod : " + this.intMod + "+<select onChange='characters[" + this.index + "].setIntPro(this.value)'><option>" + this.intPro + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=9;abiMod=characters[" + this.index + "].intMod;skillMod=characters[" + this.index + "].arcana;abiRoll(" + this.index + ")'value='Roll Arcana(int)?'type='button'>+<select onChange='characters[" + this.index + "].setArcana(this.value)'><option>" + this.arcana + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=12;abiMod=characters[" + this.index + "].intMod;skillMod=characters[" + this.index + "].History;abiRoll(" + this.index + ")'value='Roll History(int)?'type='button'>+<select onChange='characters[" + this.index + "].setHistory(this.value)'><option>" + this.history + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=15;abiMod=characters[" + this.index + "].intMod;skillMod=characters[" + this.index + "].investigation;abiRoll(" + this.index + ")'value='Roll Investigation(int)?'type='button'>+<select onChange='characters[" + this.index + "].setInvestigation(this.value)'><option>" + this.investigation + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=17;abiMod=characters[" + this.index + "].intMod;skillMod=characters[" + this.index + "].nature;abiRoll(" + this.index + ")'value='Roll Nature(int)?'type='button'>+<select onChange='characters[" + this.index + "].setNature(this.value)'><option>" + this.nature + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=21;abiMod=characters[" + this.index + "].intMod;skillMod=characters[" + this.index + "].religion;abiRoll(" + this.index + ")'value='Roll Religion(int)?'type='button'>+<select onChange='characters[" + this.index + "].setReligion(this.value)'><option>" + this.religion + "<option><option>pro<option>exp</select>";
menuContents+="</td></tr></table></td><td><table><tr><td><input onClick='abi=5;abiMod=characters[" + this.index + "].wisMod;skillMod=characters[" + this.index + "].wisPro;abiRoll(" + this.index + ")'value='Roll(wis)dom?'type='button'>score:<input maxLength=2 onChange='characters[" + this.index + "].setWis(this.value)'size=2 type='text' value=" + this.wis + ">/" + this.curWis + " mod : " + this.wisMod + "+<select onChange='characters[" + this.index + "].setWisPro(this.value)'><option>" + this.wisPro + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=8;abiMod=characters[" + this.index + "].wisMod;skillMod=characters[" + this.index + "].animal;abiRoll(" + this.index + ")'value='Roll Animal Handling(wis)?'type='button'>+<select onChange='characters[" + this.index + "].setAnimal(this.value)'><option>" + this.animal + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=13;abiMod=characters[" + this.index + "].wisMod;skillMod=characters[" + this.index + "].insight;abiRoll(" + this.index + ")'value='Roll Insight(wis)?'type='button'>+<select onChange='characters[" + this.index + "].setInsight(this.value)'><option>" + this.insight + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=16;abiMod=characters[" + this.index + "].wisMod;skillMod=characters[" + this.index + "].medicine;abiRoll(" + this.index + ")'value='Roll Medicine(wis)?'type='button'>+<select onChange='characters[" + this.index + "].setMedicine(this.value)'><option>" + this.medicine + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=18;abiMod=characters[" + this.index + "].wisMod;skillMod=characters[" + this.index + "].perception;abiRoll(" + this.index + ")'value='Roll Perception(wis)?'type='button'>+<select onChange='characters[" + this.index + "].setPerception(this.value)'><option>" + this.perception + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=24;abiMod=characters[" + this.index + "].wisMod;skillMod=characters[" + this.index + "].survival;abiRoll(" + this.index + ")'value='Roll Survival(wis)?'type='button'>+<select onChange='characters[" + this.index + "].setSurvival(this.value)'><option>" + this.survival + "<option><option>pro<option>exp</select> ";
menuContents+="</td></tr></table></td><td><table><tr><td><input onClick='abi=6;abiMod=characters[" + this.index + "].chaMod;skillMod=characters[" + this.index + "].chaPro;abiRoll(" + this.index + ")'value='Roll(cha)risma?'type='button'>score:<input maxLength=2 onChange='characters[" + this.index + "].setCha(this.value)'size=2 type='text' value=" + this.cha + ">/" + this.curCha + " mod : " + this.chaMod + "+<select onChange='characters[" + this.index + "].setChaPro(this.value)'><option>" + this.chaPro + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=11;abiMod=characters[" + this.index + "].chaMod;skillMod=characters[" + this.index + "].deception;abiRoll(" + this.index + ")'value='Roll Deception(cha)?'type='button'>+<select onChange='characters[" + this.index + "].setDeception(this.value)'><option>" + this.deception + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=14;abiMod=characters[" + this.index + "].chaMod;skillMod=characters[" + this.index + "].intimidation;abiRoll(" + this.index + ")'value='Roll Intimidation(cha)?'type='button'>+<select onChange='characters[" + this.index + "].setIntimidation(this.value)'><option>" + this.intimidation + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=19;abiMod=characters[" + this.index + "].chaMod;skillMod=characters[" + this.index + "].performance;abiRoll(" + this.index + ")'value='Roll Performance(cha)?'type='button'>+<select onChange='characters[" + this.index + "].setPerformance(this.value)'><option>" + this.performance + "<option><option>pro<option>exp</select>"
menuContents+="</td></tr><tr><td><input onClick='abi=20;abiMod=characters[" + this.index + "].chaMod;skillMod=characters[" + this.index + "].persuasion;abiRoll(" + this.index + ")'value='Roll Persuasion(cha)?'type='button'>+<select onChange='characters[" + this.index + "].setPersuasion(this.value)'><option>" + this.persuasion + "<option><option>pro<option>exp</select>";
menuContents+="</td></tr></table></td></tr><tr><td><table><tr><td>Racial Abilility Increases :<input onChange='characters[" + this.index + "].setAbility(this.value)' size='25' value='" + this.ability + "'>";
menuContents+="</td></tr><tr><td>Racial Proficiencies :<input onChange='characters[" + this.index + "].setProficienciesRace(this.value)' size='25' value='" + this.proficienciesRace + "'>";
menuContents+="</td></tr><tr><td>Racial Languages :<input onChange='characters[" + this.index + "].setLanguages(this.value)' size='25' type='text' value='" + this.languages + "'>";
menuContents+="</td></tr></table></td><td><table><tr><td>Background Proficiencies :<input onChange='characters[" + this.index + "].setBackT(this.value)' size='25' value='" + this.backT + "'>";
menuContents+="</td></tr><tr><td>Background Skills :<input onChange='characters[" + this.index + "].setBackS(this.value)' size='25' value='" + this.backS + "'>";
menuContents+="</td></tr><tr><td>Background Languages :<input onChange='characters[" + this.index + "].setBackL(this.value)' size='25' value='" + this.backL + "'>";
menuContents+="</td></tr></table></td><td><table><tr><td>Class Proficiencies :<input onChange='characters[" + this.index + "].setProficiencies(this.value)' size='25' value='" + this.proficiencies + "'>";
menuContents+="</td></tr><tr><td>Class Skills :<input onChange='characters[" + this.index + "].setSkills(this.value)' size='25' value='" + this.skills + "'>";
menuContents+="</td></tr><tr><td>Class Saving Throws :<input onChange='characters[" + this.index + "].setSaving(this.value)' size='25' value='" + this.saving + "'>";
menuContents+="</td></tr></table></td></tr></table></span><span id=toggled6" + this.index + " style='display : " + this.toggled6 + "'><table><tr><td><table><tr><td>";

if(this.class.match(/Warlock/))
{menuContents+="Cantrips Known : "+this.cantripsKnown+", Spells Known : "+this.spellsKnown+", Spell Slots : "+this.spellSlots+", Slot Level : "+this.slotLevel+", Invocations Known : "+this.invocationsKnown+"</td>"
}

if(this.class.match(/Cleric|Druid|Wizard/))
{menuContents+="Cantrips Known : "+this.cantripsKnown;
}

if(this.class.match(/Monk/))
{menuContents+="</td><td>Ki Points : " + this.maxKiPointSlot + "<input onClick='characters[" + this.index + "].setCurKiPointSlot(characters[" + this.index + "].curKiPointSlot-1)' type='button' value=&darr;><input maxLength=2 onChange='characters[" + this.index + "].setCurKiPointSlot(this.value)' size=2 type='text' value=" + this.curKiPointSlot + "></td></tr></table></td></tr><tr><td>";
}

if(this.class.match(/Cleric/))
{
menuContents+="</td><td>Channel Divinity : " + this.maxChannelDivinitySlot + "<input onClick='characters[" + this.index + "].setCurChannelDivinitySlot(characters[" + this.index + "].curChannelDivinitySlot-1)' type='button' value=&darr;><input maxLength=2 onChange='characters[" + this.index + "].setCurChannelDivinitySlot(this.value)' size=2 type='text' value=" + this.curChannelDivinitySlot + ">";
}

if(this.class.match(/(Cleric|Druid|Sorcerer|Warlock|Wizard)/))
{
menuContents+="<td>Spell Slots 1st: " + this.maxFirstSlot + "<input onClick='characters[" + this.index + "].setCurFirstSlot(characters[" + this.index + "].curFirstSlot-1)' type='button' value=&darr;><input maxLength=2 onChange='characters[" + this.index + "].setCurFirstSlot(this.value)' size=2 type='text' value=" + this.curFirstSlot + ">";
menuContents+="</td><td>2nd: " + this.maxSecondSlot + "<input onClick='characters[" + this.index + "].setCurSecondSlot(characters[" + this.index + "].curSecondSlot-1)' type='button' value=&darr;><input maxLength=2 onChange='characters[" + this.index + "].setCurSecondSlot(this.value)' size=2 type='text' value=" + this.curSecondSlot + ">";
menuContents+="</td><td>3rd: " + this.maxThirdSlot + "<input onClick='characters[" + this.index + "].setCurThirdSlot(characters[" + this.index + "].curThirdSlot-1)' type='button' value=&darr;><input maxLength=2 onChange='characters[" + this.index + "].setCurThirdSlot(this.value)' size=2 type='text' value=" + this.curThirdSlot + ">";
menuContents+="</td><td>4th: " + this.maxFourthSlot + "<input onClick='characters[" + this.index + "].setCurFourthSlot(characters[" + this.index + "].curFourthSlot-1)' type='button' value=&darr;><input maxLength=2 onChange='characters[" + this.index + "].setCurFourthSlot(this.value)' size=2 type='text' value=" + this.curFourthSlot + ">";
menuContents+="</td></tr><tr><td>5th: " + this.maxFifthSlot + "<input onClick='characters[" + this.index + "].setCurFifthSlot(characters[" + this.index + "].curFifthSlot-1)' type='button' value=&darr;><input maxLength=2 onChange='characters[" + this.index + "].setCurFifthSlot(this.value)' size=2 type='text' value=" + this.curFifthSlot + ">";
menuContents+="</td><td>6th: " + this.maxSixthSlot + "<input onClick='characters[" + this.index + "].setCurSixthSlot(characters[" + this.index + "].curSixthSlot-1)' type='button' value=&darr;><input maxLength=2 onChange='characters[" + this.index + "].setCurSixthSlot(this.value)' size=2 type='text' value=" + this.curSixthSlot + ">";
menuContents+="</td><td>7th: " + this.maxSeventhSlot + "<input onClick='characters[" + this.index + "].setCurSeventhSlot(characters[" + this.index + "].curSeventhSlot-1)' type='button' value=&darr;><input maxLength=2 onChange='characters[" + this.index + "].setCurSeventhSlot(this.value)' size=2 type='text' value=" + this.curSeventhSlot + ">";
menuContents+="</td><td>8th: " + this.maxEighthSlot + "<input onClick='characters[" + this.index + "].setCurEighthSlot(characters[" + this.index + "].curEighthSlot-1)' type='button' value=&darr;><input maxLength=2 onChange='characters[" + this.index + "].setCurEighthSlot(this.value)' size=2 type='text' value=" + this.curEighthSlot + ">";
menuContents+="</td><td>9th: " + this.maxNinthSlot + "<input onClick='characters[" + this.index + "].setCurNinthSlot(characters[" + this.index + "].curNinthSlot-1)' type='button' value=&darr;><input maxLength=2 onChange='characters[" + this.index + "].setCurNinthSlot(this.value)' size=2 type='text' value=" + this.curNinthSlot + ">";
menuContents+="]&nbsp;<input onClick='characters[" + this.index + "].setCurFirstSlot(characters[" + this.index + "].maxFirstSlot);characters[" + this.index + "].setCurSecondSlot(characters[" + this.index + "].maxSecondSlot);characters[" + this.index + "].setCurThirdSlot(characters[" + this.index + "].maxThirdSlot);characters[" + this.index + "].setCurFourthSlot(characters[" + this.index + "].maxFourthSlot);characters[" + this.index + "].setCurFifthSlot(characters[" + this.index + "].maxFifthSlot);characters[" + this.index + "].setCurSixthSlot(characters[" + this.index + "].maxSixthSlot);characters[" + this.index + "].setCurSeventhSlot(characters[" + this.index + "].maxSeventhSlot);characters[" + this.index + "].setCurEighthSlot(characters[" + this.index + "].maxEighthSlot);characters[" + this.index + "].setCurNinthSlot(characters[" + this.index + "].maxNinthSlot)' type='button' value='Take an 8hrs rest?'></td></tr></table></td></tr><tr><td><table><tr><td>";
}
menuContents+="<h3>Actions</h3></td><td><input maxLength=200 onChange='characters[" + this.index + "].setRollName1(this.value)'placeHolder='attackRollToHitName+Ability+pro SpellSlot RangeInFeet'size='25' type='text' value='" + this.rollName1 + "'>"
menuContents+="</td><td><input maxLength='8' onChange='characters[" + this.index + "].setRoll1(this.value)'placeHolder='XdY+Z'size='8' type='text' value=" + this.roll1 + ">"
menuContents+="</td><td><input maxLength=200 onChange='characters[" + this.index + "].setRollName2(this.value)'placeHolder='damageType+Ability and damageConditions' size='25' type='text' value='" + this.rollName2 + "'>"
menuContents+="</td><td><input maxLength='8' onChange='characters[" + this.index + "].setRoll2(this.value)'placeHolder='XdY+Z'size='8' type='text' value=" + this.roll2 + ">"
menuContents+="</td><td><input maxLength='8' onClick='addRollPrompt(" + this.index + ")'size='8' type='button' value='Add this roll?'>";
if(this.rolls.length===0)
{menuContents+="</td></tr><tr><td><i>No custom rolls listed.</i>";
}
else
{for(var i=0; i< this.rolls.length; i++)
 {menuContents+="</td></tr><tr><td><input type='button' onClick='makeRoll(" + this.index + "," + i + ")'value='Roll?'>"
menuContents+="</td><td><input maxLength=220 onChange='characters[" + this.index + "].rollNames[" + i + "]=this.value' size='25' type='text' value='" + this.rollNames[i] + "'>";
menuContents+="</td><td><input maxLength='8' onChange='characters[" + this.index + "].rolls[" + i + "]=this.value' size='8' type='text' value='" + this.rolls[i] + "'>";
menuContents+="</td><td><input maxLength=220 onChange='characters[" + this.index + "].rollNames2[" + i + "]=this.value' size='25' type='text' value='" + this.rollNames2[i] + "'>";
menuContents+="</td><td><input maxLength='8' onChange='characters[" + this.index + "].rolls2[" + i + "]=this.value' size='8' type='text' value='" + this.rolls2[i] + "'>";
menuContents+="</td><td><input type='button' onClick='deleteRollPrompt(" + this.index + "," + i + ")'value='Delete this roll?'>";
}
}

menuContents+="</td></tr></table></td></tr></table></span><span id=toggled2" + this.index + " style='display : " + this.toggled2 + "'>";

menuContents+="<table><tr><td><a href='https://tetra-cube.com/dnd/dnd-char-gen.html' target='_blank'>Tetra-Cube.Com's Random Personality Generator</a>";

menuContents+="</td></tr><tr><td>Background:<select onChange='characters[" + this.index + "].setBackground(this.value)'><option>" + this.background + "<option>Acolyte<option>Charlatan<option>City Investigator<option>City Watch<option>Cloistered Scholar<option>Courtier<option>Criminal, Blackmailer<option>Criminal, Burglar<option>Criminal, Enforcer<option>Criminal, Fence<option>Criminal, Highway Robber<option>Criminal, HiredKiller<option>Criminal, Pickpocket<option>Criminal, Smuggler<option>Entertainer, Actor<option>Entertainer, Dancer<option>Entertainer, Fire-Eater<option>Entertainer, Gladiator<option>Entertainer, Instrumentalist<option>Entertainer, Jester<option>Entertainer, Juggler<option>Entertainer, Poet<option>Entertainer, Singer<option>Entertainer, Storyteller<option>Entertainer, Tumbler<option>Faction Agent<option>Folk Hero, Farmer<option>Guild, Alchemist<option>Guild, Brewer<option>Guild, Calligrapher<option>Guild, Carpenter<option>Guild, Cartographer<option>Guild, Cobbler<option>Guild, Cook<option>Guild Crafter<option>Guild, Glassblower<option>Guild, Jeweler<option>Guild, Leatherworker<option>Guild, Mason<option>Guild, Painter<option>Guild, Potter<option>Guild, Smith<option>Guild, Tinker<option>Guild, Weaver<option>Guild, or Woodcarver<option>Hermit<option>Noble, Knight<option>Noble, Retainer<option>Outlander, Bounty Hunter<option>Outlander, Exile<option>Outlander, Forester<option>Outlander, Guide<option>Outlander, Homesteader<option>Outlander, Hunter-Gatherer<option>Outlander, Pilgrim<option>Outlander, Trapper<option>Outlander, Tribal Marauder<option>Outlander, Tribal Nomad<option>Sage, Alchemist<option>Sage, Astronomer<option>Sage, Discredited Academic<option>Sage, Librarian<option>Sage, Professor<option>Sage, Researcher<option>Sage, Scribe<option>Sage, Wizard Apprentice<option>Sailor, Cartographer<option>Sailor, Pirate<option>Soldier, Cavalry<option>Soldier, Healer<option>Soldier, Infantry<option>Soldier, Officer<option>Soldier, Quartermaster<option>Soldier, Scout<option>Urchin</select>";
menuContents+="</td></tr><tr><td><input onChange='characters[" + this.index + "].setBackground(this.value)' placeHolder='other background' size='25' type='text'>";
menuContents+="</td></tr><tr><td>Background Features :<input onChange='characters[" + this.index + "].setBackF(this.value)' size='25' type='text' value='" + this.backF + "'>";
menuContents+="</td></tr><tr><td>Bonds :<textArea cols='25' rows='3' onChange='characters[" + this.index + "].setBonds(this.value)'>" + this.bonds + "</textArea>";
menuContents+="</td></tr><tr><td>Flaws :<textArea cols='25' rows='3' onChange='characters[" + this.index + "].setFlaws(this.value)'>" + this.flaws + "</textArea>";
menuContents+="</td></tr><tr><td>Ideals :<textArea cols='25' rows='3' onChange='characters[" + this.index + "].setIdeals(this.value)'>" + this.ideals + "</textArea>";
menuContents+="</td></tr><tr><td>Feats:<textArea cols='25' rows='3' onChange='characters[" + this.index + "].setFeats(this.value)'>" + this.feats + "</textArea>";
menuContents+="</td></tr><tr><td>Alignment:<select onChange='characters[" + this.index + "].setAlignment(this.value)'><option>" + this.alignment + "<option>Lawful Good<option>Lawful Neutral<option>Lawful Evil<option>Neutral Good<option>Neutral<option>Neutral Evil<option>Chaotic Good<option>Chaotic Neutral<option>Chaotic Evil<option>Unaligned</select>";
menuContents+="</td></tr><tr><td>"+this.alignmentDescription;
menuContents+="</td></tr><tr><td>Equipment:<textArea cols='25' rows='3' onChange='characters[" + this.index + "].setEquipment(this.value)'>" + this.equipment + "</textArea>";

menuContents+="</td></tr></table></span><span id=toggled4" + this.index + " style='display : " + this.toggled4 + "'><table><tr><td>Class:<select onChange='characters[" + this.index + "].setClass(this.value)'><option>" + this.class + "<option>Artificer, Alchemist</option><option>Artificer, Gunsmith</option><option>Barbarian, Ancestral Guardian<option>Barbarian, Berserker<option>Barbarian, Storm Herald<option>Barbarian, Totem Warrior<option>Barbarian, Zealot<option>Bard, Glamour<option>Bard, Lore<option>Bard, Satire</option><option>Bard, Swords<option>Bard, Valor<option>Bard, Whispers<option>Cleric, Arcana</option><option>Cleric, Death</option><option>Cleric, Forge<option>Cleric, Grave<option>Cleric, Knowledge<option>Cleric, Life<option>Cleric, Light<option>Cleric, Nature<option>Cleric, Tempest<option>Cleric, Trickery<option>Cleric, War<option>Druid, Desert<option>Druid, Dreams<option>Druid, Land<option>Druid, Moon<option>Fighter, Arcane Archer<option>Fighter, Battle Master<option>Fighter, Cavalier<option>Fighter, Champion<option>Fighter, Eldritch Knight<option>Fighter, Samurai<option>Monk, Cobalt Soul</option><option>Monk, Drunken Master<option>Monk, Four Elements<option>Monk, Kensei<option>Monk, Open Hand<option>Monk, Shadow<option>Monk, Sun Soul<option>Paladin, Ancients<option>Paladin, Crown</option><option>Paladin, Devotion<option>Paladin, Vengence<option>Ranger, Beast Master<option>Ranger, Hunter<option>Ranger, Monster Slayer<option>Rogue, Arcane Trickster<option>Rogue, Assassin<option>Rogue, Mastermind<option>Rogue, Phantom<option>Rogue, Thief<option>Rogue, Swashbuckler<option>Sorcerer, Draconic<option>Sorcerer, Fire<option>Sorcerer, Storm<option>Sorcerer, Wild<option>Warlock, Archfey<option>Warlock, Fiend<option>Warlock, Great Old Ones</option><option>Warlock, Hexblade</option><option>Warlock, Undying</option><option>Witch, White Magic</option><option>Witch, Black Magic</option><option>Wizard, Abjurer<option>Wizard, Bladesinger</option><option>Wizard, Conjurer<option>Wizard, Diviner<option>Wizard, Enchanter<option>Wizard, Evoker<option>Wizard, Illusionist<option>Wizard, Necromancer</option><option>Wizard, Theurgist<option>Wizard, Transmuter</select>";
menuContents+="</td></tr><tr><td><input onChange='characters[" + this.index + "].setClass(this.value)' placeHolder='other class' size='25' type='text'>";
menuContents+="</td></tr><tr><td>Challenge Rating(CR)or Level(lvl):<input maxLength=3 onChange='characters[" + this.index + "].setLevel(this.value)' size=3 type='text' value=" + this.level + ">";
menuContents+="</td></tr><tr><td>Feature Notes:<textArea cols='30' rows='3' onChange='characters[" + this.index + "].setFeatureNotes(this.value)'placeHolder='Ability Score Increases, etc.'>" + this.featureNotes + "</textarea>";
menuContents+="</td></tr><tr><td>Experience Points(XP) :<input maxLength='8' onChange='characters[" + this.index + "].setExperience(this.value)'size='8' type='text' value='" + this.experience + "'></td></tr><tr><td>" + this.features + "</color>";
menuContents+="</td></tr></table></span>"
this.menu.setContents(menuContents);
}

function _refresh()
{document.getElementById(this.elementId).innerHTML=this.contents;
}

function _rollInit()
{return d(20) + parseInt(this.curIni) + parseInt(this.sit);
}

function _save()
{toSave=this.getSaveText();
showSavePrompt(this.name, toSave);
}

function _setAbility(x)
{this.ability=x;
this.refresh();
}

function _setAC(x)
{this.ac=x;
this.curAc=x;
this.refresh();
}

function _setAlignment(x)
{this.alignment=x;
this.setAlignmentDescription(x);

if(this.alignment.match(/Neutral/i))
{this.setAlignmentDescription("I will help others, but avoid serious personal risks or loyalties that don\'t benefit me.")
}
if(this.alignment.match(/Chaotic Evil/i))
{this.setAlignmentDescription("I violently follow my greed, hatred, or bloodlust, promoting my own freedom and control over others.")
}
if(this.alignment.match(/Chaotic Good/i))
{this.setAlignmentDescription("I follow my conscience regardless of others\' expectations. Freedom and compassion matter more than rules.")
}
if(this.alignment.match(/Chaotic Neutral/i))
{this.setAlignmentDescription("I follow my shifting whims with little concern about rules or later consequences.")
}
if(this.alignment.match(/Lawful Evil/i))
{this.setAlignmentDescription("I take what I want up to the maximum allowed by law or loyalty, promoting order and control over others.")
}
if(this.alignment.match(/Lawful Good/i))
{this.setAlignmentDescription("I do what\'s right as expected by society to promote order and compassion for all.")
}
if(this.alignment.match(/Lawful Neutral/i))
{this.setAlignmentDescription("I obey laws, traditions or my own strict code to promote order and society above all else.")
}
if(this.alignment.match(/Neutral Evil/i))
{this.setAlignmentDescription("I lack compassion and do whatever I want, promoting control over others above all else.")
}
if(this.alignment.match(/Neutral Good/i))
{this.setAlignmentDescription("I help others according to their needs and promote compassion above all else.")
}
this.refresh();
}

function _setAlignmentDescription(x)
{this.alignmentDescription=x;
this.refresh();
}

function _setArmor(x)
{this.armor=x;
this.refresh();
}

function _setBackground(x)
{this.background=x;
if(this.background.match(/Acolyte/))
{this.setBackF('Shelter of the Faithful');
 this.setBackL('2 languages');
 this.setBackS('Insight, Religion');
 this.setBackT('');
}
if(this.background.match(/City Investigator/))
{this.setBackF('(Watchere s Eye)understand laws, posts and criminal guilds of any place');
 this.setBackL('any 2');
 this.setBackS('Athletics, Investigation');
 this.setBackT('Uniform, Horn summoning help, Manacles, 10GP');
}
if(this.background.match(/City Watch/))
{this.setBackF('(Watchere s Eye)understand laws, posts and criminal guilds of any place');
 this.setBackL('any 2');
 this.setBackS('Athletics, Insight');
 this.setBackT('Uniform, Horn summoning help, Manacles, 10GP');
}
if(this.background.match(/Charlatan/))
{this.setBackF('False Identity, Favorite Schemes');
 this.setBackL('');
 this.setBackS('Deception, Sleight of Hand');
 this.setBackT('Disguise Kit, Forgery Kit');
}
if(this.background.match(/Cloistered Scholar/))
{this.setBackF('(Library Access)preferential treatment accessing lore');
 this.setBackL('any 2');
 this.setBackS('History and 1 from Arcana, Nature, Religion');
 this.setBackT('Scholar Robes, Writing Kit, Borrowed book on current study, 10GP');
}
if(this.background.match(/Courtier/))
{this.setBackF('(Court Functionary)bureaucracy, access to records, current government interests and intrigues');
 this.setBackL('any 2');
 this.setBackS('Insight, Persuasion');
 this.setBackT('Fine Clothes, 5GP');
}
if(this.background.match(/Guild Crafter/))
{this.setBackF('(Respect of the Craft Folk)finest free room and board among crafters');
 this.setBackL('Dwarvish or 1 language');
 this.setBackS('History, Insight');
 this.setBackT('Traveler Clothes, 5GP, Gem of 10GP');
}
if(this.background.match(/Criminal/))
{this.setBackF('Criminal Contact, Criminal Specialty');
 this.setBackL('');
 this.setBackS('Deception, Stealth');
 this.setBackT('1 from Cards, Darts, Dice, or Dragonchess, Thieves Tools');
}
if(this.background.match(/Entertainer/))
{this.setBackF('Entertainer Routines, By Popular Demand');
 this.setBackL('');
 this.setBackS('Acrobatics, Performance');
 this.setBackT('Disguise Kit, 1 musical instrument');
}
if(this.background.match(/Faction Agent/))
{this.setBackF('(Court Functionary)bureaucracy, access to records, current government interests and intrigues');
 this.setBackL('any 2');
 this.setBackS('Insight and 1 int wis or cha based skill');
 this.setBackT('Badge of faction, code book, common clothes, 15GP');
}
if(this.background.match(/Far Traveler/))
{this.setBackF('');
 this.setBackL('1 language');
 this.setBackS('Insight, Perception');
 this.setBackT('traveler clothes 1 musical instrument or gaming set, maps jewelry of 10GP, 5GP');
}
if(this.background.match(/Folk/))
{this.setBackF('Defining Event, Rustic Hospitality');
 this.setBackL('');
 this.setBackS('Animal Handling, Survival');
 this.setBackT('Artisan Tools 1 from Alchemist, Brewer, Calligrapher, Carpenter, Cartographer, Cobbler, Cook, Glassblower, Jeweler, Leatherworker, Mason, Painter, Potter, Smith, Tinker, Weaver, or Woodcarver, Land Vehicles');
}
if(this.background.match(/Guild/))
{this.setBackF('Guild Business, Guild Membership');
 this.setBackL('1 language');
 this.setBackS('Insight, Persuasion');
 this.setBackT('Artisan Tools 1 from Alchemist, Brewer, Calligrapher, Carpenter, Cartographer, Cobbler, Cook, Glassblower, Jeweler, Leatherworker, Mason, Painter, Potter, Smith, Tinker, Weaver, or Woodcarver');
}
if(this.background.match(/Hermit/))
{this.setBackF('Life of Seclusion, Discovery');
 this.setBackL('1 language');
 this.setBackS('Medicine, Religion');
 this.setBackT('Herbalism Kit');
}
if(this.background.match(/Noble/))
{this.setBackF('Position of Privilege');
 this.setBackL('1 language');
 this.setBackS('History, Persuasion');
 this.setBackT('1 from Cards, Darts, Dice, or Dragonchess');
}
if(this.background.match(/Outlander/))
{this.setBackF('Origin, Wanderer');
 this.setBackL('1 language');
 this.setBackS('Athletics, Survival');
 this.setBackT('1 musical instrument');
}
if(this.background.match(/Sage/))
{this.setBackF('Specialty, Researcher');
 this.setBackL('2 languages');
 this.setBackS('Arcana, History');
 this.setBackT('');
}
if(this.background.match(/Sailor/))
{this.setBackF('Ship s Passage');
 this.setBackL('');
 this.setBackS('Athletics, Perception');
 this.setBackT('Navigator Tools, Vehicles(Water)');
}
if(this.background.match(/Soldier/))
{this.setBackF('Specialty, Military Rank');
 this.setBackL('');
 this.setBackS('Athletics, Intimidation');
 this.setBackT('1 from Cards, Darts, Dice, or Dragonchess, Vehicles(Land)');
}
if(this.background.match(/Urchin/))
{this.setBackF('City Secrets');
 this.setBackL('');
 this.setBackS('Sleight of Hand, Stealth');
 this.setBackT('Disguise Kit, Thieves Tools');
}
this.refresh();
}

function _setBackF(x)
{this.backF=x;
this.refresh();
}

function _setBackL(x)
{this.backL=x;
this.refresh();
}

function _setBackS(x)
{this.backS=x;
this.refresh();
}

function _setBackT(x)
{this.backT=x;
this.refresh();
}

function _setBonds(x)
{this.bonds=x;
this.bonds=this.bonds.replace(/\'/g, '');
this.refresh();
}

function _setCha(x)
{this.cha=x;
this.curCha=x;
calcMod(x);
this.chaMod=mod;
if(this.spellAbility==='int')
{this.setSpellAbilityNumber(this.intMod);
}
if(this.spellAbility==='wis')
{this.setSpellAbilityNumber(this.wisMod);
}
if(this.spellAbility==='cha')
{this.setSpellAbilityNumber(this.chaMod);
}
this.refresh();
}

function _setClass(x)
{this.class=x;
if(this.class.match(/Witch/))
{this.setEquipment('whip and blowgun.or light crossbow 20/20 bolts.or simple weapon.component pouch.or a totem.scholar s pack.or dungeoneer s pack.leather armor.any simple weapon.dagger');
 if(this.class.match(/White Magic/))
 {a="@2nd(Spells)<b onClick='Bless()'>Bless</b><b onClick='CureWounds()'>Cure Wounds</b></td></tr><tr><td>@3rd(Remedy)1/1, short rest recharge, 1 action, 60ft, heal 1d10+your witch level</td></tr><tr><td>@3rd(Hex Spells)<b onClick='LesserRestoration()'>Lesser Restoration</b><b onClick='SpiritualWeapon()'>Spiritual Weapon</b></td></tr><tr><td>@4th(Hex Spells)<b onClick='DeathWard()'>Death Ward</b><b onClick='GuardianOfFaith()'>Guardian of Faith</b></td></tr><tr><td>@5th(Hex Spells)<b onClick='Hallow()'>Hallow</b><b onClick='RaiseDead()'>Raise Dead</b>";
b='@6th(Talisman of Protection)1 at a time, a being AC+2 with no shield, save+1d4';
c='@10th(Benevolent Surge)1 reaction, you, or your familiar, or your ally takes dmg, regain 1d10+chaMod HP, 1/1 short rest recharge';
dx='@14th(Witch s Gift)when healed by you, a being gains AC+3 uteoynt';
}
 if(this.class.match(/Black Magic/))
 {a="@2nd(Hex Spells)<b onClick='GentleRepose()'>Gentle Repose</b><b onClick='MagicWeapon()'>Magic Weapon</b></td></tr><tr><td>@3rd(Agony)60ft, conSave or concentration at disadv, atboit roll a die, on odd number, target attacks at disadv</td></tr><tr><td>@3rd(Hex Spells)<b onClick='AnimateDead()'>Animate Dead</b><b onClick='VampiricTouch()'>Vampiric Touch</b></td></tr><tr><td>@4th(Hex Spells)<b onClick='Blight()'>Blight</b><b onClick='DeathWard()'>Death Ward</b></td></tr><tr><td>@5th(Hex Spells)<b onClick='Cloudkill()'>Cloudkill</b><b onClick='Contagion()'>Contagion</b>";
b='@6th(Voodoo Doll)60ft, 10/10 turns, target the doll, the target takes 1/2 dmg, target saves at disadv if you have the target s har or its item attached to the doll';
c='@10th(Share Pain)1/1, short rest recharge, target a being to take your dmg on a failed cha Save';
dx='@14th(Disrupt Life)1 action, 1 spell slot, 20ft radius you target con save for half damage or 1d10 necrotic per spell slot+your chaMod';
}
 this.setFeatures("</td></tr><tr><td>@1st(Spellcasting) @1st(Hexes)2 Cantrips, and opt to replace 1 hex for another when leveling up<b onClick='FalseLife()'>False Life</b><b onClick='InflictWounds()'>Inflict Wounds</b></td></tr><tr><td>@1st(Witch s Curse)(Hideous)save vs your fright spells at disadv, 1 target Wis Save or frightened utteoint or(Hollow)when target is reduced to 0HP, you gain temp HP witch lvl+chaMod or(Possessed)learn +1 1st level witch spell, 4th, 8th, 12th, and 16th which do not count against your known spells</td></tr><tr><td>@2nd(Cackle)1 bonus action, 60ft, spell time+1 round</td></tr><tr><td>@2nd(Familiar)1 bonus action, your familiar can reaction attack or cast</td></tr><tr><td>" + a + "</td></tr><tr><td>@4th<b><b>Ability Score Improvement</b></b> @4th @8th @12th @16th @19th</td></tr><tr><td>" + b + "</td></tr><tr><td>@7th(Improved Familiar)your familiar concentrates your spell</td></tr><tr><td>@9th(Cauldron)Alchemy Points @9th 3 @12th 4 @15th 5 @18th 6 1AP 1 potion of Animal Friendship, or Healing, or Poison @13th 2AP 1 potion Heroism and Mind Reading, Philters of Love 24hr potency</td></tr><tr><td>@11th(Grand Hex)@11th 1 @15th 2 @18th 3<b onClick='Abate()'>Abate</b><b onClick='BeckonFamiliar()'>Beckon Familiar</b><b onClick='Bleeding()'>Bleeding</b><b onClick='CharmPerson()'>Charm</b><b onClick='Cripple()'>Cripple</b><b onClick='DireFamiliar()'>Dire Familiar</b><b onClick='Discord()'>Discord</b><b onClick='DisguiseSelf()'>Disguise</b><b onClick='Disorient()'>Disorient</b><b onClick='Duplicity()'>Duplicity</b><b onClick='Fear()'>Evil Eye</b><b onClick='Fortune()'>Fortune</b><b onClick='GoUnseen()'>Go Unseen</b><b onClick='Hesitate()'>Hesitate</b><b onClick='Mire()'>Mire</b><b onClick='Misfortune()'>Misfortune</b><b onClick='Nails()'>Nails</b><b onClick='Obfuscate()'>Obfuscate</b><b onClick='Pestilence()'>Pestilence</b><b onClick='Ruin()'>Ruin</b><b onClick='Slumber()'>Slumber</b><b onClick='Telepathy()'>Telepathy</b><b onClick='Tremors()'>Tremors</b><b onClick='Ward()'>Ward</b>(Grand Hexes)<b onClick='Coven()'>Coven</b><b onClick='DualHex()'>Dual Hex</b><b onClick='InsidiousHex()'>Insidious Hex</b><b onClick='IntoAToad()'>IntoAToad</b><b onClick='RemoteHex()'>Remote Hex</b><b onClick='SlowDeath()'>Slow Death</b><b onClick='WeaveOfFate()'>Weave of Fate</b><b onClick='WitchsBroom()'>Witch s Broom</b><b onClick='WitchsHut()'>Witch s Hut</b></td></tr><tr><td>" + c + "</td></tr><tr><td>" + d + "</td></tr><tr><td>@20th(Hex Master)targets save vs your hexes at disadv");
 this.setHitDice(this.level + 'd8+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('light armor, simple weapons, blowguns, shortswords, whips');
 this.setSaving('wis+pro, cha+pro');
 this.setStrPro('');
 this.setDexPro('');
 this.setConPro('');
 this.setIntPro('');
 this.setWisPro('pro');
 this.setChaPro('pro');
 this.setSkills('2 from Arcana, Deception, Insight, Intimidation, Persuasion, Nature, Religion');
 this.setSpellAbility('cha');
}
if(this.class.match(/Artificer/))
{this.setEquipment('(a) a handaxe and a light hammer.or(b) any two simple weapons.A light crossbow and 20 bolts.(a) scale mail.or(b) studded leather armor.Thieves tools and a dungeoneer s pack');
 if(this.class.match(/Alchemist/))
 {a="(Alchemist s Satchel)(Alchemical Formula)(<b onClick='AlchemicalAcid()'>Alchemical Acid</b>)";
b="(Alchemical Formula)(<b onClick='AlchemicalFire()'>Alchemical Fire</b>)or(<b onClick='HealingDraught()'>Healing Draught</b>)or(<b onClick='SmokeStick()'>Smoke Stick</b>)or(<b onClick='SwiftStepDraught()'>Swift Step Draught</b>)or(<b onClick='TanglefootBag()'>Tanglefoot Bag</b>)or(<b onClick='Thunderstone()'>Thunderstone</b>)";
c="@9th(Alchemical Formula)(<b onClick='AlchemicalFire()'>Alchemical Fire</b>)or(<b onClick='HealingDraught()'>Healing Draught</b>)or(<b onClick='SmokeStick()'>Smoke Stick</b>)or(<b onClick='SwiftStepDraught()'>Swift Step Draught</b>)or(<b onClick='TanglefootBag()'>Tanglefoot Bag</b>)or(<b onClick='Thunderstone()'>Thunderstone</b>)";
dx="@14th(Alchemical Formula)(<b onClick='AlchemicalFire()'>Alchemical Fire</b>)or(<b onClick='HealingDraught()'>Healing Draught</b>)or(<b onClick='SmokeStick()'>Smoke Stick</b>)or(<b onClick='SwiftStepDraught()'>Swift Step Draught</b>)or(<b onClick='TanglefootBag()'>Tanglefoot Bag</b>)or(<b onClick='Thunderstone()'>Thunderstone</b>)";
e="@17th(Alchemical Formula)(<b onClick='AlchemicalFire()'>Alchemical Fire</b>)or(<b onClick='HealingDraught()'>Healing Draught</b>)or(<b onClick='SmokeStick()'>Smoke Stick</b>)or(<b onClick='SwiftStepDraught()'>Swift Step Draught</b>)or(<b onClick='TanglefootBag()'>Tanglefoot Bag</b>)or(<b onClick='Thunderstone()'>Thunderstone</b>)";
}
 if(this.class.match(/Gunsmith/))
 {a="(Master Smith)Smith s Tools+pro page 187 PHB<b onClick='Mending()'>Mending</b>(<b onClick='ThunderCannon()>Thunder Cannon</b>)3 8hr days + 100gp to make(Arcane Magazine)40 rounds/long rest, 10 rounds/short rest";
b="(<b onClick='ThunderMonger()'>Thunder Monger</b>)";
c="@9th(<b onClick='BlastWave()'>Blast Wave</b>)";
dx="@14th(<b onClick='PiercingRound()'>Piercing Round</b>)";
e="@17th(<b onClick='ExplosiveRound()'>Explosive Round</b>)";
}
 this.setFeatures("</td></tr><tr><td>@1st(Artificer Specialist)(Magic Item Analysis)<b onClick='DetectMagic()'>Detect Magic</b><b onClick='Identify()'>Identify</b> no material component needed " + a + "</td></tr><tr><td>@2nd(Tool Expertise)class tools+exp(Wonderous Invetion)bag of holding or cap of water breathing or driftglobe or goggles of night or sending stones</td></tr><tr><td>@3rd(Spellcasting) " + b + "</td></tr><tr><td>@4th<b><b>Ability Score Improvement</b></b>(Infuse Magic)infuse wis mod objects with your spells for up to 8hrs or triggered 1act</td></tr><tr><td>@5th(Super Attunement)attune to 4 magic objects(Wondrous Invention)alchemy jug or helm of comprehending languages or lantern of revealing or ring of swimming or robe of useful items or rope of climbing or wand of magic detection or wand of secrets</td></tr><tr><td>@6th(Mechanical Servant)CR2 or lower beast that is a construct, immune charm poison, darkvision 60ft, understands your language</td></tr><tr><td>@8th<b><b>Ability Score Improvement</b></b></td></tr><tr><td>" + c + "</td></tr><tr><td>@10th(Wonderous Invention)bag of beans or chime of opening or decanter of endless water or eyes of minute seeing or folding boat or slippers of spider climbing</td></tr><tr><td>@12th<b><b>Ability Score Improvement</b></b></td></tr><tr><td>" + d + "</td></tr><tr><td>@15th(Superior Attunement)attune to 5 magic objects(Wonderous Invention)</td></tr><tr><td>@16th<b><b>Ability Score Improvement</b></b></td></tr><tr><td>" + e + "</td></tr><tr><td>@18th<b><b>Ability Score Improvement</b></b></td></tr><tr><td>@20th(Soul of Artifice)attune to 6 items +1/item to saving throws(Wonderous Invention)eyes of the eagle or gem of brightness or gloves of missile snaring or gloves of swimming and climbing or ring of jumping or ring of mind shielding or wings of flying");
 this.setHitDice(this.level + 'd8+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('light and medium armor, simple weapons');
 this.setSaving('con+pro, int+pro');
 this.setStrPro('');
 this.setDexPro('');
 this.setConPro('pro');
 this.setIntPro('pro');
 this.setWisPro('');
 this.setChaPro('');
 this.setSkills('3 from Arcana, Deception, History, Investigation, Medicine, Nature, Religion, Sleight of Hand');
 this.setSpellAbility('int');
}
if(this.class.match(/Barbarian/))
{this.setEquipment('greataxe or martial melee weapon.2 handaxes or simple weapon.explorer pack.4/4 javelins');
 if(this.class.match(/Ancestral/))
 {
 a='@3rd(Primal Path)of the(Ancestral Guardian)</td></tr><tr><td>@3rd(Ancestral Protectors)during rage your target attacks your allies at disadv and allies have resistance 1/2 dmg';
b='@6th(Spirit Shield)during rage use your reaction to reduce 1 ally s damage by 2d6 within 30ft, 3d6 at 10th, 4d6 at 14th';
c='@10th(Consult the Spirits)cast Augury or Clairvoyance then short rest with wisdom spell ability';
dx='@14th(Vengeful Ancestors)as with Spirit Shield only the attackers take damage equal to your 1 ally s damage reduction';
}
 if(this.class.match(/Berserker/))
 {a='@3rd(Primal Path)of the Berserker</td></tr><tr><td>@3rdFRENZY while raging, 1 bonus attack';
b='@6th(Mindless Rage)while raging, immune charm fear';
c='@10th(Intimidating Prescence)30ft, wis save vs your DC8cha+pro, or target frightened, till the end of your next turn';
dx='@14th(Retaliation)when hit, react melee attack';
}
 if(this.class.match(/Totem/))
 {a='@3rdPRIMAL PATH of the Totem Warrior</td></tr><tr><td>@3rd(Spirit Seeker)[x]Beast Sense as a ritual.[x]Speak with Animals as a ritual</td></tr><tr><td>@3rd(Tomtem Spirit)BEAR raging, resist all damage but psychic. EAGLE raging, opportunity attacked at disadv,Dash as bonus. WOLF adjacent allies attack at adv';
b='@6th(Aspect of the Beast)BEAR carry and lift x 2, str at adv. EAGLE see 1mi, details 100ft, no Perception at disadv vs dim light. WOLF track at fast pace, Stealth at normal pace';
c='@10th(Spirit Walker)[x]Commune with Nature as a ritual';
dx='@14th(Totemic Attunement)BEAR raging,target attacks at disadv other than you. EAGLE raging,fly speed is walk speed drop after each turn. WOLF raging,on hit,knock prone as bonus';
}
 if(this.class.match(/Storm Herald/))
 {a='@3rd(Primal Path)of the(Storm Herald)</td></tr><tr><td>@3rd(Storm Aura)10ft radius storm from self but not through total cover, during rage.(Desert)do 2 fire damage in the 10ft radius as bonus, 3damage at 5th, 4damage at 10th, 5damage at 15th, 6damage at 20th.(Sea)target 1 within 10ft DC8+con+pro vsDex 1d6 lightning or save for half, 2d6damage at 10th, 3d6 at 15th, 4d6 at 20th.(Tundra)2 allies in 10ft aura gain 2temp hp, 3temp hp at 5th, 4temp hp at 10th, 5temp hp at 15th, 6temp hp at 20th';
b='@6th(Storm Soul)(Desert)resist 1/2 damage from fire and no extreme heat suffering.(Sea)resist 1/2 damage from lightning, breathe underwater, swim speed 30ft.(Tundra)resist 1/2 cold dmg, no extreme cold suffering, 5ft cubebe of water to ice melts 1min';
c='@10th(Shielding Storm)as with Storm Soul only allies within the aura also have the resistance';
dx='@14th(Raging Storm)(Desert)attacker in your aura hits you and you use your reaction to DC8+con+pro vsDex save or take 1/2 your level fire dmg.(Sea)attacker in your aura hits you and you use your reaction to DC8+con+pro vsStr or attacker knocked prone.(Tundra)DC8+con+pro vsStr or attacker speed 0 until tsoynt';
}
 if(this.class.match(/Zealot/))
 {a='@3rd(Primal Path)of the(Zealot)</td></tr><tr><td>@3rd(Divine Fury)during rage deal extra 1d6+1/2 your lvl necrotic or radiant dmg</td></tr><tr><td>@3rd(Warrior of the Gods)caster does not need material components to raise you from the dead';
b='@6th(Fanatical Focus)during rage 1/1 reroll failed save';
c='@10th(Zealous Presence)bonus 10 allies in 60ft radius rolls at adv utsoynt';
dx='@14th(Rage Beyond Death)during rage 0hp not unconscious and do not die until rage ends with 0hp';
}
 this.setFeatures('</td></tr><tr><td>@1st(Rage)while unarmored, enter rage as bonus, str at adv, damage+rage damage, resist bludg, pierc, slash, lasts til taking no damage and not attacking</td></tr><tr><td>(Rage Damage) @1st(+2) @9th(+3) @16th +4)</td></tr><tr><td>@1st(Unarmored Defense)C10+dexMod+conMod</td></tr><tr><td>@2nd(Danger Sense)dex save at adv vs seen traps spells</td></tr><tr><td>@2nd(Reckless Attack)str melee attack at adv, attacked at adv</td></tr><tr><td>' + a + '</td></tr><tr><td><b><b>Ability Score Improvement</b></b> @4th @8th @12th @16th @19th</td></tr><tr><td>@5th(Extra Attack)</td></tr><tr><td>@5th(Fast Movement)unarmored,speed+10ft</td></tr><tr><td>' + b + '</td></tr><tr><td>@7th(Feral Instinct)init at adv,act normally surprised</td></tr><tr><td>@9th(Brutal Critical)damage+ @9th(1d) @(13th 2d) @(17th 3d)</td></tr><tr><td>' + c + '</td></tr><tr><td>@11th(Relentless Rage)(1/1)0 hp DC10 con save 1 hp,DC+5 each use before long rest</td></tr><tr><td>' + dx + '</td></tr><tr><td>@15th(Persistent Rage)</td></tr><tr><td>@18th(Indomitable Might)higher of str roll or str score</td></tr><tr><td>@20th(Primal Champion)str+4(max24), con+4(max24)');
 this.setHitDice(this.level + 'd12+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('light armor, medium armor, shields, and all weapons');
 this.setSaving('str+pro, con+pro');
 this.setStrPro('pro');
 this.setDexPro('');
 this.setConPro('pro');
 this.setIntPro('');
 this.setWisPro('');
 this.setChaPro('');
 this.setSkills('2 from Animal Handling, Athletics, Intimidation, Nature, Perception, or Survival');
}
if(this.class.match(/Bard/))
{this.setEquipment('rapier or longsword or simple weapon.diplomat pack or entertainer pack.lute or musical instrument.leather armor.dagger');
 if(this.class.match(/Glamour/))
 {a='@3rd(Bardic College)of(Glamour)</td></tr><tr><td>@3rd(Mantle of Inspiration)costs 1BI, bonus, 1 to your cha mod targets within 60ft radius gain 5temp hp and reaction to move speed without opportunity attacks, 8temp hp at 5th, 11temp hp at 10th, and 14temp hp at 15th</td></tr><tr><td>3rd(Enthralling Performance)1min 60ft radius of 1 to your cha mod of targets DC8+cha+pro vsWis save or become charmed, effect ends 1hr or if you harm targets or its allies';
b='@6th.(Mantle of Majesty)bonus cast Command without expending slot, concentrationntration, cast Command each round for 1min';
c='@14th.(Unbreakable Majesty)1min all new attackers must DC8+cha+pro vsCha save or must attack your ally, but save at disadv vs your spells next turn';
}
 if(this.class.match(/Lore/))
 {a='@3rd(Bardic College)of Lore</td></tr><tr><td>@3rd(Bonus Proficiencies)3 skills+pro</td></tr><tr><td>@3rdCUTTING WORDS 1BI,reaction,60ft,target roll-BI';
b='@6th.ADDITIONAL MAGICAL SECRETS 2 any class spells';
c='@14th.PEERLESS SKILL 1BD,abi check+BI';
}
 if(this.class.match(/Satire/))
 {a='@3rd((Bardic College)of Satire)</td></tr><tr><td>@3rd(Bonus Proficiencies) Sleight of Hand+pro.Thieves Tools+pro.1 additional skill+pro</td></tr><tr><td>@3rd(Tumbling Fool)1 turn.Dash and Disengage.climb speed is walking speed.half damage from falling';
b='@6th(Fool s Insight)Detect Thoughts your chaMod/chaMod times then take an 8hr rest to recharge, if target saves, it suffers a socal gaffe';
c='@14th.(Fool s Luck)add 1BD to your failed save throw, but DM applies this 1BD result to your future success roll and you must describe your gaffe';
}
 if(this.class.match(/Swords/))
 {a='@3rd(Bardic College)of(Swords)</td></tr><tr><td>@3rd(Bonus Proficiencies) medium armor, scimitar and proficient weapon is spell focus</td></tr><tr><td>@3rd(Fighting Style)(Dueling)+2 damage from 1 weapon with no other weapon or(Two-weapon Fighting)2nd(attack add abi mod to dmg</td></tr><tr><td>3rd(Blade Flourish)speed+10ft during attack, on hit use 1 fourish per turn.(Defensive Flourish)expend BI and add the roll to extra damage and add roll to your AC utsoynt.(Slashing Flourish)expend BI and damage adjacent targets.(Mobile Flourish)expend BI and add it to target damage then push target 5ft+BI roll, use reaction to be adjacent to target again';
b='@6th.(Extra Attack)';
c='@14th.(Master s Flourish)option to roll a free d6 instead of BI roll for flourishes';
}
 if(this.class.match(/Valor/))
 {a='@3rd(Bardic College)of Valor</td></tr><tr><td>@3rd(Bonus Proficiencies)Medium armor,shields,martial weapons</td></tr><tr><td>@3rdCOMBAT INSPIRATION 1BI,reaction,ally roll+BI or react AC+BI';
b='@6th.EXTRA ATTACK';
c='@14th.BATTLE MAGIC cast,bonus weapon attack';
}
 if(this.class.match(/Whispers/))
 {a='@3rd(Bardic College)of(Whispers)</td></tr><tr><td>@3rd(Psychic Blades)expend BI and do extra 2d6 psychic damage 1/rnd, @5th 3d6, @10th 5d6, @15th 8d6</td></tr><tr><td>@3rd(Words of Terror)1min DC8+cha+pro vsWis or frightend of you or other 1hr or until attacked or its ally attacked';
b='@6th.(Mantle of Whispers)a target dies within 30ft, you assume its form 1hr target Insight versus your Deception+5 to see disguise, recharge after short rest';
c='@14th.(Shadow Lore)1act ion, 1target DC8+cha+pro vsWis or charmed and will do reasonable requests because target thinks you know its secret, 8hrs or until it or its ally attacked, recharge after long rest';
}
 this.setFeatures('</td></tr><tr><td>@1st(Bardic Inspiration)1 or chaMod/1 or chaMod @1st(d6) @5th(d8) @(10th d10) @(15th d12</td></tr><tr><td>@2nd(Jack of All Trades)non pro abi checks+half pro</td></tr><tr><td>@2nd(Song of Rest)during rest,heal allies who hear @2nd(d6) @9th(d8) @(13th d10) @(17th d12</td></tr><tr><td>@3rd(Expertise)2 skills+pro are+exp @3rd(2) @(10th 2 more)</td></tr><tr><td>' + a + '</td></tr><tr><td>@4th@4th<b><b>Ability Score Improvement</b></b> @4th @8th @12th @16th @19th</td></tr><tr><td>@5th(Font of Inspiration)regain bardic inspiration during a short rest</td></tr><tr><td>@6th(Countercharm)act 30ft save vs charm fear</td></tr><tr><td>' + b + '</td></tr><tr><td>@10th(Magical Secrets)learn 2 spells any class at your lvl @(10th 2) @14th 2 more)</td></tr><tr><td>' + c + '</td></tr><tr><td>@20th(Superior Inspiration)at 0 Bardic Inspiration gain 1 each encounter');
 this.setHitDice(this.level + 'd8+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('light armor, simple weapons, hand crossbows, longswords, rapiers, and shortswords');
 this.setSaving('dex+pro, cha+pro');
 this.setStrPro('');
 this.setDexPro('pro');
 this.setConPro('');
 this.setIntPro('');
 this.setWisPro('');
 this.setChaPro('pro');
 this.setSkills('any 3 skills');
 this.setSpellAbility('cha');
}
if(this.class.match(/Cleric/))
{if(this.class.match(/Arcana/))
 {a="@1st(Arcana Domain Spells)<b onClick='DetectMagic()'>Detect Magic</b><b onClick='MagicMissile()'>Magic Missile</b></td></tr><tr><td>@1st(Bonus Proficiencies) Arcana+pro.2 Cantrips from the Wizard list</td></tr><tr><td>@2nd(Channel Divinity Arcane Abjuration) 1CD.1 action.present holy symbol and and 1 celestial, elemental, fey, or fiend within 30ft must save or be turned for 1 min or until damaged.must dash away.no reactions @5th level, you banish the 1/2CR being for 1 minute @8th banish upto 1CR @11th banish upto 2CR @14th banish upto 3CR @17th banish upto 4CR";
b="@3rd(Arcana Domain Spells)<b onClick='MagicWeapon()'>Magic Weapon</b><b onClick='NystulsMagicAura()'>Nystul s Magic Aura</b>";
c="@5th(Arcana Domain Spells)<b onClick='DispelMagic()'>Dispel Magic</b><b onClick='MagicCircle()'>Magic Circle</b></td></tr><tr><td>@6th(Spell Breaker)when healing ally, end one spell on the ally of the same spell level as your healing spell slot or lower</td></tr><tr><td>7th(Arcana Domain Spells)<b onClick='ArcaneEye()'>Arcane Eye</b><b onClick='LeomundsSecretChest()'>Leomund s Secret Chest</b></td></tr><tr><td>@8th(Potent Spellcasting)your cantrip damage+wisMod</td></tr><tr><td>@9th(Arcana Domain Spells)<b onClick='PlanarBinding()'>Planar Binding</b><b onClick='TeleportationCircle()'>Teleportation Circle</b>";
dx="@17th(Arcane Mastery) choose one 6th,one 7th,one 8th,one 9th level wizard spells to your domain spell list";
}
 if(this.class.match(/Death/))
 {a="@1st(Death Domain Spells)<b onClick='FalseLife()'>False Life</b><b onClick='RayOfSickness()'>Ray of Sickness</b></td></tr><tr><td>@1st(Bonus Proficiencies) martial weapons</td></tr><tr><td>@1st(Reaper) learn 1 necromancy cantrip from any class list and target 2 adjacent</td></tr><tr><td>@2nd(Channel Divinity Touch of Death) melee atk+5+1/2class lvl necro dmg";
b="@3rd(Death Domain Spells)<b onClick='BlindnessDeafness()'>Blindness Deafness</b><b onClick='RayOfEnfeeblement()'>Ray of Enfeeblement</b>";
c="@5th(Death Domain Spells)<b onClick='AnimateDead()'>Animate Dead</b><b onClick='VampiricTouch()'>Vampiric Touch</b></td></tr><tr><td>@6th(Inescapable Destruction) your necrotic atks ignore resistance</td></tr><tr><td>@7th(Death Domain Spells)<b onClick='Blight()'>Blight</b><b onClick='DeathWard()'>Death Ward</b></td></tr><tr><td>@8th(Divine Strike) @8th melee atk+1d8 necrotic dmg @14th melee atk+2d8 necrotic dmg</td></tr><tr><td>@9th(Death Domain Spells)<b onClick='AntilifeShell()'>Antilife Shell</b><b onClick='Cloudkill()'>Cloudkill</b>";
dx="@17th(Improved Reaper) 1st thru 5th necro spells can target 2 adjacent";
}
 if(this.class.match(/Forge/))
 {a="@1st(Forge Domain Spells)<b onClick='Identify()'>Identify</b><b onClick='SearingSmite()'>Searing Smite</b></td></tr><tr><td>@1st(Bonus Proficiencies) heavy armor smith s tools</td></tr><tr><td>@1st(Blessings of the Forge) turn 1 weapon or 1 armor into a +1 magical item permanently recharge long rest</td></tr><tr><td>@2nd(Artisan s Blessing) 1CD 1hr ritual construct 1 weapon or 1 suit of armor or 10 ammo or tools, must be metal and under 100gp";
b="@3rd(Forge Domain Spells)<b onClick='HeatMetal()'>Heat Metal</b><b onClick='MagicWeapon()'>Magic Weapon</b>";
c="@5th(Forge Domain Spells)<b onClick='ElementalWeapon()'>Elemental weapon</b><b onClick='ProtectionFromEnergy()'>Protection from Energy</b></td></tr><tr><td>@6th(Soul of the Forge)resistance fire dmg heavy armor AC+1</td></tr><tr><td>7th(Forge Domain Spells)<b onClick='Fabricate()'>Fabricate</b><b onClick='WallOfFire()'>Wall of Fire</b></td></tr><tr><td>@8th(Divine Strike) extra 1d8 fire dmg @14th 2d8</td></tr><tr><td>@9th(Forge Domain Spells)<b onClick='AnimateObject()'>Animate Object</b><b onClick='Creation()'>Creation</b>";
dx="@17th(Saint of Forge and Fire) immune fire dmg heavy armor resist bludgeoning, piercing, slashing from non-magical weapons";
}
 if(this.class.match(/Grave/))
 {a="@1st1(Grave Domain Spells)<b onClick='Bane()'>Bane</b><b onClick='FalseLife()'>False Life</b></td></tr><tr><td>@1st(Circle of Mortality) restore 0hp allies with max dice number</td></tr><tr><td>@1st(Eyes of the Grave) detect undead 60ft radius uteoynt 1 to wis mod times recharge long rest</td></tr><tr><td>@2nd(Path to the Grave) 1CD 1act ion 30ft 1target vulnerable damage uteoynt";
b="@3rd(Grave Domain Spells)<b onClick='GentleRepose()'>Gentle Repose</b><b onClick='RayOfEnfeeblement()'>Ray of Enfeeblement</b>";
c="@5th(Grave Domain Spells)<b onClick='Revivify()'>Revivify</b><b onClick='VampiricTouch()'>Vampiric Touch</b></td></tr><tr><td>@6th(Sentinel at Death s Door)1ally 30ft turn crit hit into normal hit and no crit effects 1 to wis mod times recharge long rest</td></tr><tr><td>@8th(Potent Spellcasting) cantrip dmg+wis mod</td></tr><tr><td>@9th(Grave Domain Spells)<b onClick='AntilifeShell()'>Antilife Shell</b><b onClick='RaiseDead()'>Raise Dead</b>";
dx="@17th(Keeper of Souls) 1target dies 60ft, you transfer the target s hitdice to heal ally recharge ttsoynt";
}
 if(this.class.match(/Knowledge/))
 {a='@1st.BLESSINGS OF KNOWLEDGE 2 languages, 2 skills+pro from Arcana, History, Nature or Religion</td></tr><tr><td>@1st[x]Command @1st[x]Identify</td></tr><tr><td>@2nd.KNOWLEDGE OF THE AGES 1CD, 1act , 60ft wis save or read surface thoughts and Suggestion 1min';
b='@3rd[x]Augury @3rd[x]Suggestion';
c='@5th[x]Nondetection @5th[x]Speak with Dead</td></tr><tr><td>@6th.READ THOUGHTS(1/1)1CD, 1act , 60ft, wis save or read surface thoughts, 10/10 turns , Suggestion, no slot cost no save</td></tr><tr><td>@7th[x]Arcane Eye @7th[x]Confusion</td></tr><tr><td>@8th.POTENT SPELL CASTING cantrip dam+wisMod</td></tr><tr><td>@9th[x]Legend Lore @9th[x]Scrying';
dx='@17th.VISIONS OF THE PAST(1/1)long rest, touch, wisScore is min, info on recent events';
}
 if(this.class.match(/Life/))
 {a='@1st<b>Bonus Proficiency</b> heavy armor</td></tr><tr><td>@1st <b>Disciple of Life</b>healing prayers get +2+spell lvl</td></tr><tr><td>@1st <b onClick=Bless()>Bless</b></td></tr><tr><td>@1st <b onclick=CureWounds()>Cure Wounds</b></td></tr><tr><td>@2nd <b>Preserve Life</b>1CD, 1act , 30ft, heal 5xLvl allies max half maxhp, less undead and constructs</td></tr><tr><td>';
b="@3rd <b onClick='LesserRestoration()'>Lesser Restoration</b></td></tr><tr><td>@3rd <b onClick=SpiritualWeapon()>Spiritual Weapon</b></td></tr>";
c="@5th<b onClick='BeaconOfHope()'>Beacon of Hope</b></td></tr><tr><td>@5th<b onClick=Revivify()>Revivify</b></td></tr><tr><td>@6th <b>Blessed Healer</b> when healing, you heal yourself 2+spell lvl</td></tr><tr><td>@7th<b onClick='DeathWard()'>Death Ward</b></td></tr><tr><td>@7th<b onClick='GuardianOfFaith()'>Guardian of Faith</b></td></tr><tr><td>@8th <b>Divine Strike</b> 1/turn weapon dam+1d8 radiant @14th +2d8)</td></tr><tr><td>@9th<b onClick=MassCureWounds()>Mass Cure Wounds</b></td></tr><tr><td>@9th<b onClick=RaiseDead()>Raise Dead</b>";
dx='@17th<b>Supreme Healing</b> heal max roll';
}
 if(this.class.match(/Light/))
 {a='@1st.BONUS CANTRIP Light, if know , other cantrip</td></tr><tr><td>@1st(Warding Flare)(wisMod/wisMod)long rest, when attacked, 30ft, react attacked at disadv</td></tr><tr><td>@1st[x]Burning Hands</td></tr><tr><td>@1st[x]Faerie Fire</td></tr><tr><td>@2nd.RADIANCE OF THE DAWN 1CD 30ft Darkness dispelled DC8wis+pro vsCon for half less full cover radiant 2d10+cLvl';
b='@3rd[x]Flaming Sphere @3rd[x]Scorching Ray';
c="@5th[x]Daylight @5th<b onClick='Fireball()'>Fireball</b></td></tr><tr><td>@6th.IMPROVED FLARE use for allies</td></tr><tr><td>@7th<b onClick='GuardianOfFaith()'>Guardian of Faith</b> @7th[x]Wall of Fire</td></tr><tr><td>@8th.POTENT SPELLCASTING cantrip dam+wisMod</td></tr><tr><td>@9th[x]Flame Strike @9th[x]Scrying";
dx='@17th.CORONA OF LIGHT 1act , 10/10 turns , 60ft rad+30ft dim light save at disadv vs fire radiant';
}
 if(this.class.match(/Nature/))
 {a='@1st.ACOLYTE OF NATURE 1 cantrip, 2 skills+pro from Animal Handling, Nature, Survival</td></tr><tr><td>@1st<b>Bonus Proficiency</b> heavy armor</td></tr><tr><td>@1st[x]Animal Friendship @1st[x]Speak with Animals</td></tr><tr><td>@2nd.CHARM ANIMALS AND PLANTS 1CD, 30ft wis save charmed 10/10 turns or damaged';
b='@3rd[x]Barkskin @3rd[x]Spike Growth</td></tr><tr><td>@5th[x]Plant Growth';
c='@5th[x]Wind Wall</td></tr><tr><td>@6th.DAMPEN ELEMENTS you or ally 30ft rad, react, resist acid, cold, lighting or thunder</td></tr><tr><td>@7th[x]Dominate Beast @7th[x]Grasping Vine</td></tr><tr><td>@8th(Divine Strike)1/turn weapon dam+1d8 cold, fire or lightning.(@14th)+2d8</td></tr><tr><td>@9th[x]Insect Plague @9th[x]Tree Stride';
dx='@17th.MASTER OF NATURE bonus command the charmed animals and plants';
}
 if(this.class.match(/Tempest/))
 {a="@1st(Bonus Proficiencies)martial weapons and heavy armor</td></tr><tr><td>@1st<b onClick='FogCloud()'>Fog Cloud</b> @1st<b onClick='Thunderwave()'>Thunderwave</b></td></tr><tr><td>@2nd(Destructive Wrath)1CD, deal max thunder damage";
b="@3rd<b onClick='GustOfWind()'>Gust of Wind</b> @3rd<b onClick='Shatter()'>Shatter</b>";
c='@5th[x]Call Lightning @5th[x]Sleet Storm</td></tr><tr><td>@6th.THUNDERBOLT STRIKE when lightning damage, option to push large or less 10ft</td></tr><tr><td>@7th[x]Control Water @7th[x]Ice Storm</td></tr><tr><td>@8th(Divine Strike)1/turn weapon damage+1d8thunder.(@14th)+2d8</td></tr><tr><td>@9th[x]Destructive Wave @9th[x]Insect Plague';
dx='@17th.STORMBORN fly speed is walk speed';
}
 if(this.class.match(/Trickery/))
 {a="@1st(Blessings of the Trickster)ally stealth at adv 1hr<p><b onClick='CharmPerson()'>Charm Person</b>,<b onClick='DisguiseSelf()'>Disguise Self</b></td></tr><tr><td>@2nd(Invoke Duplicity)1CD concentration 10/10 turns bonus move 30ft attack at adv";
b="@3rd<b onClick='MirrorImage()'>Mirror Image</b>,<b onClick='PassWithoutTrace()'>Pass without Trace</b>";
c="<p><b onClick='Blink()'>Blink</b>,<b onClick='DispelMagic()'>Dispel Magic</b></td></tr><tr><td>@6th(Cloak of Shadows) 1CD invisible till t e o y n turn or attack or cast</td></tr><tr><td>@7th<b onClick='DimensionDoor()'>Dimension Door</b>,<b onClick='Polymorph()'>Polymorph</b></td></tr><tr><td>@8th(Divine Strike)1/turn weapon damage+1d8poision.(@14th)+2d8</td></tr><tr><td>@9th<b onClick='DominatePerson()'>Dominate Person</b>,<b onClick='ModifyMemory()'>Modify Memory</b>";
dx='@17th(Improved Duplicity)move 4 clones 30ft/turn max 120ft</td></tr><tr><td>';
}
 if(this.class.match(/War/))
 {a="@1st(Bonus Proficiencies) martial weapons heavy armor</td></tr><tr><td>@1st(War Priest)when attacking 1 bonus attack</td></tr><tr><td>@1st<b onClick='DivineFavor()'>Divine Favor</b><b onClick='ShieldOfFaith()'>Shield of Faith</b></td></tr><tr><td>2nd(Guided Strike)1CD attack+10";
b="@3rd<b onClick='MagicWeapon()'>Magic Weapon</b><b onClick='SpiritualWeapon()'>Spiritual Weapon</b>";
c="@5th<b onClick='CrusadersMantle()'>Crusader s Mantle</b><b onClick='SpiritGuardians()'>Spirit Guardians</b></td></tr><tr><td>@6th(War God s Blessing)1CD ally 30ft attack+10</td></tr><tr><td>@7th<b onClick='FreedomOfMovement()'>Freedom of Movement</b><b onClick='Stoneskin()'>Stoneskin</b></td></tr><tr><td>@8th(Divine Strike)1/turn weapon damage+1d8 same damage type @14th+2d8</td></tr><tr><td>@9th<b onClick='FlameStrike()'>Flame Strike</b><b onClick='HoldMonster()'>Hold Monster</b>";
dx="@17th(Avatar of Battle)resist bludg, slash, pierc nonmagical weapon";
}
 this.setFeatures('</td></tr><tr><td>' + a + '<b>@2nd Turn Undead</b>1CD, 30ft radi., DC vsWis or frightened, @disadv while cleric is in sight, dash away, 10/10 turns</td></tr><tr><td>' + b + '</td></tr><tr><td>@4th<b><b>Ability Score Improvement</b></b> @4th @8th @12th @16th @19th</td></tr><tr><td>@5th <b>Destroy Undead</b> instead of dashing, the undead are destroyed @5th CR1/2 @8th CR1, CR1/2 @11th CR2, CR1, CR1/2 @14th CR3, CR2, CR1, CR1/2  @17th CR4, CR3, CR2, CR1, CR1/2</td></tr><tr><td>' + c + '</td></tr><tr><td>@10th<b>Divine Intervention</b> d100 roll your lvl or lower, divine helps</td></tr><tr><td>' + dx + ' @20th auto success');
 this.setEquipment('mace or warhammer.scale mail or leather armor or chain mail.light crossbow 20 bolts or simple weapon.priest pack or explorer pack.shield.holy symbol');
 this.setHitDice(this.level + 'd8+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('light armor, medium armor, shields, simple weapons');
 this.setSaving('wis+pro, cha+pro');
 this.setStrPro('');
 this.setDexPro('');
 this.setConPro('');
 this.setIntPro('');
 this.setWisPro('pro');
 this.setChaPro('pro');
 this.setSkills('2 from History, Insight, Medicine, Persuasion, or Religion');
 this.setSpellAbility('wis');
}
if(this.class.match(/Druid/))
{if(this.class.match(/Land/))
 {a='@2nd.CIRCLE of the Land</td></tr><tr><td>@2nd.BONUS CANTRIP learn 1 druid cantrip</td></tr><tr><td>@2nd.NATURAL RECOVERY short rest recover half slots</td></tr><tr><td>@3rdCIRCLE SPELLS when you  these levels you know these spells at no additional cost. ARCTIC @3rd Hold Person @3rd Spike Growth @5th Sleet Storm @5th Slow @7th Freedom of Movement @7th Ice Storm @9th Commune with Nature @9th Cone of Cold</td></tr><tr><td> COAST @3rd Mirror Image @3rd Misty Step @5th Water Breathing @5th Water Walk @7th Control Water @7th Freedom of Movement @9th Conjure Elemental @9th Scrying</td></tr><tr><td> DESERT @3rd Blur @3rd Silence @5th Create Food and Water @5th Protection from Energy @7th Blight @7th Hallucinatory Terrain @9th Insect Plague @9th Wall of Stone</td></tr><tr><td> Forest @3rd Barkskin @3rd Spider Climb @5th Call Lightning @5th Plant Growth @7th Divination @7th Freedom of Movement @9th Commune with Nature @9th Tree Stride</td></tr><tr><td> GRASSLAND @3rd Invisibility @3rd Pass without Trace @5th Daylight @5th Haste @7th Divination @7th Freedom of Movement @9th Dream @9th Insect Plague</td></tr><tr><td> MOUNTAIN @3rd Spider Climb @3rd Spike Growth @5th Lightning Bolt @5th Meld into Stone @7th Stone Shape @7th Stoneskin @9th Passwall @9th Wall of Stone</td></tr><tr><td> SWAMP @3rd Darkness @3rd Melf s Acid Arrow @5th Water Walk @5th Stinking Cloud @7th Freedom of Movement @7th Locate Creature @9th Insect Plague @9th Scrying</td></tr><tr><td> UNDERDARK @3rd Spider Climb @3rd Web @5th Gaseous Form @5th Stinking Cloud @7th Greater Invisibility @7th Stone Shape @9th Cloudkill @9th Insect Plague';
b='@6th.LAND S STRIDE ignore difficult terrain and magical plants, save at adv vs magical plants</td></tr><tr><td>@10th.NATURE S WARD immune elemental fey charm or fear, immune poison and disease</td></tr><tr><td>@14th.NATURE S SANCTUARY wis save or beast or plant attacks your ally instead of you';
c="";
dx="";
}
 if(this.class.match(/Desert/))
 {a="@2nd.CIRCLE of the Desert</td></tr><tr><td>@2nd <b onClick='Blur()'>Blur</b>, <b onClick='Silence()'>Silence</b></td></tr><tr><td>@2nd.CIRCLE FORMS wild shape CRlvl/3</td></tr><tr><td>@3rd <b onClick='CreateFoodWater()'>Create Food and Water</b>, <b onClick='ProtectionFromEnergy()'>Protection from Energy</b></td></tr><tr><td>@4th <b onClick='Blight()'>Blight</b>, <b onClick='HallucinatoryTerrain()'>Hallucinatory Terrain</b></td></tr><tr><td>@5th <b onClick='InsectPlague()'>Insect Plague</b>, <b onClick='WallOfStone()'>Wall of Stone</b>";
b="@6th.PRIMAL STRIKE wild attacks are magical</td></tr><tr><td>@10th.ELEMENTAL WILD SHAPE 2 wild shape uses, become elemental</td></tr><tr><td>@14th.THOUSAND FORMS Alter Self at will";
c="";
dx="";
}
 if(this.class.match(/Dreams/))
 {a="@2nd(Circle of Dreams)</td></tr><tr><td>@2nd(Balm of the Summer Court)druid level+d6 bonus 1ally 120ft spend 1/2 druid level or less in d6s+1hp for each die to heal ally, recharge long rest";
b="@6th(Hearth of Moonlight and Shadow)during rest 30ft radius sphere for party to rest in, Stealth+5, Perception+5, light in the sphere is not visible outside";
c="@10th(Hidden Paths)bonus teleport 60ft 1act also teleport 1ally within 30ft of you";
dx="@14th(Walker in Dreams)after short rest cast<b onClick='Dream()'>Dream</b> or<b onClick='Scrying()'>Scrying</b> or<b onClick='TeleportationCircle()'>Teleportation Circle</b> recharge long rest";
}
 if(this.class.match(/Moon/))
 {a='@2nd.CIRCLE of the Moon</td></tr><tr><td>@2nd.COMBAT WILD SHAPE wild as a bonus, 1 slot heal 1d8</td></tr><tr><td>@2nd.CIRCLE FORMS wild shape CRlvl/3';
b='@6th.PRIMAL STRIKE wild attacks are magical</td></tr><tr><td>@10th.ELEMENTAL WILD SHAPE 2 wild shape uses, become elemental</td></tr><tr><td>@14th.THOUSAND FORMS Alter Self at will';
c="";
dx="";
}
 if(this.class.match(/Shepherd/))
 {a="@2nd(Speech of the Woods)speak and write the Sylvan language, beasts know your speech and you know their sounds and convey what they have seen in the past</td></tr><tr><td>@2nd(Spirit Totem)60ft bonus move 60ft a spirit in 30ft aura 1min(Bear Spirit)temp hp 5+druid level to allies in aura and str at adv(Hawk Spirit)use reaction to let 1ally in aura attack at adv and all in aura Perception at adv(Unicorn Spirit)detect creatures in aura and heal+your druid level";
b="@6th(Mighty Summoner)all summoned creatures HP+2 x your druid level, creature s attacks become magical";
dx="@14th(Faithful Summons)at 0hp you automatically conjure a CR2 or lower animal at 9th slot level within 20ft no concentration 1hr, recharge long rest";
}
 this.setFeatures('</td></tr><tr><td>1st(Druidic Language)</td></tr><tr><td>@2nd(Wild Shape)(2/2)short rest, at 0hp revert to your original current hp @2nd(CR1/4)no flying swimming @4th(CR1/2)no flying @8th(CR1)</td></tr><tr><td>' + a + '</td></tr><tr><td>@4th<b><b>Ability Score Improvement</b></b> @4th @8th @12th @16th @19th</td></tr><tr><td>' + b + '</td></tr><tr><td>' + c + '</td></tr><tr><td>' + dx + '</td></tr><tr><td>@18th(Timeless Body)age 1 year for every 10</td></tr><tr><td>@18th(Beast Spells)cast spells in wild shape</td></tr><tr><td>@20th(Archdruid)unlimited wild shape');
 this.setEquipment('wooden shield or simple weapon.sciitar or simple melee weapon.leather armor.explorer pack.Druidic focus');
 this.setHitDice(this.level + 'd8+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('light non-metal armor, medium non-metal armor, non-metal shields, clubs, daggers, darts, javelins, maces, quarterstaffs, scimitars, sickles, slings, spears, an herbalism kit');
 this.setSaving('int+pro, wis+pro');
 this.setStrPro('');
 this.setDexPro('');
 this.setConPro('');
 this.setIntPro('pro');
 this.setWisPro('pro');
 this.setChaPro('');
 this.setSkills('2 from Arcana, Animal Handling, Insight, Medicine, Nature, Perception, Religion, or Survival');
 this.setSpellAbility('wis');
}
if(this.class.match(/Fighter/))
{if(this.class.match(/Archer/))
 {a='(Arcane Archer)</td></tr><tr><td>(Arcane Shot)Arcana+pro or Nature+pro and Prestidigitation or DruidCraft recharge shots after short rest @3rd 2 options @7th 3 options @10th 4 options @15th 5 options @18th 6 options(Arcane Shot Options)(Banishing Arrow)DC8+int+pro vsCha or hit target is banished to a harmless Feywild place uteoynt @18th the target takes 2d6 force dmg(Beguiling Arrow)+2d6 psychic damage and ally 30ft charms the target DC8+yourInt+pro vsWis tteoynt or ally attacks target(Enfeebling Arrow)+2d6 necro damage and DC8+int+pro vsCon or target does half damage tteoynt @18th+4d6 necro dmg(Grasping Arrow)+2d6 poison dmg, speed-10ft+2d6 slashing moving 1ft or more 1act to remove brambles Athletics vs your DC8+int+pro or 1min @18th +4d6 poison dmg(Piercing Arrow)DC8+int+pro vsDex or targets take invisible arrow dmg+1d6 dmg @18th+2d6dmg(Seeking Arrow)1 target seen in past 1min, DC8+int+pro vsDex for half damage arrow+1d6force and target location is still unknown @18th+2d6(Shadow Arrow)+2d6psychic damage and DC8+int+pro vsWis or blinded 5ft utsoynt @18th+4d6psychic';
b='@7th(Curving Shot)bonus reroll attack against another target within 60ft</td></tr><tr><td>@7th(Magic Arrow)arrow becomes magical to defeat non-magical resistance and immunity';
c='';
dx='@15th(EverReady Shot)if no shots, regain 1 arcane shot';
e='';
}
 if(this.class.match(/Battle/))
 {a='Battle Master</td></tr><tr><td>@3rd(Superiority Dice Value) @3rd d8 @10th d10 @18th d12</td></tr><tr><td>(Restoried Superiority Dice Per Rest) @3rd 4/4 @7th 5/5 @15th 6/6</td></tr><tr><td>(Known Maneuvers)using str or dex @3rd 3 @7th 5 @10th 7 @15th 9</td></tr><tr><td><h3>Maneuvers</h3>(Commander Strike)1SD, forgo attack, ally reacts dam+SD<br>(Disarming Attack)1SD, dam+SD, str save or drops item<br>(Distractive Strike)1SD, dam+SD, next ally attack at adv on target(<br>Evasive Footwork)1SD, when moving, AC+SD<br>(Feinting Attack)1SD, bonus, same turn next attack at adv, dam+SD<br>(Goading Attack)1SD, dam+SD, wis save or attacks allies at disadv other than you<br>(Lunging Attack)1SD, +5ft, dam+SD<br>(Maneuvering Attack)1SD, dam+SD, allies move half not opportunity attacked.<br>(Menacing Attack)1SD, dam+SD, wis save or frightened end your next turn<br>(Parry)1SD, when hit, your dam-SD-dexMod<br>(Precision Attack)1SD, attack+SD<br>(Pushing Attack)1SD, dam+SD, Large 10x10ft or less str save or pushed 15ft<br>(Rally)1SD, bonus ally temp hp+SD+chaMod<br>(Riposte)1SD, when missed, react melee attack, dam+SD<br>(Sweeping Attack)1SD, on hit, adjacent target dam is SD<br>(Trip Attack)1SD, on hit, Large 10x10ft or less str save or prone, dam+SD</td></tr><tr><td>@3rd(Student of War)1 Artisans Tools+pro';
b='@7th(Know Your Enemy)observe 1min, DM tells 2 stats of target';
c='';
dx='@15th(Relentless) @15th 1/1.roll init with 0SD is 1SD';
e='';
}
 if(this.class.match(/Cavalier/))
 {a='(Cavalier)</td></tr><tr><td>@3rd<b>Bonus Proficiency</b>1 from Animal Handling, History, Insight, Performance, or Persuasion or 1 Language</td></tr><tr><td>@3rd(Born to the Saddle)avoid falling from horse at adv or take no damage from a 10ft fall from horse</td></tr><tr><td>@3rd(Unwavering Mark)on target hit, the target attacks all but you at disadv and if dmg, you can bonus attack+half your extra fighter lvl damage uteoynt, str mod times, long rest';
b='@7th(Warding Maneuver)you or adjacent ally 1d8+AC, resistance if hit, con mod times, long rest';
c='@10th(Hold the Line)adjacent moving targets provoke opportunity attacks, on hit, target speed 0 theoit';
dx='@15th(Ferocious Charger)charge and hit target from at least 10ft and DC8+str+pro vsStr or target knocked prone 1/turn';
e='@18th(Vigilant Defender)use a reaction on each target turn to make an opportunity attack';
}
 if(this.class.match(/Samurai/))
 {a='(Samurai)</td></tr><tr><td>@3rd<b>Bonus Proficiency</b>1 from History, Insight, Performance, Persuasion, or 1 Language</td></tr><tr><td>(Fighting Spirit)bonus attack at adv tteoyt 3/encounter long rest and @3rd 5 temp hp @10th 10 temp hp @15th 15 temp';
b='@7th(Elegant Courtier)Persuasion+cha+wis+pro and wis+pro, or int+pro or cha+pro';
c='@10th(Tireless Spirit)if none, regain 1 Fighting Spirit';
dx='@15th(Rapid Strike)exchange attack at adv for a second normal attack';
e='@18th(Strength before Death)at 0hp, reaction take extra turn, long rest';
}
 if(this.class.match(/Champion/))
 {a='Champion</td></tr><tr><td>@3rdIMPROVED CRITICAL crit on 19 or 20';
b='@7th.REMARKABLE ATHLETE +half pro to non-pro str, dex, con, long jump ft+strMod';
c='@10th.1 ADDITIONAL FIGHTING STYLE';
dx='@15th.SUPERIOR CRITICAL crit on 18, 19 or 20';
e='@18th.SURVIVOR at half hp not 0hp, start each turn heal 5+conMod';
}
 if(this.class.match(/Knight/))
 {a='Eldritch Knight</td></tr><tr><td>@3rdweapon BOND ignore disarm, bonus summon, 2 bonds ok';
b='@7th.WAR MAGIC cast cantrip, bonus weapon attack';
c='@10th.ELDRITCH STRIKE on weapon hit, target saves at disadv vs your next spell';
dx='@15th.ARCANE CHARGE use action surge then teleport 30ft</td></tr><tr><td>Relentless</td></tr><tr><td>@(15th 1/1)roll init with 0SD is 1SD';
e='@18th.IMPROVED WAR MAGIC cast spell, make bonus weapon attack';
}
 this.setFeatures('</td></tr><tr><td>@1st(Fighting Style)</td></tr><tr><td>(Archery)ranged attack+2</td></tr><tr><td>or(Defense)while armored, AC+1</td></tr><tr><td>or(Dueling)1h melee dmg+2</td></tr><tr><td>or(Great Weapon Fighting)2h reroll on 1 or 2</td></tr><tr><td>or(Protection)with shield, adjacent allies attacked at disadv</td></tr><tr><td>or(Two Weapon Fighting)secondary damage+abiMod</td></tr><tr><td>@1st(Second Wind)@1st 1/1 short rest, bonus, heal 1d10+lvl</td></tr><tr><td>@2nd(Action Surge)@2nd 1/1 @17th 2/2</td></tr><tr><td>@3rd(Martial Archetype)' + a + '</td></tr><tr><td>@4th<b><b>Ability Score Improvement</b></b>@4th @6th @8th @12th @14th @16th @19th</td></tr><tr><td>@5th(Extra Attack)@5th 2, @10th 3, @20th 4</td></tr><tr><td>' + b + '</td></tr><tr><td>@9th(Indomitable) re-roll failed save, recharge long rest @9th 1, @13th 2, @17th 3</td></tr><tr><td>' + c + '</td></tr><tr><td>' + dx + '</td></tr><tr><td>' + e + '');
 this.setEquipment('chain mail or leather.longbow.20 arrows.martial weapon and shield or 2 martial weapons.light crossbow 20 bolts or 2 handaxes.dungeoneer pack or explorer pack');
 this.setHitDice(this.level + 'd10+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('all armor, shields, simple weapons, martial weapons');
 this.setSaving('str+pro, con+pro');
 this.setStrPro('pro');
 this.setDexPro('');
 this.setConPro('pro');
 this.setIntPro('');
 this.setWisPro('');
 this.setChaPro('');
 this.setSkills('2 from Acrobatics, Animal Handling, Insight, Intimidation, Perception, or Survival');
}
if(this.class.match(/Monk/))
{if(this.class.match(/Elements/))
 {a='Four Elements</td></tr><tr><td>@3rdDISCIPLE Of THE ELEMENTS when learning a new one, you can swap 1 you know with a new one @6th(1 more) @(11th 1 more) @(17th 1 more)</td></tr><tr><td>Monk lvl cost.5th-8th 3ki.9th-12th 4ki.13th-16th 5ki.17th-20th 6ki</td></tr><tr><td>@3rd ELEMENTAL ATTUNEMENT shower of sparks, puff of air or light or snuff torch, or chill or warm 1lb objects or mist, fire, earth 1ft cube shaped into crude form @3rd FANGS OF THE FIRE SNAKE 1Ki, unarmed ranged 10ft fire dam+1d10/1Ki @3rd FIST OF UNBROKEN AIR 1act , 2Ki, 30ft, str save for half 3d10bludge+1d10/1Ki and not pushed 20ft prone @3rd RUSH OF THE GALE SPIRITS 2Ki Gust of Wind @3rd SHAPE OF THE FLOWING RIVER 1Ki ice to water or water to ice 30x120ft @3rd SWEEPING CINDER STRIKE 2Ki Burning Hands @3rd WATER WHIP 1 action @Ki 30ft dex save for half 3d10bludge+1d10/1Ki and not prone or pulled 25ft';
b='@6th CLENCH OF THE NORTH WIND 6Ki Cone of Cold @6th GONG OF THE SUMMIT 3Ki Shatter @11th ETERNAL MOUNTAIN DEFENSE 5Ki, self, Stoneskin';
c='@11th FLAMES OF THE PHOENIX 4Ki Fireball @11th MIST STANCE 4Ki, self, Gaseous Form @11th RIDE THE WIND 4Ki, self, Fly';
dx='@17th BREATH OF WINTER 6Ki Cone of Cold @17th RIVER OF HUNGRY FLAME 5Ki Wall of Fire @17th WAVE OF ROLLING EARTH 6Ki Wall of Stone';
}
 if(this.class.match(/Cobalt/))
 {a='(Cobalt Soul)</td></tr><tr><td>@3rd(Mystical Erudition)target is hit, spend 1 Ki Point, con save or you learn creature type or ac or senses or highest or lowest save modifier or vulnerabilities or resistance or immunities @6th learn 2 aspects @11th 3 @17th 4';
b='@6th(Extort Truth)target is hit twice, spend 2 Ki Points, the target knows it can not lie for 1min</td></tr><tr><td>@6th(Mind of Mercury)take a number int mod of reactions per trigger at cost of 1 Ki Point after the first reaction, spend 1 Ki Point,Investigation at adv';
c='@11th(Preternatural Counter)attacker misses you, you use your reaction to attack';
dx='@17th(Debilitating Barrage)hit target with 3 or more attacks, spend 3 ki points, target attacks at disadv uteoynt and con save or vulnerable to a dmg type of your choice 1min, unless resistant or immune which is revealed when you choose';
}
 if(this.class.match(/Drunken/))
 {a='(Drunken Master)</td></tr><tr><td>@3rd(Bonus Proficiencies) Performance+pro and Brewer s Supplies+pro</td></tr><tr><td>@3rd(Drunken Technique)Flurry of Blows then bonus Disengage, walk speed+10ft tteoyct';
b='@6th(Tipsy Sway)(Leap to Your Feet)prone spend 5ft not half movement speed(Redirect Attack)1 Ki reaction target hits its ally';
c='@11th(Drunkard s Luck)2 ki remove disadv from your roll';
dx='@17th(Intoxicated Frenzy)make 5 Flurry of Blow attacks each to a different target';
}
 if(this.class.match(/Kensei/))
 {a='(Kensei)Caligraphy+pro or Painting+pro</td></tr><tr><td>@3rd(Path of the Kensei)choose 2, 1 melee weapon+pro and one ranged weapon+pro as kensei monk weapons, but not heavy or special weapons @6th one more weapon @11th one more weapon @17th one more weapon(Agile Parry)unarmed strike as part of the attack with a kensei monk weapon gives you AC+2(Kensei s Shot)bonus, kensei ranged weapon+1d4damage uteoyt';
b='@6th(One with the Blade)1Ki kensei weapon becomes(Magic)al versus immunity and resistance to non-magical weapons(Deft Strike)1Ki kensei weapon does+extra Martial Arts die damage 1/turn';
c='@11th(Sharpen the Blade)attack and damage rolls+extra 1 to 3Ki';
dx='@17th(Unerring Accuracy)miss with kensei weapon and reroll 1/turn';
}
 if(this.class.match(/Sun Soul/))
 {a='@3rd(Radiant Sun Bolt)+dex+pro 30ft 1d4 radiant dmg, increases with Martial Arts dice, 1Ki bonus attack';
b='@6th(Searing Arc Strike)2Ki Burning Hands spell as bonus, spend more Ki to increase slot level of Burning Hands, max Ki spent is 1/2 your monk lvl';
c='@11th(Searing Sunburst)150ft, targets in 20ft radius DC8+dex+pro vsCon or 2d6 radiant dmg, total cover targets auto save, spend Ki to increase damage +2d6 to a maximum spent 3Ki';
dx='@17th(Sun Shield)30ft aura of light or extinquish light, if hit, reaction deal 5+wismod radiant dmg';
}
 if(this.class.match(/Open/))
 {a='Open Hand</td></tr><tr><td>@3rdOPEN HAND TECHNIQUE on hit, dex save or prone or str save or pushed 15ft or no reactions end your next turn';
b='@6th.WHOLENESS OF BODY(1/1)long rest, 1act , heal 3 x lvl';
c='@11th.TRANQUILITY(1/1)long rest, Sanctuary';
dx='@17th.QUIVERING PALM on unarmed hit, 3Ki, after days are lvl, con save for 10d10 necrotic or 0hp, or end harmlessly';
}
 if(this.class.match(/Shadow/))
 {a='Shadow</td></tr><tr><td>@3rdSHADOW ARTS 2Ki Darkness or Darkvision or Pass without Trace or Silence, learn Minor Illusion';
b='@6th.SHADOW STEP on 1st melee attack, in dim light or darkness, teleport 60ft';
c='@11th.CLOAK OF SHADOWS 1act , in dim or darkness, invisible';
dx='@17th.OPPORTUNIST when adjacent target hit by ally, react 1 melee attack';
}
 this.setFeatures('</td></tr><tr><td>@1st UNARMORED DEFENSE unarmored no shield, AC10+dexMod+wisMod</td></tr><tr><td>@1st MARTIAL ARTS DAMAGE DICE unnarmed+bonus unarmed or simple weapon+bonus unarmed+dexMod or strMod weapon dam or 1d4 dam @1st 1d4 @5th 1d6 @11th 1d8 @17th 1d10</td></tr><tr><td>@2nd(KI POWERS save vs DC8wis+pro</td></tr><tr><td>KI POINTS are recovered after a short 4 hour or long 8 hour rest</td></tr><tr><td>@2nd(FLURRY OF BLOWS 1Ki, 1 more bonus narmed</td></tr><tr><td>@2nd(PATIENT DEFENSE 1Ki, Dodge is bonus</td></tr><tr><td>@2nd(STEP OF THE WIND 1Ki, Disengage or Dash as bonus, jumpft x 2</td></tr><tr><td>@2nd(UNARMORED MOVEMENT when unarmored no shield @2nd(+10ft @6th +15ft @9th move across walls and water without falling @10th +20ft @14th +25ft @18th +30ft</td></tr><tr><td>@3rd MONASTIC TRADITION Way of the' + a + '</td></tr><tr><td>@3rd DEFLECT MISSILES react, ranged hit dam-1d10+dexMod, at 0 dam catch and bonus ranged 20/60ft attack+pro</td></tr><tr><td>@4th SLOW FALL fall dmg-5 x lvl</td></tr><tr><td><b>Ability Score Improvement</b> @4th @8th @12th @16th @19th</td></tr><tr><td>@5th EXTRA ATTACK</td></tr><tr><td>@5th STUNNING STRIKE 1Ki, con save or stunned end your next turn</td></tr><tr><td>@6th KI-EMPOWERED STRIKES unarmed is magical</td></tr><tr><td>' + b + '</td></tr><tr><td>@7th EVASION dex for half is no damage</td></tr><tr><td>@7th STILLNESS OF MIND 1act , self, end 1 charm or fear</td></tr><tr><td>@10th.PURITY OF BODY immune disease poison</td></tr><tr><td>' + c + '</td></tr><tr><td>@13th TONGUE OF THE SUN AND MOON understand all languages, targets understand yours</td></tr><tr><td>@14th DIAMOND SOUL all saves+pro, 1Ki reroll 1 save</td></tr><tr><td>@15th TIMELESS BODY immune magical aging, no age penalties, no need food water</td></tr><tr><td>' + dx + '</td></tr><tr><td>@18th.EMPTY BODY 4Ki invisible 10/10 turns , resist all but force, 8Ki Astral Projection you and 1 ally</td></tr><tr><td>@20th PERFECT SELF roll init 0Ki is 4Ki');
 this.setEquipment('shortsword or simple weapon.dungeoneer pack or explorer pack.10/10 darts');
 this.setHitDice(this.level + 'd8+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('simple weapons, shortswords');
 this.setSaving('str+pro, dex+pro');
 this.setStrPro('pro');
 this.setDexPro('pro');
 this.setConPro('');
 this.setIntPro('');
 this.setWisPro('');
 this.setChaPro('');
 this.setSkills('2 from Acrobatics, Athletics, History, Insight, Religion, or Stealth');
 this.setSpellAbility('wis');
}
if(this.class.match(/Paladin/))
{if(this.class.match(/Ancients/))
 {a='@3rdNATURE S WRATH 1CD, 1act , 10ft, str or dex save end of each of its turns or restrained</td></tr><tr><td>@3rdTURN THE FAITHLESS 1CD, fey or fiend 30ft wis save or Dash true form revealed</td></tr><tr><td>@3rd[x]Ensnaring Strike @3rd[x]Speak with Animals';
b='@5th[x]Moonbeam @5th[x]Misty Step';
c='@7th.AURA OF WARDING 10ft you and allies resist spell dam @7th(10ft) @(18th 30ft)</td></tr><tr><td>@9th[x]Plant Growth @9th[x]Protection from Energy';
dx='@13th[x]Ice Storm @13th[x]Stoneskin';
e='@15th.UNDYING SENTINEL(1/1)long rest, 0hp is 1hp, no aging penalties, immune magical aging</td></tr><tr><td>@17th[x]Commune with Nature @17th[x]Tree Stride</td></tr><tr><td>@20th.ELDER CHAMPION(1/1)long rest, 10/10 turns , heal 10hp/turn, spells 1 action is bonus, 10ft targets save at disadv vs your paladin spells and channel divinity';
}
 if(this.class.match(/Conquest/))
 {a="@3rd(Oath Spells)</td></tr><tr><td>@3rd(Channel Divinity)";
b='';
c='@7th(Aura of Conquest)';
dx='';
e='@15th(Scornful Rebuke)</td></tr><tr><td>18th(Aura of Conquest)</td></tr><tr><td>@20th(Invincible Conqueror)';
}
 if(this.class.match(/Crown/))
 {a="@3rd(Channel Divinity: Champion Challenge) 1CD,chosen targets within 30ft save vsWis or targets must stay within 30ft of you @3rd(Channel Divinity: Turn the Tide) 1CD,1bonus,hearing allies with half or fewer HP within 30ft heal 1d6+chaMod</td></tr><tr><td>@3rd(Oath of the Crown Spells)<b onClick='Command()'>Command</b><b onClick='CompelledDuel()'>Compelled Duel</b>";
b="@5th(Oath of the Crown Spells)<b onClick='WardingBond()'>Warding Bond</b><b onClick='ZoneOfTruth()'>Zone of Truth</b>";
c="@7th(Divine Allegiance) 1 reaction,you take the damage an adjacent ally would take";
dx="@13th(Oath of the Crown Spells)<b onClick='Banishment()'>Banishment</b><b onClick='GuardianOfFaith()'>Guardian of Faith</b>";
e="@15th(Unyielding Spirit) save vs Paralysis or Stun at adv</td></tr><tr><td>@17th(Oath of the Crown Spells)<b onClick='CircleOfPower()'>Circle of Power</b><b onClick='Geas()'>Geas</b></td></tr><tr><td>@20th(Exalted Champion) 1 action, resist bludgeon, piercing, slashing dmg from non-magical weapons, allies within 30ft save vs Death at adv, you and allies within 30ft wis save at adv, recharge on long rest";
}
 if(this.class.match(/Devotion/))
 {a="@3rdSACRED weapon 1act , 1CD, 10/10 turns , magical attack+chaMod, light 20ft rad+dim light 20ft rad</td></tr><tr><td>@3rd(Turn the Unholy)1CD, 30ft undead wis save or Dash 30ft away no reactions, 10/10 turns or damaged</td></tr><tr><td>@3rd[x]Protection from Evil and Good @3rd<b onClick='Sanctuary()'>Sanctuary</b>";
b="@5th<b onClick='LesserRestoration()'>Lesser Restoration</b> @5th[x]Zone of Truth";
c="@7th.AURA OF DEVOTION @(10th 10ft) @(18th 30ft)</td></tr><tr><td>@9th<b onClick='BeaconOfHope()'>Beacon of Hope</b> @9th[x]Dispel Magic";
dx="@13th[x]Freedom of Movement @13th<b onClick='GuardianOfFaith()'>Guardian of Faith</b>";
e='@15th.PURITY OF SPIRIT permanent Protection from Evil and Good</td></tr><tr><td>@17th[x]Commune @17th[x]Flame Strike</td></tr><tr><td>@20th.HOLY NIMBUS(1/1)long rest, 30ft radius light+30ft radius dim light targets take 10 dam if starting turn in light save at adv vs fiend and undead spells)';
}
 if(this.class.match(/Vengence/))
 {a='@3rdABJURE ENEMY 1act , 1CD, 60ft wis save for half speed or frightened speed 0, fiends and undead at disadv</td></tr><tr><td>@3rdVOW OF ENMITY bonus, 1 target, 10ft, 1CD, attack at adv, 10/10 turns</td></tr><tr><td>@3rd[x]Bane @3rd[x]Hunter s Mark';
b='@5th[x]Hold Person @5th[x]Misty Step';
c='@7th.RELENTLESS AVENGER while opportunity attacking, move half speed, immune opportunity attacked</td></tr><tr><td>@9th[x]Haste @9th[x]Protection from Energy';
dx="@13th[x]Banishment @13th<b onClick='DimensionDoor()'>Dimension Door</b>";
e='@15th.SOUL OF VENGEANCE while Vow of Enmity, react melee attack</td></tr><tr><td>@17th[x]Hold Monster @17th[x]Scrying</td></tr><tr><td>@20th.AVENGING ANGEL(1/1)1hr , fly at speed 60ft, 30ft radius aura wis save or frightened attacked at adv';
}
 this.setFeatures('</td></tr><tr><td>@1st(Divine Sense) 60ft aura detect celestial, fiend, undead, Hallow spell desecrated consecrated places or objects, til teoynt,(1+chaMod/1+chaMod)long rest</td></tr><tr><td>@1st(Lay on Hands) touch less undead and constructs heal from a pool of 5xLvl points(6/6)long rest, 5 pool points/cure 1 disease or neutralize 1 poison</td></tr><tr><td>@2nd(Fighting Style)(Defense)while armored AC+1 or(Dueling)1h weapon damage+2 or(Great Weapon Fighting)re-roll damage on 1 or 2 or(Protection)with shield adjacent allies attacked at disadv</td></tr><tr><td>@2nd(Divine Smite) after melee hit spend 1 slot damage+2d8 radia+1d8/slot max 5d8 +1d8 if fiend or undead @(11th +1d8radiant)</td></tr><tr><td>@3rd(Divine Health) immune disease</td></tr><tr><td>@3rd <h3>Channel Divinity</h3>(1/1)short rest</td></tr><tr><td>' + a + '</td></tr><tr><td>@4th<b><b>Ability Score Improvement</b></b> @4th @8th @12th @16th @19th</td></tr><tr><td>@5th(Extra Attack)</td></tr><tr><td>' + b + '</td></tr><tr><td>@6th(Aura of Protection)you and allies save+chaMod @6th 10ft @18th 30ft</td></tr><tr><td>' + c + '</td></tr><tr><td>@10th(Aura of Courage) you and allies immune fright @10th 10ft @18th 30ft</td></tr><tr><td>' + dx + '</td></tr><tr><td>@14th(Cleansing Touch)1 or chaMod/1 or chaMod long rest end 1 spell on you or ally</td></tr><tr><td>' + E);
 this.setEquipment('martial weapon and shield or 2 martial weapons.5/5 javelins or simple melee weapon.priest pack or explorer pack.chain mail.holy symbol');
 this.setHitDice(this.level + 'd10+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('all armor, shields, and all weapons');
 this.setSaving('wis+pro, cha+pro');
 this.setStrPro('');
 this.setDexPro('');
 this.setConPro('');
 this.setIntPro('');
 this.setWisPro('pro');
 this.setChaPro('pro');
 this.setSkills('2 from Athletics, Insight, Intimidation, Medicine, Persuasion, or Religion');
 this.setSpellAbility('cha');
}
if(this.class.match(/Beast/))
{a='@3rdRANGER S COMPANION CR1/4 medium or less hawk, mastiff, panther, ac+ranger pro, attacks+ranger pro, damage+ranger pro, saves, skill checks+ranger pro, hp max is beast s or your lvl x 4, command as bonus on your turn protects incapacitated you';
 b='@7th.EXCEPTIONAL TRAINING bonus command Companion to Dash, Disengage, Dodge or Help';
 c='@11th.BESTIAL FURY Companion makes 2 attacks';
 D='@15th.SHARE SPELLS 30ft self spells also affect Companion'
}
if(this.class.match(/Ranger/))
{if(this.class.match(/Hunter/))
 {a='@3rdHUNTER S PREY choose one. COLOSSUS SLAYER 1/turn hp less max+1d8dam. GIANT KILLER visible large+melee attacks you, react attack. HORDE BREAKER 1/turn melee attack, bonus attack adjacent';
b='@7th.DEFENSIVE TACTICS choose one. ESCAPE THE HORDE opp attacked at disadv. MULTIATTACK when hit, ac+4 vs attacker. STEEL WILL save at adv vs fear';
c='@11thVOLLEY range attack all 10ft @11th.WHIRLWIND ATTACK melee attack all adjacent';
dx='@15th.SUPERIOR HUNTER S DEFENSE choose one. EVASION dex save for half is no damage. STAND AGAINST THE TIDE when missed,react,target same attacks target. UNCANNY DODGE react take half dam'
}
 if(this.class.match(/Monster Slayer/))
 {a="@3rd(Monster Slayer Magic)<b onClick='ProtectionFromEvilOrGood()'>Protection from Evil or Good</b></td></tr><tr><td>@3rd(Hunter s Sense)1act , 60ft, 1target, learn immunities, resistances, vulnerabilities, race unless hidden from divination magic</td></tr><tr><td>@3rd(Slayer s Prey)bonus, 1target, 60ft, your 1st attack each turn extra 1d6 dmg";
b="@5th(Monster Slayer Magic)<b onClick='ZoneOfTruth()'>Zone of Truth</b></td></tr><tr><td>@7th(Supernatural Defense) you save+1d6 versus your Slayer s Prey@9th(Monster Slayer Magic)<b onClick='MagicCircle()'>Magic Circle</b></td></tr><tr><td>";
c="@11th(Magic-User s Nemesis)thwart spell or thwart teleport within 60ft DC8+your spell ability+pro vsWis, recharge short rest";
dx="@13th(Monster Slayer Magic)<b onClick='Banishment()'>Banishment</b></td></tr><tr><td>@15th(Slayer s Counter)1react, Slayer s Prey forces your saving throw, make attack before making saving throw, a hit is also a save success"
}
 this.setFeatures('</td></tr><tr><td>@1st(Favored Enemy) Survival at adv to track, Intelligence at adv to know, speak the language @1st 1 enemy @6th 1 more enemy @14th 1 more enemy</td></tr><tr><td>@1st(Natural Explorer) ignore difficult terrain, always alert, alone sealth normal pace, forage x 2, know number, size, time of tracked @1st 1 terrain @6th 1 more terrain @10th 1 more terrain</td></tr><tr><td>@2nd(Fighting Style)(Archery)ranged+2 or(Defense)armored,AC+1 or(Dueling)1h dam+2 or(Two-weapon Fighting)secondary+abiMod</td></tr><tr><td>' + a + '</td></tr><tr><td>@4th<b><b>Ability Score Improvement</b></b> @4th @8th @12th @16th @19th</td></tr><tr><td>@5th(Extra Attack)</td></tr><tr><td>' + b + '</td></tr><tr><td>@8th(Land s Stride)difficult terrain no penalty,save at adv vs plant spells</td></tr><tr><td>@10th(Primeval Awareness)1act , 1slot, 10/10 turns , know beings in area 1mi, favored terrain 6mi</td></tr><tr><td>@10th(Hide in Plain Sight)10/10 turns camo, unmoving,stealth+10</td></tr><tr><td>' + c + '</td></tr><tr><td>@14th(Vanish)Hide as bonus, not nonmagically tracked</td></tr><tr><td>' + dx + '</td></tr><tr><td>@18th(Feral Senses)invisible 30ft no advantage vs you</td></tr><tr><td>@20th(Foe Slayer)1/turn dam+wisMod');
 this.setEquipment('scale mail or leather armor.2 shortswords or 2 simple melee weapons.dungeoneer pack or explorer pack.longbow 20 arrows');
 this.setHitDice(this.level + 'd10+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('light armor, medium armor, shields, all weapons');
 this.setSaving('str+pro, dex+pro');
 this.setStrPro('pro');
 this.setDexPro('pro');
 this.setConPro('');
 this.setIntPro('');
 this.setWisPro('');
 this.setChaPro('');
 this.setSkills('2 from Animal Handling, Athletics, Insight, Investigation, Nature, Perception, Stealth, or Survival');
 this.setSpellAbility('wis');
}
if(this.class.match(/Rogue/))
{if(this.class.match(/Arcane/))
 {a='@3rd(Mage Hand Legerdemain)30ft stow retreive object or pick locks or disarm traps';
b='@9th(Magical Ambush)when hidden, target saves at disadv vs your spell';
c='@13th(Versatile Trickster)bonus, 30ft attack at adv target';
dx='@17th(Spell Thief)(1/1)react, spell dc vs your spell dc or negate and steal spell cast with your slots for 8hrss';
}
 if(this.class.match(/Assassin/))
 {a='@3rd(BONUS PROFICIENCIES)Disguise Poisoner Kit+pro</td></tr><tr><td>@3rd(ASSASSINATE)1st attack lower init targets at adv and crit';
b='@9th(INFILTRATION EXPERT)7 days, 25gp, pose as wealthy merchant, etc'
c='@13th(IMPOSTER)3hr study, copy speech, writing behavior roll Deception to avoid detection';
dx='@17th(DEATH STRIKE)surprised target lower init, con save or crit dam x 2';
}
 if(this.class.match(/Mastermind/))
 {a='@3rdMASTER OF INTRIGUE Disguise Forgery Kit and 1 from Cards, Darts, Dice, or Dragonchess+pro, 2 languages no accent</td></tr><tr><td>@3rdMASTER OF TACTICS Help action as bonus target 30ft';
b='@9th.INSIGHTFUL MANIPULATOR 1min, DM tells superior, equal, inferior 2 stats of target';
c='@13th.MISDIRECTION when melee attacked, react, target attacks another adjacent target';
dx='@17th.SOUL OF DECEIT immune telepathy and truth magic, Deception vs Insight to plant false info';
}
 if(this.class.match(/Phantom/))
 {a="@3rd(Whispers of the Dead)any skill+pro or tools+pro 1 time per short 4 hour rest</td></tr><tr><td>@3rd(Wails from the Grave)sneak atk dmg target a second enemy within 30ft, roll half sneak atk dice for necrotic dmg, use your level pro times, recharge after long 8 hour rest";
b="@9th(Tokens of the Departed)reaction when enemy dies 30ft from you, create your level pro in soul trinkets, expend a soul trinket to adv vs death save throw and con saves, or expend to use Wails from the Grave at no cost, or as action expend one and the spirit will answer truthfully or not truthfully one question ";
c="@13th(Ghost Walk)bonus act become a spectre, hover and atk rolls are at disadv against you, fly speed 10ft, move through people and objects but take 1d10 force dmg if inside at end or turn, 10 min or end as bonus action, recharge long rest ";
dx="@17th(Death Knell)deal necrotic to both sneak attack enemy and adjacent enemy within 30ft, after long rest, 1 soul trinket appears";
}
 if(this.class.match(/Swashbuckler/))
 {a='@3rdFANCY FOOTWORK Disengage as bonus even after 2 attacks no opportunity attacks by target</td></tr><tr><td>@3rdRAKISH AUDACITY init+chaMod no adv required if target has no adjacent allies';
b='@9th.PANACHE Persuasion vs Insight of same language target/target attacks at disadv unless you or target is charmed does not attack 10/10 turns unless attackd';
c='@13th.ELEGANT MANEUVER bonus Acrobatics or Athletics at adv';
dx='@17th.MASTER DUELIST(1/1)short rest reroll attack at adv if fail';
}
 if(this.class.match(/Thief/))
 {a="@3rd(Fast Hands)spend Cunning Action to Sleight or Thieves Tools to disarm trap, open lock, or use object</td></tr><tr><td>@3rd(Second Story Work)climb at normal speed, jump ft+dexMod";
b="@9th(Supreme Sneak)when move half, Stealth at adv";
c="@13th(Use Magic Device)use any class item";
dx="@17th(Thief s Reflexes)1st turn at init, 2nd(turn at init-10 1st round";
}
 this.setFeatures('</td></tr><tr><td>@1st(Expertise)Thieves Tools+exp and 1 skill+exp or 2 skills+exp @6th 2 more skills+exp</td></tr><tr><td>@1st(Sneak Attack)1/turn when attacking at adv or ally adjacent to target extra damage @1st +1d6 @3rd +2d6 @5th +3d6 @7th +4d6 @8th +5d6</td></tr><tr><td>@1st(Thieves Cant)gestures</td></tr><tr><td>@2nd(Cunning Action)action as bonus Dash, Disengage, or Hide after attack, under half cover, Stealth vs Perception or target can not attack</td></tr><tr><td>' + a + '</td></tr><tr><td>@4th<b><b>Ability Score Improvement</b></b>@4th @6th @8th @12th @16th @19th</td></tr><tr><td>@5th(Uncanny Dodge)1 reaction per turn for half damage</td></tr><tr><td>@7th(Evasion)when attacked, dex save for half is no damage</td></tr><tr><td>' + b + '</td></tr><tr><td>@11th(Reliable Talent)abi+pro roll of 9 or less is 10</td></tr><tr><td>' + c + '</td></tr><tr><td>@14th(Blindsense)know location of invisibles 10ft</td></tr><tr><td>@15th(Slippery Mind)wis+pro</td></tr><tr><td>' + dx + '</td></tr><tr><td>@18th(Elusive)not attacked at adv less incapacitated</td></tr><tr><td>@20th(Stroke of Luck)recharge short rest, roll failure is success');
 this.setEquipment('rapier or shortsword.shortbow 20 arrows or shortsword.burglar pack or dungeoneer pack or explorer pack.leather armor.2 daggers.thieves tools');
 this.setHitDice(this.level + 'd8+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('daggers, darts, light crossbows, quarterstaffs, and slings');
 this.setSaving('con+pro, cha+pro');
 this.setStrPro('');
 this.setDexPro('');
 this.setConPro('pro');
 this.setIntPro('');
 this.setWisPro('');
 this.setChaPro('pro');
 this.setSkills('2 from Arcana, Deception, Insight, Intimidation, Persuasion, or Religion');
 this.setSpellAbility('int');
}
if(this.class.match(/Sorcerer/))
{if(this.class.match(/Draconic/))
 {a='@1st.DRAGON ANCESTOR speak Draconic cha+exp speaking to dragons. Black(Acid). Blue(Lightning). Brass(Fire). Bronze(Lightning). Copper(Acid). Gold(Fire). Green(Poison). Red(Fire). Silver(Cold). White(Cold)</td></tr><tr><td>@1st.DRACONIC RESILIENCE +1hp/lvl-up, ac13+dexMod';
b='@6th.ELEMENTAL AFFINITY dragon ancestry dam+chaMod, 1SP resist this dam 1hr';
c='@14th.DRAGON WINGS fly speed is walk speed, summon dismiss wings as bonus';
dx='@18th.DRACONIC PRESENCE 5SP, 60ft, con 10/10 turns , wis save or charmed or frightened';
}
 if(this.class.match(/Sorcerer, Fire/))
 {a='@1st.FLAME AFFINITY bonus light or douse small flame 30ft/know Produce Flame</td></tr><tr><td>@1st.HEART OF FIRE change your spell damage to fire damage/resist fire';
b='@6th.HEART OF BATTLE +1d6fire/1SP up to proMod/re-roll fire damage on 1';
c='@14th.SPONTANEOUS COMBUSTION(chaMod/chaMod)long rest, on being hit, 1 reaction melee attackr takes 2d6+chaMod fire damage';
dx='@18th.IGNITED SPIRIT(1/1)long rest 30ft chaMod rnds you and allies save at adv vs spells/+1d8 extra damage';
}
 if(this.class.match(/Wild/))
 {a='@1st(Sorcerous Origins)Wild Magic</td></tr><tr><td>@1st(Wild Surge)Players Handbook pg104</td></tr><tr><td>@1st(Tides of Chaos)roll at adv, recharge long rest';
b='@6th(Bend Luck)2SP, react,+or -1d4 on any ally or target roll';
c='@14th(Controlled Chaos)roll twice on wild surge table and choose 1 result';
dx='@18th(Spell Bombardment)1/turn roll again on any max roll and add to the dmg';
}
 if(this.class.match(/Storm/))
 {a='@1st.WIND SPEAKER you know the Primordial language</td></tr><tr><td>@1st.TEMPESTUOUS MAGIC fly up to 10ft not opportunity attackd';
b='@6th.HEART OF THE STORM resist lightning thunder/when casting lightning or thunder, 10ft radius half your lvl damage</td></tr><tr><td>@6th.STORM GUIDE stop rain 20ft rad/direct wind 100ft rad/etc';
c='@14th.STORM S FURY melee attackd, react your lvl in lightning damage and str save vs spell dc or pushed up to 20ft';
dx='@18th.WIND SOUL(1/1)long rest/immune lightning and thunder/ fly 60ft/reduce fly 30ft and 3+chaMod allies can fly 30ft';
}
 this.setFeatures('</td></tr><tr><td>' + a + '</td></tr><tr><td>@2nd(Font of Magic)exchange spell slots and Sorcery Points</td></tr><tr><td>@2nd(Spell Points) @1st 0 @2nd 2 @3rd 3 @4th 4 @5th 5 @6th 6 @7th 7 @8th 8 @9th 9 @10th 10 @11th 11 @12th12 @13th 13 @14th 14 @15th 15 @16th 16 @17th 17 @18th 18 @19th 19 @20th 20</td></tr><tr><td>@3rd(Metamagic) @3rd 2 @10th 3 @17th 4(Careful Spell)1SP, select chaMod targets in spell area to be immune(Distant Spell)1SP, range x 2, touch is 30ft(Empowered Spell)1SP, discard damage and reroll damage chaMod times, in addition to other Metamagic(Extend Spell)1SP, duration x 2, max 24 hrs(Heightened Spell)3SP, target rolls 1st save at disadv(Quickened Spell)1SP, 1 act is 1 bonus cast(Subtile Spell)1SP, no verbal somatic cast needed(Twinned Spell)SP is spell lvl, non self spell, target another</td></tr><tr><td>@4th<b><b>Ability Score Improvement</b></b> @4th @8th @12th @16th @19th</td></tr><tr><td>' + b + '</td></tr><tr><td>' + c + '</td></tr><tr><td>' + dx + '</td></tr><tr><td>@20th(Sorcerous Restoration)0SP is 4SP, recharge short rest');
 this.setEquipment('light crossbow 20 bolts or arcane focus.dungeoneer pack or explorer pack.2 daggers');
 this.setHitDice(this.level + 'd6+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('Draconic, daggers, darts, light crossbows, quarterstaffs, and slings');
 this.setSaving('con+pro, cha+pro');
 this.setStrPro('');
 this.setDexPro('');
 this.setConPro('pro');
 this.setIntPro('');
 this.setWisPro('');
 this.setChaPro('pro');
 this.setSkills('2 from Arcana, Deception, Insight, Intimidation, Persuasion, or Religion');
 this.setSpellAbility('cha');
}

if(this.class.match(/Warlock/))
{if(this.class.match(/Archfey/))
 {a="@1st<b onClick='FaerieFire()'>Faerie Fire</b>,<b onClick='Sleep()'>Sleep</b></td></tr><tr><td>@2nd<b onClick='CalmEmotions()'>Calm Emotions</b>,<b onClick='PhantasmalForce()'>Phantasmal Force</b></td></tr><tr><td>@3rd<b onClick='Blink()'>Blink</b>,<b onClick='PlantGrowth()'>Plant Growth</b></td></tr><tr><td>@4th<b onClick='DominateBeast()'>Dominate Beast</b>,<b onClick='GreaterInvisibility()'>Greater Invisibility</b></td></tr><tr><td>@5th<b onClick='DominatePerson()'>Dominate Person</b>,<b onClick='Seeming()'>Seeming<p>FEY PRESENCE 10ft radius wis save or charmed or frightened til end your next turn";
b='@6th LevelMISTY ESCAPE(1/1)short rest, take dam, react teleport 60ft invisible til start your next turn or you attack';
c='@10th LevelBEGUILING DEFENSE immune charm, react wis save or charm charmers 10/10 turns or damaged';
dx='@14th LevelDARK DELIRIUM(1/1)short rest, 60ft, wis save charmed or frightened con 10/10 turns or damaged';
}
 if(this.class.match(/Fiend/))
 {a="@1st<b onClick='BurningHands()'>Burning Hands</b>,<b onClick='Command()'>Command</b></td></tr><tr><td>@2nd<b onClick='BlindnessDeafness()'>BlindnessDeafness</b>,<b onClick='ScorchingRay()'>Scorching Ray</b></td></tr><tr><td>@3rd<b onClick='Fireball()'>Fireball</b>,<b onClick='StinkingCloud()'>Stinking Cloud</b></td></tr><tr><td>@4th<b onClick='FireShield()'>Fire Shield</b> ,<b onClick='WallOfFire()'>Wall of Fire</b></td></tr><tr><td>@5th<b onClick='FlameStrike()'>Flame Strike</b>,<b onClick='Hallow()'>Hallow</b><p>@1st(Dark One s Blessing)kill target gain temp hp+chaMod+lvl";
b='@6th LevelDARK ONE S OWN LUCK(1/1)long rest, abi check or save+1d10';
c='@10th LevelFIENDISH RESILIENCE(1/1)resist 1 damage type till next long rest';
dx='@14th LevelHURL THROUGH HELL(1/1)long rest, on hit, teleport non-fiend target through lower planes and back 10d10 psychic';
}
 if(this.class.match(/Great/))
 {a="@1st<b onClick='DissonantWhispers()'>Dissonant Whispers</b>,<b onClick='TashasHideousLaughter()'>Tasha s Hideous Laughter</b></td></tr><tr><td>@2nd<b onClick='DetectThoughts()'>Detect Thoughts</b>,<b onClick='PhantasmalForce()'>Phantasmal Force</b></td></tr><tr><td>@3rd<b onClick='Clairvoyance()'>Clairvoyance</b>,<b onClick='Sending()'>Sending</b></td></tr><tr><td>@4th<b onClick='DominateBeast()'>Dominate Beast</b>, @4th<b onClick='EvardsBlackTentacles()'>Evard s Black Tentacles</b></td></tr><tr><td>@5th<b onClick='DominatePerson()'>Dominate Person</b>,<b onClick='Telekinesis()'>Telekinesis<p>@1st AWAKENED MIND telepathy with language knowing targets 30ft";
b='@6th LevelENTROPIC WARD(1/1)short rest, react you attacked at disadv, next attack your target at adv';
c='@10th LevelTHOUGHT SHIELD immune telepathy at will, resist psychic, attacker takes same psychic dam';
dx='@14th LevelCREATE THRALL incapacitated humanoid telepathically charmed til Remove Curse';
}
 if(this.class.match(/Hexblade/))
 {a="@1st<b onClick='Shield()'>Shield</b>,<b onClick='WrathfulSmite()'>Wrathful Smite</b></td></tr><tr><td>@2nd<b onClick='Blur()'>Blur</b>,<b onClick='BrandingSmite()'>Branding Smite</b></td></tr><tr><td>@3rd<b onClick='Blink()'>Blink</b>,<b onClick='ElementalWeapon()'>Elemental Weapon</b></td></tr><tr><td>@4th<b onClick='PhantasmalKiller()'>Phantasmal Killer</b>,<b onClick='StaggeringSmite()'>Staggering Smite</b></td></tr><tr><td>@5th<b onClick='BanishingSmite()'>Banishing Smite</b>,<b onClick='ConeOfCold()'>Cone of Cold</b><p>HEXBLADE S CURSE 1bonus,1target,30ft,1min,dmg+pro,crit on 19-20,target dies you heal your lvl+cha,1/1short rest<p>HEX WARRIOR pro at medium armor, shields, martial weapons, 1h weapon and pact weapons attack+cha dmg+cha";
b="@6th LevelACCURSED SPECTER your target dies becomes Specter with temp hp 1/2 your lvl, attacks+your cha uteoy next long rest";
c='@10th LevelARMOR OF HEXES attacker hits you, roll d6 4+ attacker misses';
dx='@14th LevelMASTER OF HEXES you transfer the curse to another target, you do not gain hp from new target deaths';
}
 if(this.class.match(/Undying/))
 {a="@1st<b onClick='FalseLife()'>False Life</b>,<b onClick='RayOfSickness()'> Ray of Sickness</b></td></tr><tr><td>@2nd<b onClick='BlindnessDeafness()'>BlindnessDeafness</b>,<b onClick='Silence()'>Silence</b></td></tr><tr><td>@3rd<b onClick='FeignDeath()'>Feign Death</b>,<b onClick='SpeakWithDead()'>Speak with Dead</b></td></tr><tr><td>@4th<b onClick='AuraOfLife()'>Aura of Life</b></td></tr><tr><td>,<b onClick='DeathWard()'>Death Ward</b></td></tr><tr><td>@5th<b onClick='Contagion()'>Contagion</b>,<b onClick='LegendLore()'>Legend Lore</b><p>@1st AMONG THE DEAD Spare the Dying/save at adv vs disease/undead wis save vs spell dc on fail attack another target, on success charmed";
b='@6th LevelDEFY DEATH(1/1)long rest, heal 1d8+conMod on success death save or stabilizing with Spare the Dying';
c='@10th LevelUNDYING NATURE do not need air, food, water or sleep unless long or short rest/age 1yr for every 10yrs/immune magically aged';
dx='@14th LevelINDESTRUCTABLE LIFE(1/1)short rest/bonus heal 1d8+lvl/reattach your severed body parts';
}
 this.setFeatures('</td></tr><tr><td>@1st LevelPACT MAGIC spellMod is chaMod<p>EXPANDED SPELLS</td></tr><tr><td>' + a + '</td></tr><tr><td>@2nd LevelELDRITCH INVOCATION AGONIZING BLAST must have Eldritch Blast, dmg+chaMod<p>ARMOR OF SHADOWS Mage Armor no slot cost<p>@9th ASCENDANT STEP Levitate at will, no slot cost<p>BEAST SPEECH Speak with Animals at will, no slot cost<p>BEGUILING INFLUENCE Deception Persuasion+pro<p>@7th BEWITCHING WHISPERS Compulsion, slot cost,(1/1)long rest<p>BOOK OF ANCIENT SECRETS must have Pact of the Tome, 2 1st lvl spells of any class as rituals, add adventure rituals 2hrs 50gp<p>@15th CHAINS OF CARCERI 1/1 long rest, Hold Monster at will, no slot cost or components(Devil s Sight)120ft see in magical nonmagical darkness @7th(Dreadful Word)1/1 long rest, Confusion, slot cost<p>ELDRITCH SIGHT Detect magic at will, no slot cost<p>ELDRITCH SPEAR must have Eldritch Blast, range 300ft<p>EYES OF THE RUNE KEEPER read all writing<p>FIENDISH VIGOR False Life at will, no slot cost<p>GAZE OF TWO MINDS see through ally till end your next turn<p>@12th LIFEDRINKER must have Pact of the Blade, dam+chaMod necrotic<p>MASK OF MANY FACES<b onClick=DisguiseSelf()>Disguise Self</b> at will, no slot cost<p>@15th MASTER OF MYRIAD FORMS Alter Self at will, no slot cost<p>@9th MINIONS OF CHAOS 1/1 long rest, Conjure Elemental, slot cost<p>@5th MIRE THE MIND 1/1 long rest, Slow, slot cost<p>MISTY VISIONS Silent Image at will, no slot cost, no material component<p>@5th ONE WITH SHADOWS in dim or darkness, 1 action, invisible til move, act, react<p>@9th OTHERWORLDLY LEAP jump at will, no slot cost, no material component<p>REPELLING BLAST must have Eldritch Blast, on hit push target up to 10ft<p>@7th SCULPTOR OF FLESH 1/1 long rest, Polymorph, 1 slot<p>@5th SIGN OF ILL OMEN 1/1 long rest, Bestow Curse<p>THIEF OF FIVE FATES 1/1 long rest, Bane<p>@5th THIRSTING BLADE must have Pact of the Blade, 1 more attack<p>@15th VISIONS OF DISTANT REALMS Arcane Eye at will, no slot cost<p>VOICE OF THE CHAIN MASTER must have Pact of the Chain, telepathy with familiar, sense and speak through familiar<p>@9th WHISPERS OF THE GRAVE Speak with Dead at will, no slot cost<p>@15th WITCH SIGHT see true form of shapechanger of illusion or transmutation 30ft</td></tr><tr><td>@3rd LevelPACT BOON<p>PACT OF THE CHAIN Find Familiar as ritual, imp, pseudodragon, quasit, sprite, or normal familiar, familiar attacks as its reaction<p>or PACT OF THE BLADE weapon becomes magical, summon dismiss weapon as bonus<p> or PACT OF THE TOMB 3 any class extra cantrips, 1hr to replace book</td></tr><tr><td>@4th Level<b>Ability Score Improvement</b> one abi+2, or abi+1 another abi+1 @4th, @8th, @12th, @16th, @19th</td></tr><tr><td>' + b + '</td></tr><tr><td>' + c + '</td></tr><tr><td>@11th Level MYSTIC ARCANUM 1 new 6th lvl Warlock spell without slot cost, after slot cost)(1/1), @13th 7th lvl(1/1), @15th 8th lvl(1/1), @17th 9th lvl(1/1)</td></tr><tr><td>' + dx + '</td></tr><tr><td>@20th LevelELDRITCH MASTER 1/1 long rest, takes 1min restore all slots</td></tr><tr><td>');
 this.setEquipment('light crossbow 20 bolts or simple weapon.component pouch or arcane focus.scholar pack or dungeoneer pack.leather armor.simple weapon.2 daggers');
 this.setHitDice(this.level + 'd8+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('light armor, simple weapons');
 this.setSaving('wis+pro, cha+pro');
 this.setStrPro('');
 this.setDexPro('');
 this.setConPro('');
 this.setIntPro('');
 this.setWisPro('pro');
 this.setChaPro('pro');
 this.setSkills('2 from Arcana, Deception, History, Intimidation, Investigation, Nature, or Religion');
 this.setSpellAbility('cha');
}
A='No Features';
if(this.class.match(/Abjurer/))
{a='@2nd.ABJURATION SAVANT gold, time 1/2 copying abjuration spells</td></tr><tr><td>@2nd.ARCANE WARD when casting abjuration, self ward hp 2 x lvl+intMod, cast another abjuration, ward heals 2 x spell lvl';
 b='@6th.PROJECTED WARD ward ranged 30ft for an ally</td></tr><tr><td>@10th.IMPROVED ABJURATION abjuration spell ability checks+pro</td></tr><tr><td>@14th.SPELL RESISTANCE save at adv vs spells, resist spell damage';
}
if(this.class.match(/Bladesinger/))
{a="@2nd(Bladesinging)light armor+pro, 1h melee weapon+pro, Performance+pro</td></tr><tr><td>@2nd(Bladesong)while no heavy or medium armor or shield or 2h weapon, 1 bonus action, 10/10 turns, AC+intMod, Speed+10ft, Dex and Acrobatics at adv, concentration save con+intMod";
 b='@6th(Extra Attack)attack twice when you take an attack action</td></tr><tr><td>@10th(Song of Defense)during your Bladesong, heal 5x1 spell slot level when expending the slot</td></tr><tr><td>@14th(Song of Victory)during your Bladesong, melee weapon+intMod dmg';
}
if(this.class.match(/Conjurer/))
{a='@2nd.CONJURATION SAVANT gold and time is halved copying conjuration spells</td></tr><tr><td>@2nd.MINOR CONJURATION 1 10lb 3ft cubebed object within 10ft till 1hr or damaged';
 b='6th.BENIGN TRANSPORATION teleport 30ft or swap space with ally(1/1)</td></tr><tr><td>@10th.FOCUSED CONJURATION concentration ntration not broken casting conjuration spell</td></tr><tr><td>@14th.DURABLE SUMMONS summoned or constructs have 30 temp hp';
}
if(this.class.match(/Diviner/))
{a='@2nd.DIVINATION SAVANT gold and time is halved copying divination spells</td></tr><tr><td>@2nd.PORTENT(1/1)roll 2 d20 and use in place of any ally or target roll';
 b='@6th.EXPERT DIVINATION regain a slot lower than the conjuration spell lvl you cast</td></tr><tr><td>@10th.THE THIRD EYE(1/1)act Darkvision or Ethreal Sight or Greater Comprehension or See Invisibility</td></tr><tr><td>@14th.GREATER PORTENT roll 3 d20s for your Portent';
}
if(this.class.match(/Enchanter/))
{a='@2nd.ENCHANTMENT SAVANT gold and time is halved copying enchantment spells</td></tr><tr><td>@2nd.HYPNOTIC GAZE(1/1)5ft wis save charmed speed 0 incapacitated dazed';
 b='@6th.INSTINCTIVE CHARM attacked at 30ft, react, target wis saves or attacks target ally</td></tr><tr><td>@10th.SPLIT ENCHANTMENT cast enchantment on 2 targets</td></tr><tr><td>@14th.ALTER MEMORIES int save or no memories of charm 1+chaMod hours'
}
if(this.class.match(/Evoker/))
{a='@2nd.EVOCATION SAVANT gold and time is halved copying evocation spells</td></tr><tr><td>@2nd.SCULPT SPELLS cast evocation,1 ally+1/spell lvl auto or save for half is save for 0 hp in the spell area';
 b='@6th.POTENT CANTRIP cantrips are save for half damage</td></tr><tr><td>@10th.EMPOWERED EVOCATION evocation spells+int damage</td></tr><tr><td>@14th.OVERCHANNEL(1/1)5th lvl spells but not cantrips or lower do max damage, take 2d12 necrotic if you cast this again before a long rest,+1d12 necrotic each time'
}
if(this.class.match(/Illusionist/))
{a='@2nd.ILLUSION SAVANT gold and time is halved copying illusion spells</td></tr><tr><td>@2nd.IMPROVED MINOR ILLUSION if learned, learn 1 cantrip, Create image and sound';
 b='@6th.MALLEABLE ILLUSIONS you can change 10/10 turns or longer illusions</td></tr><tr><td>@10th.ILLUSORY SELF reaction, attacker hits clone which ends and misses you(1/1)</td></tr><tr><td>@14th.ILLUSORY REALITY the illusionary object remains real for 1min'
}
if(this.class.match(/Necromancer/))
{a='2nd.NECROMANCY SAVANT gold and time is halved copying necromancy spells</td></tr><tr><td>@2nd.GRIM HARVEST cast and kill, heal 2 x spell lvl, 3 x if Necromantic spell';
 b='@6th.UNDEAD THRALLS learn Animate Dead+1 undead hp+your lvl, dam+your pro</td></tr><tr><td>@10th.INJURED TO UNDEATH resist necrotic, hp max never reduced</td></tr><tr><td>@14th.COMMAND UNDEAD 1 undead 60ft cha save or obeys, undead int 8+save at adv reroll/hr'
}
if(this.class.match(/Theurgist/))
{a="@2nd(Divine Inspiration)Choose a Cleric Domain and deity</td></tr><tr><td>@2nd(Arcane Initiate)when gaining a Wizard level, you can opt to replace a new learned Wizard spell for a Cleric Domain spell of the same spell level, other Wizards can not copy your Cleric Domain spells into their spell books</td></tr><tr><td>@2nd(Channel Arcana)@2nd 1/1 @6th 2/2 @18th 3/3 sort rest recharge(Divine Arcana)1 bonus action, say prayer spell attack+2 or DC+2(Channel Divinity)";
 b="@6th(Arcane Acolyte)you gain the Cleric Domain 1st level benefits except weapon and armor proficiencies</td></tr><tr><td>@10th(Arcane Priest)you gain your Cleric Domain 6th level benefits</td></tr><tr><td>@14th(Arcane High Priest)you gain your Cleric Domain 17th level benefits"
}
if(this.class.match(/Transmuter/))
{a='@2nd(Transmutation Savant)gold and time is halved copying transmutation spells</td></tr><tr><td>@2nd.MINOR ALCHEMY transmute 1ft cube of objects 1 hour';
 b='@6th(Transmuter s Stone)you or ally that carries it, Darkvision 60ft or speed+10ft or con+pro or resist acid,cold,fire,lightning,thunder</td></tr><tr><td>@10th(Shapechanger)learn Polymorph no slot cost self CR1 or lower(1/1)</td></tr><tr><td>@14th(Master Tansmuter)act Transmuter Stone destroyed(Major Transformation)5ft cube objects or(Panacea)remove all curses,disease,poisons,restore hp of 1 ally or(Restore Life)Raise Dead at no slot cost on 1 ally or(Restore Youth)apparent age is reduced by 3d10 years min 13 of 1 ally'
}
if(this.class.match(/Wizard/))
{this.setFeatures("</td></tr><tr><td>1st(Arcane Recovery) 1/1 recharge after short rest, recover 1/2lvl rnd up in 6th lvl or fewer slots</td></tr><tr><td>" + a + "</td></tr><tr><td>@4th<b><b>Ability Score Improvement</b></b> @4th @8th @12th @16th @19th</td></tr><tr><td>" + b + "</td></tr><tr><td>@18th(Spell Mastery)cast a known 1st and 2nd(lvl spell at no 1st cost, 8hrs change the know spells</td></tr><tr><td>@20th(Signature Spells)cast 2 known 3rd lvl spells at no 3rd cost");
 this.setEquipment('quarterstaff or dagger.component pouch or arcane focus.scholar pack or explorer pack.spellbook');
 this.setHitDice(this.level + 'd6+' +(parseInt(this.level) * parseInt(this.conMod)));
 this.setProficiencies('daggers, darts, light crossbows, quarterstaffs, and slings');
 this.setSaving('int+pro, wis+pro');
 this.setStrPro('');
 this.setDexPro('');
 this.setConPro('');
 this.setIntPro('pro');
 this.setWisPro('pro');
 this.setChaPro('');
 this.setSkills('2 from Arcana, History, Insight, Investigation, Medicine, or Religion');
 this.setSpellAbility('int');
}

this.refresh();
}

function _setCombatLog(x)
{this.combatLog=x;
this.refresh();
}

function _setCon(x)
{this.con=x;
this.curCon=x;
calcMod(x);
this.conMod=mod;
this.setClass(this.class);
this.refresh();
}

function _setContents(newContents)
{this.contents=newContents;
this.refresh();
}

function _setCurAc(x)
{this.curAc=x;
this.refresh();
}

function _setCurCon(x)
{this.curCon=x;
calcMod(x);
this.conMod=mod;
this.refresh();
}

function _setCurCha(x)
{this.curCha=x;
calcMod(x);
this.chaMod=mod;
this.refresh();
}

function _setCurDex(x)
{this.curDex=x;
calcMod(x);
this.dexMod=mod;
this.refresh();
}

function _setCurIni(x)
{this.curIni=x;
this.refresh();
}

function _setCurInt(x)
{this.curInt=x;
calcMod(x);
this.intMod=mod;
this.refresh();
}

function _setCurStr(x)
{this.curStr=x;
calcMod(x);
this.strMod=mod;
if(this.size.match(/Tiny/))
{this.carryingCapacity=((this.curStr / 1) * 15) / 2;
 this.dragLiftPush=((this.curStr / 1) * 30) / 2;
 this.highJump=Math.floor(((this.strMod / 1) + 3) / 2);
 this.longJump=Math.floor((this.curStr / 1) / 2);
}
if(this.size.match(/Small|Medium/))
{this.carryingCapacity=(this.curStr / 1) * 15;
 this.dragLiftPush=(this.curStr / 1) * 30;
 this.highJump=Math.floor((this.strMod / 1) + 3);
 this.longJump=Math.floor(this.curStr / 1);
}
if(this.size.match(/Large/))
{this.carryingCapacity=((this.curStr / 1) * 15) * 2;
 this.dragLiftPush=((this.curStr / 1) * 30) * 2;
 this.highJump=Math.floor(((this.strMod / 1) + 3) * 2);
 this.longJump=Math.floor((this.curStr / 1) * 2);
}
if(this.size.match(/Huge/))
{this.carryingCapacity=((this.curStr / 1) * 15) * 4;
 this.dragLiftPush=((this.curStr / 1) * 30) * 4;
 this.highJump=Math.floor(((this.strMod / 1) + 3) * 4);
 this.longJump=Math.floor((this.curStr / 1) * 4);
}
if(this.size.match(/Gargantuan/))
{this.carryingCapacity=((this.curStr / 1) * 15) * 6;
 this.dragLiftPush=((this.curStr / 1) * 30) * 6;
 this.highJump=Math.floor(((this.strMod / 1) + 3) * 6);
 this.longJump=Math.floor((this.curStr / 1) * 6);
}
this.refresh();
}

function _setCurWis(x)
{this.curWis=x;
calcMod(x);
this.wisMod=mod;
this.refresh();
}

function _setdamage(x)
{this.curHp -=x;
if(this.curHp< -this.maxHp)
{this.curHp=-this.maxHp;
}
this.refresh();
}

function _setDamageConditions(x)
{this.damageConditions=x;
if(changedStr=this.damageConditions.match(/(str)(\+\d{1,2}|\-\d{1,2})/i))
{this.setCurStr(parseInt(this.str) + parseInt(changedStr[2]));
}
else
{this.setCurStr(parseInt(this.str));
}
if(changedDex=this.damageConditions.match(/(dex)(\+\d{1,2}|\-\d{1,2})/i))
{this.setCurDex(parseInt(this.dex) + parseInt(changedDex[2]));
}
else
{this.setCurDex(parseInt(this.dex));
}
if(changedCon=this.damageConditions.match(/(con)(\+\d{1,2}|\-\d{1,2})/i))
{this.setCurCon(parseInt(this.con) + parseInt(changedCon[2]));
}
else
{this.setCurCon(parseInt(this.con));
}
if(changedInt=this.damageConditions.match(/(int)(\+\d{1,2}|\-\d{1,2})/i))
{this.setCurInt(parseInt(this.inte) + parseInt(changedInt[2]));
}
else
{this.setCurInt(parseInt(this.inte));
}
if(changedHp=this.damageConditions.match(/(hp)(\+\d{1,3}|\-\d{1,3})/i))
{
this.setTempHp(parseInt(changedHp[2]));
}
else
{this.setTempHp(parseInt(0));
}
if(changedWis=this.damageConditions.match(/(wis)(\+\d{1,2}|\-\d{1,2})/i))
{this.setCurWis(parseInt(this.wis) + parseInt(changedWis[2]));
}
else
{this.setCurWis(parseInt(this.wis));
}
if(changedCha=this.damageConditions.match(/(cha)(\+\d{1,2}|\-\d{1,2})/i))
{this.setCurCha(parseInt(this.cha) + parseInt(changedCha[2]));
}
else
{this.setCurCha(parseInt(this.cha));
}
if(changedAc=this.damageConditions.match(/(ac)(\+\d{1,2}|\-\d{1,2})/i))
{this.setCurAc(parseInt(this.ac) + parseInt(changedAc[2]));
}
else
{this.setCurAc(parseInt(this.ac));
}
if(changedIni=this.damageConditions.match(/(ini)(\+\d{1,2}|\-\d{1,2})/i))
{newIni=parseInt(this.initBonus) + parseInt(changedIni[2]);
 if(newIni > -1)
 {newIni="+" + newIni;
}
 this.setCurIni(newIni);
}
else
{this.setCurIni(this.initBonus);
}
this.refresh();
}

function _setDex(x)
{this.dex=x;
this.curDex=x;
calcMod(x);
this.dexMod=mod;
this.initBonus=mod;
this.curIni=mod;
this.refresh();
}

function _setEquipment(x)
{this.equipment=x;
this.equipment=this.equipment.replace(/\'/g, '');
this.equipment=this.equipment.replace(/\./g, '\.\r');
this.refresh();
}

function _setExperience(x)
{this.experience=x;
this.refresh(x);
}

function _setFeats(x)
{this.feats=x;
this.feats=this.feats.replace(/\'/g, '');
this.refresh(x);
}

function _setFeatures(x)
{this.features=x;
this.features=this.features.replace(/\'|\s+/g, ' ');
this.features=this.features.replace(/\./g, '\.\r');
this.refresh();
}

function _setFeatureNotes(x)
{this.featureNotes=x;
this.featureNotes=this.featureNotes.replace(/\'|\s+/g, ' ');
this.featureNotes=this.featureNotes.replace(/\./g, '\.\r');
this.refresh();
}

function _setFigure(x)
{this.figure=x;
this.refresh(x);
}

function _setFlaws(x)
{this.flaws=x;
this.flaws=this.flaws.replace(/\'/g, '');
this.refresh(x);
}

function _setHealing(x)
{this.curHp=(x / 1 + this.curHp);
if(this.curHp > this.maxHp)
{this.curHp=this.maxHp;
}
this.refresh();
}

function _setHitDice(x)
{
this.hitDice=x;
this.refresh(x);
}

function _setIdeals(x)
{this.ideals=x;
this.ideals=this.ideals.replace(/\'/g, '');
this.refresh(x);
}

function _setImmunity(x)
{this.immunity=x;
this.refresh(x);
}

function _setInit(x)
{this.init=x;
this.refresh(x);
}

function _setIndex(x)
{this.index=x;
}

function _setInitBonus(x)
{this.initBonus=x;
this.curIni=x;
this.refresh();
}

function _setStrPro(x)
{this.strPro=x;
this.refresh(x);
}

function _setDexPro(x)
{this.dexPro=x;
this.refresh(x);
}

function _setConPro(x)
{this.conPro=x;
this.refresh(x);
}

function _setIntPro(x)
{this.intPro=x;
this.refresh(x);
}

function _setWisPro(x)
{this.wisPro=x;
this.refresh(x);
}

function _setCantripsKnown(x){this.cantripsKnown=x;this.refresh(x);}
function _setSpellsKnown(x){this.spellsKnown=x;this.refresh(x);}
function _setSpellSlots(x){this.spellSlots=x;this.refresh(x);}
function _setSlotLevel(x){this.slotLevel=x;this.refresh(x);}
function _setInvocationsKnown(x){this.invocationsKnown=x;this.refresh(x);}

function _setChaPro(x)
{this.chaPro=x;
this.refresh(x);
}

function _setAcrobatics(x)
{this.acrobatics=x;
this.refresh(x);
}

function _setAthletics(x)
{this.athletics=x;
this.refresh(x);
}

function _setAnimal(x)
{this.animal=x;
this.refresh(x);
}

function _setArcana(x)
{this.arcana=x;
this.refresh(x);
}

function _setDeception(x)
{this.deception=x;
this.refresh(x);
}

function _setHistory(x)
{this.history=x;
this.refresh(x);
}

function _setInsight(x)
{this.insight=x;
this.refresh(x);
}

function _setIntimidation(x)
{this.intimidation=x;
this.refresh(x);
}

function _setInvestigation(x)
{this.investigation=x;
this.refresh(x);
}

function _setMedicine(x)
{this.medicine=x;
this.refresh(x);
}

function _setNature(x)
{this.nature=x;
this.refresh(x);
}

function _setPerception(x)
{this.perception=x;
this.refresh(x);
}

function _setPerformance(x)
{this.performance=x;
this.refresh(x);
}

function _setPersuasion(x)
{this.persuasion=x;
this.refresh(x);
}

function _setReligion(x)
{this.religion=x;
this.refresh(x);
}

function _setSleight(x)
{this.sleight=x;
this.refresh(x);
}

function _setStealth(x)
{this.stealth=x;
this.refresh(x);
}

function _setSurvival(x)
{this.survival=x;
this.refresh(x);
}

function abiRoll(x)
{if(abi===1)
{abi='str';
}
if(abi===2)
{abi='dex';
}
if(abi===3)
{abi='con';
}
if(abi===4)
{abi='int';
}
if(abi===5)
{abi='wis';
}
if(abi===6)
{abi='cha';
}
if(abi===7)
{abi='Acrobatics(dex)';
}
if(abi===8)
{abi='Animal Handling(wis)';
}
if(abi===9)
{abi='Arcana(Int)';
}
if(abi===10)
{abi='Athletics(str)';
}
if(abi===11)
{abi='Deception(cha)';
}
if(abi===12)
{abi='History(Int)';
}
if(abi===13)
{abi='Insight(wis)';
}
if(abi===14)
{abi='Intimidation(cha)';
}
if(abi===15)
{abi='Investigation(Int)';
}
if(abi===16)
{abi='Medicine(wis)';
}
if(abi===17)
{abi='Nature(Int)';
}
if(abi===18)
{abi='Perception(wis)';
}
if(abi===19)
{abi='Performance(cha)';
}
if(abi===20)
{abi='Persuasion(cha)';
}
if(abi===21)
{abi='Religion(Int)';
}
if(abi===22)
{abi='Sleight of Hand(dex)';
}
if(abi===23)
{abi='Stealth(dex)';
}
if(abi===24)
{abi='Survival(wis)';
}
if(skillMod==='pro')
{skillMod=characters[x].pro;
}
else if(skillMod==='exp')
{skillMod=parseInt(characters[x].pro * 2);
 if(skillMod > -1)
 {skillMod="+" + skillMod;
}
}
else
{skillMod='+0';
}
roll1=parseInt(rollDForm('1d20+0'));
roll1=roll;
naturalRoll1=naturalRoll;
roll2=parseInt(rollDForm('1d20+0'));
naturalRoll2=naturalRoll;
roll2=roll;
rollTotal1=naturalRoll1 + parseInt(roll1) + parseInt(abiMod) + parseInt(skillMod) + parseInt(characters[x].sit);
rollTotal2=naturalRoll2 + parseInt(roll2) + parseInt(abiMod) + parseInt(skillMod) + parseInt(characters[x].sit);
log="<table><tr><td><table><tr><td>" + characters[x].name + "</td></tr></table></td><td><table><tr><td>Ability or Skill Saving Throw Roll 1</td></tr><tr><td>1d20+0</td></tr><tr><td>(" + naturalRoll1 + roll1 + ")</td></tr><tr><td>" + abiMod + " " + abi + " modifier</td></tr><tr><td>" + skillMod + " proficiency modifier</td></tr><tr><td>" + characters[x].sit + " situation modifier</td></tr><tr><td> = " + rollTotal1 + "</td></tr></table></td><td><table><tr><td>Ability or Skill Saving Throw Roll 2</td></tr><tr><td>1d20+0</td></tr><tr><td>(" + naturalRoll2 + roll2 + ")</td></tr><tr><td>" + abiMod + " " + abi + " modifier</td></tr><tr><td>" + skillMod + " proficiency modifier</td></tr><tr><td>" + characters[x].sit + " situation modifier</td></tr><tr><td> = " + rollTotal2 + "</td></tr></table>";
characters[x].setCombatLog(log);
}

function _setInt(x)
{this.inte=x;
this.curInt=x;
calcMod(x);
this.intMod=mod;
if(this.spellAbility==='int')
{this.setSpellAbilityNumber(this.intMod);
}
if(this.spellAbility==='wis')
{this.setSpellAbilityNumber(this.wisMod);
}
if(this.spellAbility==='cha')
{this.setSpellAbilityNumber(this.chaMod);
}
this.refresh();
}

function _setLanguages(x)
{this.languages=x;
this.refresh();
}

function _setCurKiPointSlot(x)
{this.curKiPointSlot=x;
this.refresh();
}

function _setMaxKiPointSlot(x)
{this.maxKiPointSlot=x;
this.refresh();
}

function _setCurKiPointSlot(x)
{this.curKiPointSlot=x;
this.refresh();
}

function _setMaxKiPointSlot(x)
{this.maxKiPointSlot=x;
this.refresh();
}

function _setCurChannelDivinitySlot(x)
{this.curChannelDivinitySlot=x;
this.refresh();
}

function _setMaxChannelDivinitySlot(x)
{this.maxChannelDivinitySlot=x;
this.refresh();
}

function _setCurFirstSlot(x)
{this.curFirstSlot=x;
this.refresh();
}

function _setMaxFirstSlot(x)
{this.maxFirstSlot=x;
this.refresh();
}

function _setCurSecondSlot(x)
{this.curSecondSlot=x;
this.refresh();
}

function _setMaxSecondSlot(x)
{this.maxSecondSlot=x;
this.refresh();
}

function _setCurThirdSlot(x)
{this.curThirdSlot=x;
this.refresh();
}

function _setMaxThirdSlot(x)
{this.maxThirdSlot=x;
this.refresh();
}

function _setCurFourthSlot(x)
{this.curFourthSlot=x;
this.refresh();
}

function _setMaxFourthSlot(x)
{this.maxFourthSlot=x;
this.refresh();
}

function _setCurFifthSlot(x)
{this.curFifthSlot=x;
this.refresh();
}

function _setMaxFifthSlot(x)
{this.maxFifthSlot=x;
this.refresh();
}

function _setCurSixthSlot(x)
{this.curSixthSlot=x;
this.refresh();
}

function _setMaxSixthSlot(x)
{this.maxSixthSlot=x;
this.refresh();
}

function _setCurSeventhSlot(x)
{this.curSeventhSlot=x;
this.refresh();
}

function _setMaxSeventhSlot(x)
{this.maxSeventhSlot=x;
this.refresh();
}

function _setCurEighthSlot(x)
{this.curEighthSlot=x;
this.refresh();
}

function _setMaxEighthSlot(x)
{this.maxEighthSlot=x;
this.refresh();
}

function _setCurNinthSlot(x)
{this.curNinthSlot=x;
this.refresh();
}

function _setMaxNinthSlot(x)
{this.maxNinthSlot=x;
this.refresh();
}

function _setLevel(x)
{this.level=x;

if(this.class.match(/Cleric/))
{if(this.level.match(/[2-5]/)){
this.setMaxChannelDivinitySlot('1');
this.setCurChannelDivinitySlot('1');
}
if(this.level.match(/[4-9]|1[0-7]/)){
this.setMaxChannelDivinitySlot('2');
this.setCurChannelDivinitySlot('2');
}
if(this.level.match(/1[8-9]|20/)){
this.setMaxChannelDivinitySlot('3');
this.setCurChannelDivinitySlot('3');
}
}

if(this.class.match(/Monk/))
{
if(this.level.match(/[2-9]|1[0-9]|20/)){
this.setMaxKiPointSlot(this.level);
this.setCurKiPointSlot(this.level);
}
else
{this.setMaxKiPointSlot(0);
this.setCurKiPointSlot(0);
}
}

if(this.class.match(/Cleric|Druid|Warlock/))
{if(this.level.match(/[0-3]/)){this.setCantripsKnown(2)}
if(this.level.match(/[4-9]/)){this.setCantripsKnown(3)}
if(this.level.match(/1[0-9]|20/)){this.setCantripsKnown(4)}

if(this.level.match(/[0-1]/)){this.setSpellsKnown(2)}
if(this.level.match(/2/)){this.setSpellsKnown(3)}
if(this.level.match(/3/)){this.setSpellsKnown(4)}
if(this.level.match(/4/)){this.setSpellsKnown(5)}
if(this.level.match(/5/)){this.setSpellsKnown(6)}
if(this.level.match(/6/)){this.setSpellsKnown(7)}
if(this.level.match(/7/)){this.setSpellsKnown(8)}
if(this.level.match(/8/)){this.setSpellsKnown(9)}
if(this.level.match(/9|10/)){this.setSpellsKnown(10)}
if(this.level.match(/1[1-2]/)){this.setSpellsKnown(11)}
if(this.level.match(/1[3-4]/)){this.setSpellsKnown(12)}
if(this.level.match(/1[5-6]/)){this.setSpellsKnown(13)}
if(this.level.match(/1[7-8]/)){this.setSpellsKnown(14)}
if(this.level.match(/19|20/)){this.setSpellsKnown(15)}

if(this.level.match(/[0-1]/)){this.setSpellSlots(1)}
if(this.level.match(/[2-9]|10/)){this.setSpellSlots(2)}
if(this.level.match(/1[1-6]/)){this.setSpellSlots(3)}
if(this.level.match(/1[7-9]|20/)){this.setSpellSlots(4)}

if(this.level.match(/[0-2]/)){this.setSlotLevel('1st')}
if(this.level.match(/[3-4]/)){this.setSlotLevel('2nd')}
if(this.level.match(/[5-6]/)){this.setSlotLevel('3rd')}
if(this.level.match(/[7-8]/)){this.setSlotLevel('4th')}
if(this.level.match(/9|1[0-9]|20/)){this.setSlotLevel('5th')}

if(this.level.match(/1/)){this.setInvocationsKnown(0)}
if(this.level.match(/[2-4]/)){this.setInvocationsKnown(2)}
if(this.level.match(/[5-6]/)){this.setInvocationsKnown(3)}
if(this.level.match(/[7-8]/)){this.setInvocationsKnown(4)}
if(this.level.match(/9|1[0-1]/)){this.setInvocationsKnown(5)}
if(this.level.match(/1[2-4]/)){this.setInvocationsKnown(6)}
if(this.level.match(/1[5-7]/)){this.setInvocationsKnown(7)}
if(this.level.match(/1[8-9]|20/)){this.setInvocationsKnown(8)}
}

if(this.class.match(/Cleric|Wizard/))
{if(this.level.match(/[0-3]/)){this.setCantripsKnown(3)}
if(this.level.match(/[4-9]/)){this.setCantripsKnown(4)}
if(this.level.match(/1[0-9]|20/)){this.setCantripsKnown(5)}
}

if(this.level.match(/[0-4]/)){this.setPro('+2')}
if(this.level.match(/[5-8]/)){this.setPro('+3')}
if(this.level.match(/9|1[0-2]/)){this.setPro('+4')}
if(this.level.match(/1[3-6]/)){this.setPro('+5')}
if(this.level.match(/1[7-9]|20/)){this.setPro('+6')}
if(this.level.match(/2[1-4]/)){this.setPro('+7')}
if(this.level.match(/2[5-8]/)){this.setPro('+8')}
if(this.level.match(/29|30/)){this.setPro('+9')}

if(this.class.match(/Bard|Cleric|Druid|Sorcerer|Wizard/))
{if(this.level.match(/[0-1]/))
 {this.setMaxFirstSlot('2');
this.setCurFirstSlot('2');
}
 if(this.level.match(/2/))
 {this.setMaxFirstSlot('3');
this.setCurFirstSlot('3');
}
 if(this.level.match(/[3-9]|1[0-9]|20/))
 {this.setMaxFirstSlot('4');
this.setCurFirstSlot('4');
}
 if(this.level.match(/[0-2]/))
 {this.setMaxSecondSlot('0');
this.setCurSecondSlot('0');
}
 if(this.level.match(/3/))
 {this.setMaxSecondSlot('2');
this.setCurSecondSlot('2');
}
 if(this.level.match(/[4-9]|1[0-9]|20/))
 {this.setMaxSecondSlot('3');
this.setCurSecondSlot('3');
}
 if(this.level.match(/[0-4]/))
 {this.setMaxThirdSlot('0');
this.setCurThirdSlot('0');
}
 if(this.level.match(/5/))
 {this.setMaxThirdSlot('2');
this.setCurThirdSlot('2');
}
 if(this.level.match(/[6-9]|1[0-9]|20/))
 {this.setMaxThirdSlot('3');
this.setCurThirdSlot('3');
}
 if(this.level.match(/[0-6]/))
 {this.setMaxFourthSlot('0');
this.setCurFourthSlot('0');
}
 if(this.level.match(/7/))
 {this.setMaxFourthSlot('1');
this.setCurFourthSlot('1');
}
 if(this.level.match(/8/))
 {this.setMaxFourthSlot('2');
this.setCurFourthSlot('2');
}
 if(this.level.match(/9|1[0-9]|20/))
 {this.setMaxFourthSlot('3');
this.setCurFourthSlot('3');
}
 if(this.level.match(/[0-8]/))
 {this.setMaxFifthSlot('0');
this.setCurFifthSlot('0');
}
 if(this.level.match(/9/))
 {this.setMaxFifthSlot('1');
this.setCurFifthSlot('1');
}
 if(this.level.match(/1[0-7]/))
 {this.setMaxFifthSlot('2');
this.setCurFifthSlot('2');
}
 if(this.level.match(/1[8-9]|20/))
 {this.setMaxFifthSlot('3');
this.setCurFifthSlot('3');
}
 if(this.level.match(/[0-9]|10/))
 {this.setMaxSixthSlot('0');
this.setCurSixthSlot('0');
}
 if(this.level.match(/1[1-8]/))
 {this.setMaxSixthSlot('1');
this.setCurSixthSlot('1');
}
 if(this.level.match(/19|20/))
 {this.setMaxSixthSlot('2');
this.setCurSixthSlot('2');
}
 if(this.level.match(/[0-9]|1[0-2]/))
 {this.setMaxSeventhSlot('0');
this.setCurSeventhSlot('0');
}
 if(this.level.match(/1[3-9]/))
 {this.setMaxSeventhSlot('1');
this.setCurSeventhSlot('1');
}
 if(this.level.match(/20/))
 {this.setMaxSeventhSlot('2');
this.setCurSeventhSlot('2');
}
 if(this.level.match(/[0-9]|1[0-4]/))
 {this.setMaxEighthSlot('0');
this.setCurEighthSlot('0');
}
 if(this.level.match(/1[5-9]|20/))
 {this.setMaxEighthSlot('1');
this.setCurEighthSlot('1');
}
 if(this.level.match(/[0-9]|1[0-7]/))
 {this.setMaxNinthSlot('0');
this.setCurNinthSlot('0');
}
 if(this.level.match(/1[8-9]|20/))
 {this.setMaxNinthSlot('1');
this.setCurNinthSlot('1');
}
}
if(this.class.match(/Arcane|Eldritch/))
{if(this.level.match(/[0-3]/))
 {this.setMaxFirstSlot('3');
this.setCurFirstSlot('3');
}
 if(this.level.match(/[4-9]|1[0-9]|20/))
 {this.setMaxFirstSlot('4');
this.setCurFirstSlot('4');
}
 if(this.level.match(/[0-6]/))
 {this.setMaxSecondSlot('0');
this.setCurSecondSlot('0');
}
 if(this.level.match(/[7-9]/))
 {this.setMaxSecondSlot('2');
this.setCurSecondSlot('2');
}
 if(this.level.match(/1[0-9]|20/))
 {this.setMaxSecondSlot('3');
this.setCurSecondSlot('3');
}
 if(this.level.match(/[0-9]|1[0-2]/))
 {this.setMaxThirdSlot('0');
this.setCurThirdSlot('0');
}
 if(this.level.match(/1[3-5]/))
 {this.setMaxThirdSlot('2');
this.setCurThirdSlot('2');
}
 if(this.level.match(/1[6-9]|20/))
 {this.setMaxThirdSlot('3');
this.setCurThirdSlot('3');
}
 if(this.level.match(/[0-9]|1[0-8]/))
 {this.setMaxFourthSlot('0');
this.setCurFourthSlot('0');
}
 if(this.level.match(/19|20/))
 {this.setMaxFourthSlot('1');
this.setCurFourthSlot('1');
}
 if(this.level.match(/[0-9]|1[0-9]|20/))
 {this.setMaxFifthSlot('0');
this.setCurFifthSlot('0');
}
 if(this.level.match(/[0-9]|1[0-9]|20/))
 {this.setMaxSixthSlot('0');
this.setCurSixthSlot('0');
}
 if(this.level.match(/[0-9]|1[0-9]|20/))
 {this.setMaxSeventhSlot('0');
this.setCurSeventhSlot('0');
}
 if(this.level.match(/[0-9]|1[0-9]|20/))
 {this.setMaxEighthSlot('0');
this.setCurEighthSlot('0');
}
 if(this.level.match(/[0-9]|1[0-9]|20/))
 {this.setMaxNinthSlot('0');
this.setCurNinthSlot('0');
}
}
if(this.class.match(/Paladin|Ranger/))
{if(this.level.match(/[0-1]/))
 {this.setMaxFirstSlot('0');
this.setCurFirstSlot('0');
}
 if(this.level.match(/2/))
 {this.setMaxFirstSlot('2');
this.setCurFirstSlot('2');
}
 if(this.level.match(/[3-4]/))
 {this.setMaxFirstSlot('3');
this.setCurFirstSlot('3');
}
 if(this.level.match(/[4-9]|1[0-9]|20/))
 {this.setMaxFirstSlot('4');
this.setCurFirstSlot('4');
}
 if(this.level.match(/[0-4]/))
 {this.setMaxSecondSlot('0');
this.setCurSecondSlot('0');
}
 if(this.level.match(/[5-6]/))
 {this.setMaxSecondSlot('2');
this.setCurSecondSlot('2');
}
 if(this.level.match(/[7-9]|1[0-9]|20/))
 {this.setMaxSecondSlot('3');
this.setCurSecondSlot('3');
}
 if(this.level.match(/[0-8]/))
 {this.setMaxThirdSlot('0');
this.setCurThirdSlot('0');
}
 if(this.level.match(/9|10/))
 {this.setMaxThirdSlot('2');
this.setCurThirdSlot('2');
}
 if(this.level.match(/1[1-9]|20/))
 {this.setMaxThirdSlot('3');
this.setCurThirdSlot('3');
}
 if(this.level.match(/[0-9]|1[0-2]/))
 {this.setMaxFourthSlot('0');
this.setCurFourthSlot('0');
}
 if(this.level.match(/1[3-4]/))
 {this.setMaxFourthSlot('1');
this.setCurFourthSlot('1');
}
 if(this.level.match(/1[5-6]/))
 {this.setMaxFourthSlot('2');
this.setCurFourthSlot('2');
}
 if(this.level.match(/1[7-9]|20/))
 {this.setMaxFourthSlot('3');
this.setCurFourthSlot('3');
}
 if(this.level.match(/[0-9]|1[0-6]/))
 {this.setMaxFifthSlot('0');
this.setCurFifthSlot('0');
}
 if(this.level.match(/1[7-8]/))
 {this.setMaxFifthSlot('1');
this.setCurFifthSlot('1');
}
 if(this.level.match(/19|20/))
 {this.setMaxFifthSlot('2');
this.setCurFifthSlot('2');
}
 if(this.level.match(/[0-9]|1[0-9]|20/))
 {this.setMaxSixthSlot('0');
this.setCurSixthSlot('0');
}
 if(this.level.match(/[0-9]|1[0-9]|20/))
 {this.setMaxSeventhSlot('0');
this.setCurSeventhSlot('0');
}
 if(this.level.match(/[0-9]|1[0-9]|20/))
 {this.setMaxEighthSlot('0');
this.setCurEighthSlot('0');
}
 if(this.level.match(/[0-9]|1[0-9]|20/))
 {this.setMaxNinthSlot('0');
this.setCurNinthSlot('0');
}
}
if(this.class.match(/Warlock/))
{if(this.level.match(/0|1/))
 {this.setMaxFirstSlot('1');
this.setCurFirstSlot('1');
this.setMaxSecondSlot('0');
this.setCurSecondSlot('0');
this.setMaxThirdSlot('0');
this.setCurThirdSlot('0');
this.setMaxFourthSlot('0');
this.setCurFourthSlot('0');
this.setMaxFifthSlot('0');
this.setCurFifthSlot('0');
}
 if(this.level.match(/2/))
 {this.setMaxFirstSlot('0');
this.setCurFirstSlot('0');
this.setMaxSecondSlot('2');
this.setCurSecondSlot('2');
this.setMaxThirdSlot('0');
this.setCurThirdSlot('0');
this.setMaxFourthSlot('0');
this.setCurFourthSlot('0');
this.setMaxFifthSlot('0');
this.setCurFifthSlot('0');
}
 if(this.level.match(/3|4/))
 {this.setMaxFirstSlot('0');
this.setCurFirstSlot('0');
this.setMaxSecondSlot('2');
this.setCurSecondSlot('2');
this.setMaxThirdSlot('0');
this.setCurThirdSlot('0');
this.setMaxFourthSlot('0');
this.setCurFourthSlot('0');
this.setMaxFifthSlot('0');
this.setCurFifthSlot('0');
}
 if(this.level.match(/5|6/))
 {this.setMaxFirstSlot('0');
this.setCurFirstSlot('0');
this.setMaxSecondSlot('0');
this.setCurSecondSlot('0');
this.setMaxThirdSlot('2');
this.setCurThirdSlot('2');
this.setMaxFourtxhSlot('0');
this.setCurFourthSlot('0');
this.setMaxFifthSlot('0');
this.setCurFifthSlot('0');
}
 if(this.level.match(/7|8/))
 {this.setMaxFirstSlot('0');
this.setCurFirstSlot('0');
this.setMaxSecondSlot('0');
this.setCurSecondSlot('0');
this.setMaxThirdSlot('0');
this.setCurThirdSlot('0');
this.setMaxFourthSlot('2');
this.setCurFourthSlot('2');
this.setMaxFifthSlot('0');
this.setCurFifthSlot('0');
}
 if(this.level.match(/9|10/))
 {this.setMaxFirstSlot('0');
this.setCurFirstSlot('0');
this.setMaxSecondSlot('0');
this.setCurSecondSlot('0');
this.setMaxThirdSlot('0');
this.setCurThirdSlot('0');
this.setMaxFourthSlot('0');
this.setCurFourthSlot('0');
this.setMaxFifthSlot('2');
this.setCurFifthSlot('2');
}
}
var a=0
if(this.class!='Creature')
{

if(this.class.match(/Sorcerer|Wizard/))
{a=6
}
if(this.class.match(/Bard|Cleric|Druid|Monk|Rogue|Warlock/))
{a=8
}
if(this.class.match(/Fighter|Paladin|Ranger/))
{a=10
}
if(this.class.match(/Barbarian/))
{var a=12;
}
this.setHitDice(this.level + 'd' + a + '+' +(parseInt(this.level) * parseInt(this.conMod)));

}

this.refresh();
}

function _setMaxHp(x)
{this.maxHp=x;
this.curHp=x;
this.refresh();
}

function _setCurHp(x)
{this.curHp=x;
if(this.curHp< -this.maxHp)
{this.curHp=-this.maxHp
}
if(this.curHp > this.maxHp)
{this.curHp=this.maxHp
}
this.refresh();
}

function _setTempHp(x)
{this.tempHp=x;
this.refresh();
}

function _setName(name)
{this.name=name;
this.refresh();
}

function _setPro(x)
{this.pro=x;
this.refresh();
}

function _setProficiencies(x)
{this.proficiencies=x;
this.refresh();
}

function _setProficienciesRace(x)
{this.proficienciesRace=x;
this.proficienciesRace=this.proficienciesRace.replace(/\'/g, '');
this.proficienciesRace=this.proficienciesRace.replace(/\./g, '\.\r');
this.refresh();
}

function _setRace(x)
{this.race=x;
if(this.race.match(/Aasimar/))
{this.setLanguages('Common, Celestial');
 this.setResistance('necrotic, radiant');
 this.setSenses('Darkvision 60ft');
 this.setSize('Medium 5x5ft');
 this.setSpeed('30ft');
 this.setTrait('age 60-160yrs, Humanoid, hair color red, blonde, brown, black, or silver, eye color pale white, gold, gray, or topaz, skin color pale-dark brown, emerald, gold, silver, male height 150–220 cm, female height 140–210 cm, male weight 56.2–127 kg, female weight 40.4–111 kg,  homeland Prime Material, Plane, or Celestial Planes');
 if(this.race.match(/Protector/))
 {this.setAbility('wis+1,cha+2');
this.setProficienciesRace('Healing Hands:1/1 long rest,heal self or ally lvl in hp,Light cha,Radiant Soul:@3rd fly 30ft 1min,deal your lvl extra radiant dmg 1 target each turn,1/1 long rest');
}
 if(this.race.match(/Scourge/))
 {this.setAbility('con+1,cha+2');
this.setProficienciesRace('Healing Hands:1/1 long rest,heal self or ally lvl in hp,Light cha,Radiant Consumption:@3rd lvl,1act,1min or 1bonus act end,10ft rad bright light and 10ft dim light chosen targets take your lvl radiant dmg each turn');
}
 if(this.race.match(/Fallen/))
 {this.setAbility('str+1,cha+2');
this.setProficienciesRace('Healing Hands:1/1 long rest,heal self or ally lvl in hp,Light cha,Necrotic Shroud:@3rd targets 10ft radius cha vsCha or frightened uteoynt, deal extra necrotic dmg to 1 target per turn,1min or 1 bonus end 1/1 long rest');
}
}
if(this.race.match(/Dragonborn/))
{this.setAbility('str+2, cha+1');
 this.setLanguages('Common, Draconic');
 this.setProficienciesRace('');
 this.setResistance('Acid');
 this.setSenses('Darkvision 60ft');
 this.setSize('Medium 5x5ft');
 this.setSpeed('30ft');
 this.setTrait('(Breath weapon)(Black)1d6 Acid 5x30ft line Dex for half(Blue)Lightning 5x30ft line Dex for half(Brass)Fire 5x30ft line Dex for half(Bronze)Lightning 5x30ft line Dex for half(Copper)Acid 5x30ft line Dex for half(Gold)Fire 15ft cone Dex for half(Green)Poison 15ft cone Con for half(Red)Fire 15ft cone Dex for half(Silver)Cold 15ft cone Con for half(White)Cold 15ft cone Con for half+1d6@6th, 11th, 16th lvl, 1-80 years old, 250 lbs., 6+feet tall');
}
if(this.race.match(/Dwarf,\sHill/))
{this.setAbility('con+2, wis+1');
 this.setLanguages('Common, Dwarvish');
 this.setProficienciesRace('battleaxe, handaxe, light hammer, warhammer, smith or brewer or Mason Tools,(Stonecunning)History+exp re the details of stone work age and construction');
 this.setResistance('(Dwarven Resilience)resist poison 1/2 damage save vs poison at adv');
 this.setSenses('Darkvision 60ft');
 this.setSize('Medium 5x5ft');
 this.setSpeed('25 feet');
 this.setTrait('(Dwarven Toughness)when leveling up, hp+1hp, 1-350 years old, 150 lbs., 4-5 feet tall');
}
if(this.race.match(/Dwarf,\sMountain/))
{this.setAbility('str+2, con+2');
 this.setLanguages('Common, Dwarvish');
 this.setProficienciesRace('light armor, medium armor, battleaxes, handaxes, light hammers, and warhammers, smith or brewer or mason Tools,(Stonecunning)History+exp re the details of stone work age and construction');
 this.setResistance('(Dwarven Resilience)resist poison 1/2 damage save vs poison at adv');
 this.setSenses('Darkvision 60ft');
 this.setSize('Medium 5x5ft');
 this.setSpeed('25 feet');
 this.setTrait('1-350 years old, 150 lbs., 4-5 feet tall');
}
if(this.race.match(/Dwarf,\sGray/))
{this.setAbility('str+1');
 this.setLanguages('Common, Dwarvish, Undercommon');
 this.setProficienciesRace('battleaxe, handaxe, light hammer, warhammer, smith or brewer or Mason Tools,(Stonecunning)History+exp re the details of stone work age and construction, @3rd(Enlarge/Reduce)only Enlarge on self(1/1)long rest, @5th(Invisibility)no components needed/in dim light(1/1)long rest');
 this.setResistance('(Duergar Resilience)save at adv vs illusion, charm, paralysis');
 this.setSenses('Darkvision 120ft');
 this.setSize('Medium 5x5ft');
 this.setSpeed('25 feet');
 this.setTrait('(Sunlight Sensitivity)attacks and Perception at disadv in sunlight, 150 lbs., 4-5 feet tall');
}
if(this.race.match(/Elf,\sDark/))
{this.setAbility('dex+2, cha+1');
 this.setImmunity('Sleep');
 this.setLanguages('Common, Elvish');
 this.setProficienciesRace('Dancing Lights(cha), @3rd Faerie Fire(cha), @5th Darkness(cha)(1/1)long rest, rapiers, and shortswords');
 this.setResistance('(Fae Ancestry)save vs charm at adv');
 this.setSenses('Darkvision 120ft,(Keen Senses)Perception+pro,(Trance)alert to danger during long and short rests');
 this.setSize('Medium 5x5ft');
 this.setSpeed('30ft');
 this.setTrait('(Sunlight Sensitivity)attacks and Perception at disadv in sunlight, 1-750 years old, 5-6 feet tall');
}
if(this.race.match(/Elf,\sHalf/))
{this.setAbility('cha+2, abi+1 and abi+1');
 this.setImmunity('Sleep');
 this.setLanguages('Common, Elvish, and 1 language');
 this.setProficienciesRace('2 skills+pro');
 this.setResistance('(Fae Ancestry)save vs charm at adv');
 this.setSenses('Darkvision 60ft,(Keen Senses)Perception+pro,(Trance)alert to danger during long and short rests');
 this.setSize('Medium 5x5ft');
 this.setSpeed('30ft');
 this.setTrait('1-180 years old, 5-6 feet tall');
}
if(this.race.match(/Elf,\sHigh/))
{this.setAbility('dex+2, int+1');
 this.setImmunity('Sleep');
 this.setLanguages('Common, Elvish, and 1 language');
 this.setProficienciesRace('1 Wizard Cantrip(Int), longbows, longswords, shortbows, and shortswords');
 this.setResistance('(Fae Ancestry)save vs charm at adv');
 this.setSenses('Darkvision 60ft,(Keen Senses)Perception+pro,(Trance)alert to danger during long and short rests');
 this.setSize('Medium 5x5ft');
 this.setSpeed('30ft');
 this.setTrait('1-750 years old, 5-6 feet tall');
}
if(this.race.match(/Elf,\sMoon/))
{this.setAbility('dex+2, int+1');
 this.setImmunity('Sleep');
 this.setLanguages('Common, Elvish, and 1 language');
 this.setProficienciesRace('longbows, longswords, shortbows, shortswords');
 this.setResistance('(Fae Ancestry)save vs charm at adv');
 this.setSenses('Darkvision 60ft,(Keen Senses)Perception+pro,(Trance)alert to danger during long and short rests');
 this.setSize('Medium 5x5ft');
 this.setSpeed('30ft');
 this.setTrait('1-750 years old, 5-6 feet tall');
}
if(this.race.match(/Elf,\sShadow/))
{this.setAbility('dex+2, con+1');
 this.setImmunity('Sleep');
 this.setLanguages('Common, Elvish, and 1 language');
 this.setProficienciesRace('longbows, longswords, shortbows, shortswords');
 this.setResistance('@3rd resist all dmg when teleporting 1rnd 30ft bonus act 1/1 long rest, innecrotic, (Fae Ancestry)save vs charm at adv');
 this.setSenses('Darkvision 60ft,(Keen Senses)Perception+pro,(Trance)alert to danger during long and short rests');
 this.setSize('Medium 5x5ft');
 this.setSpeed('30ft');
 this.setTrait('100-750 yrs old('+(100+parseInt(rollDForm('1d650+0')))+'yrs old), 4ft 8in tall+2d8('+(4.8+(parseInt(rollDForm('2d8+0'))/12)).toFixed(2)+'ft), 90lbs+1d4('+(parseInt(90)+parseInt(rollDForm('1d4+0')))+'lbs)');
}
if(this.race.match(/Elf,\sWood/))
{this.setAbility('dex+2, int+1');
 this.setImmunity('Sleep');
 this.setLanguages('Common, Elvish');
 this.setProficienciesRace('longbows, longswords, shortbows, and shortswords');
 this.setResistance('necrotic dmg, (Fae Ancestry)save vs charm at adv');
 this.setSenses('Darkvision 60ft,(Keen Senses)Perception+pro,(Trance)alert to danger during long and short rests');
 this.setSize('Medium 5x5ft');
 this.setSpeed('35 feet');
 this.setTrait('(Mask of the Wild)try to hide even under light cover, 1-750 years old, 5-6 feet tall');
}
if(this.race.match(/Gnome,\sDeep/))
{this.setAbility('dex+1');
 this.setLanguages('Common, Gnomish, Undercommon');
 this.setProficienciesRace('Natural Illusionist(Minor Illusion(Int))');
 this.setResistance('(Gnome Cunning)save vs magic at adv');
 this.setSenses('Darkvision 120ft');
 this.setSize('Small 5x5ft');
 this.setSpeed('25 feet');
 this.setTrait('(Stone Camouflage)Stealth at adv in rocky terrain, 1-500 years old, 40 lbs., 3 feet tall');
}
if(this.race.match(/Gnome,\sForest/))
{this.setAbility('dex+1, int+2');
 this.setLanguages('Common, Gnomish');
 this.setProficienciesRace('Natural Illusionist(Minor Illusion(Int))');
 this.setResistance('(Gnome Cunning)save vs magic at adv');
 this.setSenses('Darkvision 60ft');
 this.setSize('Small 5x5ft');
 this.setSpeed('25 feet');
 this.setTrait('(Speak with Small Beasts), 1-500 years old, 40 lbs., 3 feet tall');
}
if(this.race.match(/Gnome,\sRock/))
{this.setAbility('int+2, con+1');
 this.setLanguages('Common, Gnomish');
 this.setProficienciesRace('(Artifcer s Lore)History+exp regarding alchemical and magic items(Tinker)Tinker Tools+pro 1hr 10gp 1 toy AC5 1hp Clockwork Toy Fire Starter Music Box');
 this.setResistance('(Gnome Cunning)save vs magic at adv');
 this.setSenses('Darkvision 60ft');
 this.setSize('Small 5x5ft');
 this.setSpeed('25 feet');
 this.setTrait('1-500 years old, 40 lbs., 3 feet tall');
}
if(this.race.match(/Halfling,\sLightfoot/))
{this.setAbility('dex+2, cha+1');
 this.setLanguages('Common, Halfling');
 this.setProficienciesRace('');
 this.setResistance('(Brave)save vs fear at adv');
 this.setSenses('');
 this.setSize('Small 5x5ft');
 this.setSpeed('25 feet');
 this.setTrait('(Naturally Stealthy)can try to hide behind larger being,(Nimbleness)can move through larger being space,(Lucky)re-roll on a natural 1, 1-250 years old, 40 lbs., 3 feet tall');
}
if(this.race.match(/Halfling,\sStout/))
{this.setAbility('dex+2, con+1');
 this.setLanguages('Common, Halfling');
 this.setProficienciesRace('');
 this.setResistance('(Stout Resilience)resist Poison, save vs poison at adv,(Brave)save vs fear at adv');
 this.setSenses('');
 this.setSize('Small 5x5ft');
 this.setSpeed('25 feet');
 this.setTrait('(Nimbleness)can move through larger being space ,(Lucky)re-roll on a natural 1, 1-250 years old, 40 lbs., 3 feet tall');
}
if(this.race.match(/Human/))
{this.setAbility('abi+1 and abi+1');
 this.setLanguages('Common, and 1 language');
 this.setProficienciesRace('1 more skill, 1 more feat');
 this.setResistance('');
 this.setSenses('');
 this.setSize('Medium 5x5ft');
 this.setSpeed('30ft');
 this.setTrait('1-100 years old, 100-180 lbs., 5-6 feet tall');
}
if(this.race.match(/Orc,\sHalf/))
{this.setAbility('str+2, con+1');
 this.setLanguages('Common, Orc');
 this.setProficienciesRace('Intimidation+pro');
 this.setResistance('');
 this.setSenses('Darkvision 60ft');
 this.setSize('Medium 5x5ft');
 this.setSpeed('30ft');
 this.setTrait('(Relentless Endurance)(1/1)long rest, 0hp is 1hp,(Menacing)Intimidation+pro,(Savage attacks)crit damage+1d, 1-75 years old, 6+feet tall');
}
if(this.race.match(/Satyr/))
{this.setAbility('dex+1, cha+2');
 this.setDamageConditions('immune to Charm Person');
 this.setLanguages('Common, Sylvan');
 this.setProficienciesRace('Ram 1d4+str+pro, Mirthful Leaps long jump+1d8 feet, Performance+pro, Persuasion+pro, Musical Instrument+pro, @1st Vicious Mockery+cha @3rd Entangle+cha, @5th Suggestion+cha 1/1 long rest resets');
 this.setResistance('resists magic at advantage');
 this.setSenses('Darkvision 60ft');
 this.setSize('Medium 5x5ft');
 this.setSpeed('35ft');
 this.setTrait(15+rollDForm('1d75+0')+' or 1-90 years old,'+(3+rollDForm('1d2+0'))+ 'ft or 4-5 feet tall, '+(100+rollDForm('1d50+0'))+'lbs or 100-150lbs');
}
if(this.race.match(/Tiefling/))
{this.setAbility('int+1, cha+2');
 this.setLanguages('Common, Infernal');
 this.setProficienciesRace('Thaumaturgy, @3rd lvl Hellish Rebuke at slot2 1/day, @5th lvl Darkness(1/day)');
 this.setResistance('Fire');
 this.setSenses('Darkvision 60ft');
 this.setSize('Medium 5x5ft');
 this.setSpeed('30ft');
 this.setTrait('1-70 years old, 5-6 feet tall');
}
this.refresh();
}

function _setResistance(x)
{this.resistance=x;
this.refresh();
}

function _setResults(x)
{this.results=x;
this.refresh();
}

function _setRollName1(x)
{this.rollName1=x;
this.refresh();
}

function _setRoll1(x)
{this.roll1=x;
this.refresh();
}

function _setRollName2(x)
{this.rollName2=x;
this.refresh();
}

function _setRoll2(x)
{this.roll2=x;
this.refresh();
}

function _setSaving(x)
{this.saving=x;
this.refresh();
}

function _setSenses(x)
{this.senses=x;
this.refresh();
}

function _setShield(x)
{this.shield=x;
this.refresh();
}

function _setSpeed(x)
{this.speed=x;
this.refresh();
}

function _setSpellAbility(x)
{this.spellAbility=x;
if(x==='int')
{this.setSpellAbilityNumber(this.intMod);
}
if(x==='wis')
{this.setSpellAbilityNumber(this.wisMod);
}
if(x==='cha')
{this.setSpellAbilityNumber(this.chaMod);
}
this.refresh();
}

function _setSpellAbilityNumber(x)
{this.spellAbilityNumber=x;
this.refresh();
}

function _setSit(x)
{this.sit=x;
if(this.sit==='')
{this.sit='+0';
}
this.refresh();
}

function _setSize(x)
{this.size=x;
if(this.size.match(/Tiny/))
{this.carryingCapacity=((this.curStr / 1) * 15) / 2;
 this.dragLiftPush=((this.curStr / 1) * 30) / 2;
 this.highJump=Math.floor(((this.strMod / 1) + 3) / 2);
 this.longJump=Math.floor((this.curStr / 1) / 2);
}
if(this.size.match(/Small|Medium/))
{this.carryingCapacity=(this.curStr / 1) * 15;
 this.dragLiftPush=(this.curStr / 1) * 30;
 this.highJump=Math.floor((this.strMod / 1) + 3);
 this.longJump=Math.floor(this.curStr / 1);
}
if(this.size.match(/Large/))
{this.carryingCapacity=((this.curStr / 1) * 15) * 2;
 this.dragLiftPush=((this.curStr / 1) * 30) * 2;
 this.highJump=Math.floor(((this.strMod / 1) + 3) * 2);
 this.longJump=Math.floor((this.curStr / 1) * 2);
}
if(this.size.match(/Huge/))
{this.carryingCapacity=((this.curStr / 1) * 15) * 4;
 this.dragLiftPush=((this.curStr / 1) * 30) * 4;
 this.highJump=Math.floor(((this.strMod / 1) + 3) * 4);
 this.longJump=Math.floor((this.curStr / 1) * 4);
}
if(this.size.match(/Gargantuan/))
{this.carryingCapacity=((this.curStr / 1) * 15) * 6;
 this.dragLiftPush=((this.curStr / 1) * 30) * 6;
 this.highJump=Math.floor(((this.strMod / 1) + 3) * 6);
 this.longJump=Math.floor((this.curStr / 1) * 6);
}
this.refresh();
}

function _setSkills(x)
{this.skills=x;
this.refresh();
}

function _setStr(x)
{this.str=x;
this.curStr=x;
calcMod(x);
this.strMod=mod;
if(this.size.match(/Tiny/))
{this.carryingCapacity=((this.curStr / 1) * 15) / 2;
 this.dragLiftPush=((this.curStr / 1) * 30) / 2;
 this.highJump=Math.floor(((this.strMod / 1) + 3) / 2);
 this.longJump=Math.floor((this.curStr / 1) / 2);
}
if(this.size.match(/Small|Medium/))
{this.carryingCapacity=(this.curStr / 1) * 15;
 this.dragLiftPush=(this.curStr / 1) * 30;
 this.highJump=Math.floor((this.strMod / 1) + 3);
 this.longJump=Math.floor(this.curStr / 1);
}
if(this.size.match(/Large/))
{this.carryingCapacity=((this.curStr / 1) * 15) * 2;
 this.dragLiftPush=((this.curStr / 1) * 30) * 2;
 this.highJump=Math.floor(((this.strMod / 1) + 3) * 2);
 this.longJump=Math.floor((this.curStr / 1) * 2);
}
if(this.size.match(/Huge/))
{this.carryingCapacity=((this.curStr / 1) * 15) * 4;
 this.dragLiftPush=((this.curStr / 1) * 30) * 4;
 this.highJump=Math.floor(((this.strMod / 1) + 3) * 4);
 this.longJump=Math.floor((this.curStr / 1) * 4);
}
if(this.size.match(/Gargantuan/))
{this.carryingCapacity=((this.curStr / 1) * 15) * 6;
 this.dragLiftPush=((this.curStr / 1) * 30) * 6;
 this.highJump=Math.floor(((this.strMod / 1) + 3) * 6);
 this.longJump=Math.floor((this.curStr / 1) * 6);
}
this.refresh();
}

function _setStyle(att, style)
{eval("document.getElementById(this.elementId).style." + att + "=\"" + style + "\"");
}

function _setToggled1(x)
{this.toggled1=x;
this.refresh();
}

function _setToggled2(x)
{this.toggled2=x;
this.refresh();
}

function _setToggled3(x)
{this.toggled3=x;
this.refresh();
}

function _setToggled4(x)
{this.toggled4=x;
this.refresh();
}

function _setToggled5(x)
{this.toggled5=x;
this.refresh();
}

function _setToggled6(x)
{this.toggled6=x;
this.refresh();
}

function _setTrait(x)
{this.trait=x;
this.trait=this.trait.replace(/\'/g, '');
this.trait=this.trait.replace(/\./g, '\.\r');
this.refresh();
}

function _setVulnerability(x)
{this.vulnerability=x;
this.refresh();
}

function _updateXY()
{this.x=document.getElementById(this.box.elementId).style.left;
this.y=document.getElementById(this.box.elementId).style.top;
}

function _setWis(x)
{this.wis=x;
this.curWis=x;
calcMod(x);
this.wisMod=mod;
if(this.spellAbility==='int')
{this.setSpellAbilityNumber(this.intMod);
}
if(this.spellAbility==='wis')
{this.setSpellAbilityNumber(this.wisMod);
}
if(this.spellAbility==='cha')
{this.setSpellAbilityNumber(this.chaMod);
}
this.refresh();
}

function _setX(x)
{this.x=x;
this.putAt(x, this.y);
}

function _setY(y)
{this.y=y;
this.putAt(this.x, y);
}

function _show()
{document.getElementById(this.elementId).style.visibility="visible";
}

function _showBox()
{this.box.show();
}

function _showMenu()
{this.menu.show();
this.menuShown=true;
}

function add(character)
{x=characters.length;
character.setIndex(x);
characters[x]=character;
characters[x].refresh();
characters[x].show();
SET_DHTML(character.box.elementId);
}

function addRollPrompt(x)
{result1=dFormParse(characters[x].roll1);
result2=dFormParse(characters[x].roll2);
characters[x].addRoll(characters[x].rollName1, result1, characters[x].rollName2, result2);
}

function AGEBox(color, code, textColorCode, width, height)
{this.borderX=10;
this.borderY=10;
this.code=code;
this.textColorCode=textColorCode;
if(height)
{this.height=height
}
else
{this.height="*"
}
if(width)
{this.width=width
}
else
{this.width="*"
}
}

function AGEElement()
{this.elementId="AGE" + currentElementId;
currentElementId++;
this.x=0;
this.y=0;
this.contents="";
this.hide=_hide;
this.putAt=_putAt;
this.refresh=_refresh;
this.setContents=_setContents;
this.setStyle=_setStyle;
this.setX=_setX;
this.setY=_setY;
this.show=_show;
var newDiv=document.createElement('div');
newDiv.setAttribute('id', this.elementId);
newDiv.className="ui-widget-content";
newDiv.style.position="absolute";
newDiv.style.top=this.y;
newDiv.style.left=this.x;
document.body.appendChild(newDiv);
newDiv.innerHTML="<div>";
this.hide();
}

function askInit(x)
{initRoll=characters[x].rollInit();
characters[x].setInit(initRoll);
}

function calcMod(x)
{mod=Math.floor((x - 10) / 2);
if(mod > -1)
{mod="+" + mod;
}
return mod;
}

function Character(name, type)
{
this.curFirstSlot=0;
this.maxFirstSlot=0;
this.curSecondSlot=0;
this.maxSecondSlot=0;
this.curThirdSlot=0;
this.maxThirdSlot=0;
this.curFourthSlot=0;
this.maxFourthSlot=0;
this.curFifthSlot=0;
this.maxFifthSlot=0;
this.curSixthSlot=0;
this.maxSixthSlot=0;
this.curSeventhSlot=0;
this.maxSeventhSlot=0;
this.curEighthSlot=0;
this.maxEighthSlot=0;
this.curNinthSlot=0;
this.maxNinthSlot=0;
this.abi=0;
this.ability='';
this.ac=0;
this.acrobatics='';
this.addRoll=_addRoll;
this.alignment='Unaligned';
this.alignmentDescription='';
this.animal='';
this.arcana='';
this.armor='No Armor AC10+dex';
this.athletics='';
this.background='';
this.backF='';
this.backL='';
this.backS='';
this.backT='';
this.bonds='';
this.box=new AGEElement();
this.cantripsKnown=0;
this.spellsKnown=0;
this.spellSlots=0;
this.slotLevel=0;
this.invocationsKnown=0;
this.carryingCapacity=0;
this.cha=0;
this.chaMod='+0';
this.chaPro='';
this.class='';
this.combatLog="";
this.con=0;
this.conMod='+0';
this.conPro='';
this.curAc=0;
this.curCha=0;
this.curChannelDivinitySlot=0;
this.curCon=0;
this.curDex=0;
this.curHp=0;
this.curIni='+0';
this.curInt=0;
this.curKeyPointSlot=0;
this.curStr=0;
this.curWis=0;
this.damageConditions='';
this.deception='';
this.deleteRoll=_deleteRoll;
this.dex=0;
this.dexMod='+0';
this.dexPro='';
this.dragLiftPush=0;
this.equipment='';
this.experience='';
this.extraRolls=new Array(0);
this.feats='';
this.features='';
this.featureNotes='';
this.figure='Miniatures/Monster.png';
this.flaws='';
this.getSaveText=_getSaveText;
this.hide=_hide;
this.hideMenu=_hideMenu;
this.highJump=0;
this.history='';
this.hitDice='';
this.ideals='';
this.immunity='';
this.index=null;
this.init="Unrolled";
this.initBonus='+0';
this.insight='';
this.inte=0;
this.intimidation='';
this.intMod='+0';
this.intPro='';
this.investigation='';
this.languages='';
this.level=0;
this.longJump=0;
this.maxChannelDivinitySlot=0;
this.maxKiPointSlot=0;
this.maxHp=0;
this.medicine='';
this.menu=new AGEElement();
this.menuShown=false;
this.name=name;
this.nature='';
this.perception='';
this.performance='';
this.persuasion='';
this.pro='+0';
this.proficiencies='';
this.proficienciesRace='';
this.putAt=_putCharAt;
this.race='';
this.refresh=_ref;
this.religion='';
this.results="";
this.roll1='';
this.roll2='';
this.rollInit=_rollInit;
this.rollStuff='';
this.rollName1='';
this.rollName2='';
this.rollNames=new Array();
this.rollNames2=new Array();
this.rolls=new Array();
this.rolls2=new Array();
this.resistance='';
this.save=_save;
this.saving='';
this.senses='';
this.shield='No Shield AC+0';
this.show=_showBox;
this.showMenu=_showMenu;
this.sit='+0';
this.size='';
this.skills='';
this.sleight='';
this.speed='';
this.spellAbility='';
this.spellAbilityNumber='+0';
this.stealth='';
this.str=0;
this.strMod='+0';
this.strPro='';
this.survival='';
this.tempHp=0;
this.toggled1="none";
this.toggled2="none";
this.toggled3="none";
this.toggled4="none";
this.toggled5="none";
this.toggled6="block";
this.trait='';
this.type=type;
this.updateXY=_updateXY;
this.vulnerability='';
this.wis=0;
this.wisMod='+0';
this.wisPro='';
this.x=0;
this.y=0;
this.setAbility=_setAbility;
this.setAC=_setAC;
this.setAcrobatics=_setAcrobatics;
this.setAlignment=_setAlignment;
this.setAlignmentDescription=_setAlignmentDescription;
this.setAnimal=_setAnimal;
this.setArcana=_setArcana;
this.setArmor=_setArmor;
this.setAthletics=_setAthletics;
this.setBackground=_setBackground;
this.setBackF=_setBackF;
this.setBackL=_setBackL;
this.setBackS=_setBackS;
this.setBackT=_setBackT;
this.setBonds=_setBonds;
this.setCantripsKnown=_setCantripsKnown;
this.setSpellsKnown=_setSpellsKnown;
this.setSpellSlots=_setSpellSlots;
this.setSlotLevel=_setSlotLevel;
this.setInvocationsKnown=_setInvocationsKnown;
this.setCha=_setCha;
this.setChaPro=_setChaPro;
this.setClass=_setClass;
this.setCombatLog=_setCombatLog;
this.setCon=_setCon;
this.setConPro=_setConPro;
this.setdamage=_setdamage;
this.setDamageConditions=_setDamageConditions;
this.setDeception=_setDeception;
this.setDex=_setDex;
this.setDexPro=_setDexPro;
this.setEquipment=_setEquipment;
this.setExperience=_setExperience;
this.setFeats=_setFeats;
this.setFeatures=_setFeatures;
this.setFeatureNotes=_setFeatureNotes;
this.setFigure=_setFigure;
this.setFlaws=_setFlaws;
this.setHealing=_setHealing;
this.setHistory=_setHistory;
this.setHitDice=_setHitDice;
this.setIdeals=_setIdeals;
this.setImmunity=_setImmunity;
this.setIndex=_setIndex;
this.setInit=_setInit;
this.setInitBonus=_setInitBonus;
this.setInsight=_setInsight;
this.setInt=_setInt;
this.setIntPro=_setIntPro;
this.setIntimidation=_setIntimidation;
this.setInvestigation=_setInvestigation;
this.setLanguages=_setLanguages;
this.setLevel=_setLevel;
this.setMaxHp=_setMaxHp;
this.setMedicine=_setMedicine;
this.setName=_setName;
this.setNature=_setNature;
this.setPerception=_setPerception;
this.setPerformance=_setPerformance;
this.setPersuasion=_setPersuasion;
this.setPro=_setPro;
this.setProficiencies=_setProficiencies;
this.setProficienciesRace=_setProficienciesRace;
this.setRace=_setRace;
this.setReligion=_setReligion;
this.setResistance=_setResistance;
this.setResults=_setResults;
this.setRoll1=_setRoll1;
this.setRoll2=_setRoll2;
this.setRollName1=_setRollName1;
this.setRollName2=_setRollName2;
this.setSaving=_setSaving;
this.setSenses=_setSenses;
this.setShield=_setShield;
this.setCurKiPointSlot=_setCurKiPointSlot;
this.setMaxKiPointSlot=_setMaxKiPointSlot;
this.setCurChannelDivinitySlot=_setCurChannelDivinitySlot;
this.setMaxChannelDivinitySlot=_setMaxChannelDivinitySlot;
this.setCurFirstSlot=_setCurFirstSlot;
this.setMaxFirstSlot=_setMaxFirstSlot;
this.setCurSecondSlot=_setCurSecondSlot;
this.setMaxSecondSlot=_setMaxSecondSlot;
this.setCurThirdSlot=_setCurThirdSlot;
this.setMaxThirdSlot=_setMaxThirdSlot;
this.setCurFourthSlot=_setCurFourthSlot;
this.setMaxFourthSlot=_setMaxFourthSlot;
this.setCurFifthSlot=_setCurFifthSlot;
this.setMaxFifthSlot=_setMaxFifthSlot;
this.setCurSixthSlot=_setCurSixthSlot;
this.setMaxSixthSlot=_setMaxSixthSlot;
this.setCurSeventhSlot=_setCurSeventhSlot;
this.setMaxSeventhSlot=_setMaxSeventhSlot;
this.setCurEighthSlot=_setCurEighthSlot;
this.setMaxEighthSlot=_setMaxEighthSlot;
this.setCurNinthSlot=_setCurNinthSlot;
this.setMaxNinthSlot=_setMaxNinthSlot;
this.setSit=_setSit;
this.setSize=_setSize;
this.setSkills=_setSkills;
this.setSleight=_setSleight;
this.setSpeed=_setSpeed;
this.setSpellAbility=_setSpellAbility;
this.setSpellAbilityNumber=_setSpellAbilityNumber;
this.setStealth=_setStealth;
this.setStr=_setStr;
this.setStrPro=_setStrPro;
this.setSurvival=_setSurvival;
this.setToggled1=_setToggled1;
this.setToggled2=_setToggled2;
this.setToggled3=_setToggled3;
this.setToggled4=_setToggled4;
this.setToggled5=_setToggled5;
this.setToggled6=_setToggled6;
this.setTrait=_setTrait;
this.setVulnerability=_setVulnerability;
this.setWis=_setWis;
this.setWisPro=_setWisPro;
this.setCurAc=_setCurAc;
this.setCurCha=_setCurCha;
this.setCurCon=_setCurCon;
this.setCurDex=_setCurDex;
this.setCurHp=_setCurHp;
this.setCurIni=_setCurIni;
this.setCurInt=_setCurInt;
this.setCurStr=_setCurStr;
this.setCurWis=_setCurWis;
this.setTempHp=_setTempHp;
this.refresh();
}

function makeRoll(x, i)
{abi='no ability';
abiMod='+0';
if(characters[x].rollNames[i].match(/\+str/))
{abi='str';
 abiMod=characters[x].strMod;
}
if(characters[x].rollNames[i].match(/\+dex/))
{abi='dex';
 abiMod=characters[x].dexMod;
}
if(characters[x].rollNames[i].match(/\+con/))
{abi='con';
 abiMod=characters[x].conMod;
}
if(characters[x].rollNames[i].match(/\+int/))
{abi='int';
 abiMod=characters[x].intMod;
}
if(characters[x].rollNames[i].match(/\+wis/))
{abi='wis';
 abiMod=characters[x].wisMod;
}
if(characters[x].rollNames[i].match(/\+cha/))
{abi='cha';
 abiMod=characters[x].chaMod;
}
skillMod='+0';
if(characters[x].rollNames[i].match(/\+pro/))
{skillMod=characters[x].pro;
}
if(characters[x].rollNames[i].match(/\+exp/))
{skillMod=parseInt(characters[x].pro) * 2;
 if(skillMod > -1)
 {skillMod="+" + skillMod
}
}
if(characters[x].rollNames[i].match(/DC\d{1,2}/gi))
{roll1=8;
 dcTotal=roll1 + abiMod / 1 + characters[x].pro / 1 ;
 log1="<table><tr><td><table><tr><td>" + characters[x].name + "</td></tr><tr><td>" + characters[x].rollNames[i] + "</td></tr><tr><td>DC8</td></tr><tr><td>" + abiMod + " " + abi + " ability modifier</td></tr><tr><td>" + characters[x].pro + " proficiency modifier</td></tr><tr><td> = " + dcTotal + "</td></tr><tr><td>versus";

 if(characters[x].rollNames[i].match(/vsStr/gi))
 {modName="str"
saveMod=characters[targeted].strMod
if(characters[targeted].strPro==='pro'){savePro=characters[targeted].pro;saveProName="pro"}
else if(characters[targeted].strPro==='exp'){savePro=characters[targeted].pro*2;saveProName="exp"}

}
 if(characters[x].rollNames[i].match(/vsDex/gi))
 {modName="dex"
saveMod=characters[targeted].dexMod
if(characters[targeted].dexPro==='pro'){savePro=characters[targeted].pro;saveProName="pro"}
else if(characters[targeted].dexPro==='exp'){savePro=characters[targeted].pro*2;saveProName="exp"}
}
 if(characters[x].rollNames[i].match(/vsCon/gi))
 {modName="con"
saveMod=characters[targeted].conMod
if(characters[targeted].conPro==='pro'){savePro=characters[targeted].pro;saveProName="pro"}
else if(characters[targeted].conPro==='exp'){savePro=characters[targeted].pro*2;saveProName="exp"}
}
 if(characters[x].rollNames[i].match(/vsInt/gi))
 {modName="int"
saveMod=characters[targeted].intMod
if(characters[targeted].intPro==='pro'){savePro=characters[targeted].pro;saveProName="pro"}
else if(characters[targeted].intPro==='exp'){savePro=characters[targeted].pro*2;saveProName="exp"}
}
 if(characters[x].rollNames[i].match(/vsWis/gi))
 {modName="wis"
saveMod=characters[targeted].wisMod
if(characters[targeted].wisPro==='pro'){savePro=characters[targeted].pro;saveProName="pro"}
else if(characters[targeted].wisPro==='exp'){savePro=characters[targeted].pro*2;saveProName="exp"}
}
 if(characters[x].rollNames[i].match(/vsCha/gi))
 {modName="cha"
saveMod=characters[targeted].chaMod
if(characters[targeted].chaPro==='pro'){savePro=characters[targeted].pro;saveProName="pro"}
else if(characters[targeted].chaPro==='exp'){savePro=characters[targeted].pro*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsAthletics/gi))
 {
modName="str"
saveMod=characters[targeted].strMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].athletics==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].athletics==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsAcrobatics/gi))
 {
modName="dex"
saveMod=characters[targeted].dexMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].acrobatics==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].acrobatics==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsSleightOfHand/gi))
 {
modName="dex"
saveMod=characters[targeted].dexMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].sleight==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].sleight==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsStealth/gi))
 {
modName="dex"
saveMod=characters[targeted].dexMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].stealth==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].stealth==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsArcana/gi))
 {
modName="int"
saveMod=characters[targeted].intMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].arcana==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].arcana==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsHistory/gi))
 {
modName="int"
saveMod=characters[targeted].intMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].history==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].history==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsInvestigation/gi))
 {
modName="int"
saveMod=characters[targeted].intMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].investigation==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].investigation==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsNature/gi))
 {
modName="int"
saveMod=characters[targeted].intMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].nature==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].nature==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsReligion/gi))
 {
modName="int"
saveMod=characters[targeted].intMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].religion==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].religion==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsAnimal/gi))
 {
modName="wis"
saveMod=characters[targeted].wisMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].animal==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].animal==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsInsight/gi))
 {
modName="wis"
saveMod=characters[targeted].wisMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].insight==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].insight==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsMedicine/gi))
 {
modName="wis"
saveMod=characters[targeted].wisMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].medicine==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].medicine==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsPerception/gi))
 {
modName="wis"
saveMod=characters[targeted].wisMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].perception==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].perception==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsSurvival/gi))
 {
modName="wis"
saveMod=characters[targeted].wisMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].survival==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].survival==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsDeception/gi))
 {
modName="cha"
saveMod=characters[targeted].chaMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].deception==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].deception==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsIntimidation/gi))
 {
modName="cha"
saveMod=characters[targeted].chaMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].intimidation==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].intimidation==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsPerformance/gi))
 {
modName="cha"
saveMod=characters[targeted].chaMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].performance==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].performance==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

 if(characters[x].rollNames[i].match(/vsPersuasion/gi))
 {
modName="cha"
saveMod=characters[targeted].chaMod;
savePro=0;
saveProName="no proficiency";
if(characters[targeted].persuasion==='pro'){savePro=characters[targeted].pro/1;saveProName="pro"}
else if(characters[targeted].persuasion==='exp'){savePro=characters[targeted].pro/1*2;saveProName="exp"}
}

else{savePro="0";saveProName="no proficiency"}
if(savePro > -1){savePro="+" + savePro;}

roll1=parseInt(rollDForm('1d20+0'));
roll1=roll;
naturalRoll1=naturalRoll;
roll2=parseInt(rollDForm('1d20+0'));
naturalRoll2=naturalRoll;
roll2=roll;
rollTotal1=naturalRoll1 + parseInt(roll1) + parseInt(saveMod) + parseInt(savePro) + parseInt(characters[x].sit);
rollTotal2=naturalRoll2 + parseInt(roll2) + parseInt(saveMod) + parseInt(savePro) + parseInt(characters[x].sit);
log="<tr><td>"+characters[targeted].name + "</td></tr></table></td><td><table><tr><td>Saving Throw 1</td></tr><tr><td>1d20+0</td></tr><tr><td>(" + naturalRoll1 + roll1 + ")</td></tr><tr><td>" + saveMod + " " + modName + " ability modifier</td></tr><tr><td>" + savePro + " " + saveProName + " modifier</td></tr><tr><td>" + characters[x].sit + " situation modifier</td></tr><tr><td> = " + rollTotal1 + "</td></tr></table></td><td><table><tr><td>Saving Throw 2</td></tr><tr><td>1d20+0</td></tr><tr><td>(" + naturalRoll2 + roll2 + ")</td></tr><tr><td>" + saveMod + " " + modName + " ability modifier</td></tr><tr><td>" + savePro + " " + saveProName + "</td></tr><tr><td>" + characters[x].sit + " situation modifier</td></tr><tr><td> = " + rollTotal2 + "</td></tr></td></tr></table>";
characters[x].setCombatLog(log);
}
else
{log='';
 roll1=parseInt(rollDForm(characters[x].rolls[i]));
 naturalRoll1=naturalRoll;
 roll1=roll;
 roll2=parseInt(rollDForm(characters[x].rolls[i]));
 naturalRoll2=naturalRoll;
 roll2=roll;
 rollTotal1=naturalRoll1 + parseInt(roll1) + parseInt(abiMod) + parseInt(skillMod) + parseInt(characters[x].sit);
 rollTotal2=naturalRoll2 + parseInt(roll2) + parseInt(abiMod) + parseInt(skillMod) + parseInt(characters[x].sit);
 log1="<table><tr><td><table><tr><td>" + characters[x].name + "</td></tr><tr><td>" + characters[x].rollNames[i] + "</td></tr><tr><td>versus</td></tr><tr><td>" + characters[targeted].name + "</td></tr><tr><td>AC : " + characters[targeted].curAc+"</td></tr></table></td><td><table><tr><td>Attack 1</td></tr><tr><td>" + characters[x].rolls[i] + "</td></tr><tr><td>(" + naturalRoll1 + roll1 + ")</td></tr><tr><td>" + abiMod + " " + abi + " modifier</td></tr><tr><td>" + skillMod + " skill proficiency modifier</td></tr><tr><td>" + characters[x].sit + " situation modifier</td></tr><tr><td> = " + rollTotal1 + "</td></tr></table></td><td><table><tr><td>Attack 2</td></tr><tr><td>" + characters[x].rolls[i] + "</td></tr><tr><td>(" + naturalRoll2 + roll2 + ")</td></tr><tr><td>" + abiMod + " " + abi + " modifier</td></tr><tr><td>" + skillMod + " skill proficiency modifier</td></tr><tr><td>" + characters[x].sit + " situation modifier</td></tr><tr><td> = " + rollTotal2 + "</td></tr></table>";
}
abi='no ability';
abiMod='+0';
if(characters[x].rollNames2[i].match(/\+str/))
{abi='str';
 abiMod=characters[x].strMod;
}
if(characters[x].rollNames2[i].match(/\+dex/))
{abi='dex';
 abiMod=characters[x].dexMod;
}
if(characters[x].rollNames2[i].match(/\+con/))
{abi='con';
 abiMod=characters[x].conMod;
}
if(characters[x].rollNames2[i].match(/\+int/))
{abi='int';
 abiMod=characters[x].intMod;
}
if(characters[x].rollNames2[i].match(/\+wis/))
{abi='wis';
 abiMod=characters[x].wisMod;
}
if(characters[x].rollNames2[i].match(/\+cha/))
{abi='cha';
 abiMod=characters[x].chaMod;
}
skillMod='+0';
roll1=parseInt(rollDForm(characters[x].rolls2[i]));
naturalRoll1=naturalRoll;
roll1=roll;
roll2=parseInt(rollDForm(characters[x].rolls2[i]));
naturalRoll2=naturalRoll;
roll2=roll;
rollTotal1=naturalRoll1 + parseInt(roll1) + parseInt(abiMod) + parseInt(characters[x].sit);
rollTotal2=naturalRoll2 + parseInt(roll2) + parseInt(characters[x].sit);
theCondition=characters[x].rollNames2[i];
if(characters[x].rollNames2[i].match(/heal/))
{log2="</td></tr></table></td><td><table><tr><td>"+characters[x].name + "</td></tr><tr><td>" + characters[x].rollNames2[i] + "</td></tr><tr><td><input onClick='characters[targeted].setDamageConditions(characters[targeted].damageConditions+theCondition);checkTheTarget()' type='button' value='Assign this damage condition?'></td></tr></table></td><td><table><tr><td>Healing 1</td></tr><tr><td>" + characters[x].rolls2[i] + "</td></tr><tr><td>(" + naturalRoll1 + roll1 + ")</td></tr><tr><td>" + abiMod + " " + abi + "</td></tr><tr><td>" + skillMod + " skill proficiency modifier</td></tr><tr><td>" + characters[x].sit + " situation modifier</td></tr><tr><td> = " + rollTotal1 + "</td></tr><tr><td><input onClick='characters[targeted].setCurHp(characters[targeted].curHp+rollTotal1);checkTheTarget()' type='button' value=Heal?></td></tr></table></td><td><table><tr><td>Healing 2</td></tr><tr><td>" + characters[x].rolls2[i] + "</td></tr><tr><td>(" + naturalRoll2 + roll2 + ")</td></tr><tr><td>" + abiMod + " " + abi + " modifier</td></tr><tr><td>" + skillMod + " skill proficiency modifier</td></tr><tr><td>" + characters[x].sit + " situation modifier</td></tr><tr><td> =" + rollTotal2 + "</td></tr><tr><td><input onClick='characters[targeted].setCurHp(characters[targeted].curHp+rollTotal2);checkTheTarget()' type='button' value=Heal?></td></tr></table></td></tr></table>";
 characters[x].setCombatLog(log1 + log + log2);
}
else
{log2="</td><td><table><tr><td>" + characters[x].rollNames2[i] + "</td></tr><tr><td><input onClick='characters[targeted].setDamageConditions(characters[targeted].damageConditions+theCondition);checkTheTarget()' type='button' value='Assign this damage condition?'></td></tr></table></td><td><table><tr><td>Damage 1</td></tr><tr><td>" + characters[x].rolls2[i] + "</td></tr><tr><td>(" + naturalRoll1 + roll1 + ")</td></tr><tr><td>" + abiMod + " " + abi + " modifier</td></tr><tr><td>" + characters[x].sit + " situation modifier</td></tr><tr><td> = " + rollTotal1 + "</td></tr><tr><td><input onClick='characters[targeted].setCurHp(characters[targeted].curHp-rollTotal1);checkTheTarget()' type='button' value=Damage?></td></tr><tr><td><input onClick='characters[targeted].setCurHp(Math.floor(characters[targeted].curHp-(parseInt(rollTotal1/2))));checkTheTarget()' type='button' value='Half damage?'></td></tr></table></td><td><table><tr><td>Damage 2</td></tr><tr><td>" + characters[x].rolls2[i] + "</td></tr><tr><td>(" + naturalRoll2 + roll2 + ")</td></tr><tr><td>+0 no ability modifier for secondary damage</td></tr><tr><td>" + characters[x].sit + " situation modifier</td></tr><tr><td> = " + rollTotal2 + "</td></tr><tr><td><input onClick='characters[targeted].setCurHp(characters[targeted].curHp-rollTotal2);checkTheTarget()' type='button' value=Damage?></td></tr><tr><td><input onClick='characters[targeted].setCurHp(Math.floor(characters[targeted].curHp-(parseInt(rollTotal2/2))));checkTheTarget()' type='button' value='Half damage?'></td></tr></table></td></tr></table>";
 characters[x].setCombatLog(log1 + log + log2);
}
document.getElementById('targeted' + [targeted]).checked='checked';
}

function checkTheTarget()
{document.getElementById('targeted' + [targeted]).checked='checked';
}

function removeChar(x)
{if(confirm("Are you sure you want to delete " + characters[x].name + "? This cannot be undone!"))
{for(var i=x + 1; i< characters.length; i++)
 {characters[i].setIndex(i - 1);
// alert((i-1)+"==="+characters[i].index)
characters[i].refresh();
}
 characters[x].box.hide();
 characters[x].menu.hide();
 characters.splice(x, 1);
}
}

function newCharacter(type)
{response=prompt("What is the new " + type + "'s name?");
if(response !=null)
{x=characters.length;
 newChar=new Character(response, type);
 newChar.setIndex(x);
 newChar.refresh();
 newChar.show();
 characters[x]=newChar;
 ADD_DHTML(newChar.box.elementId);
}
}
//Regular expression for something in the form XdY+/-Z,with X and+/-Z optional
diceRegex=/[0-9]{0,}[d|D][0-9]{1,}([+|-][0-9]{1,}){0,1}/

function rollInitiatives()
{for(i=0; i< characters.length; i++)
{initRoll=characters[i].rollInit();
 characters[i].setInit(initRoll);
}
}

function saveAll()
{globalSave="";
for(var i=0; i< characters.length; i++)
{globalSave+=characters[i].getSaveText() + " "
}
showSavePrompt("all characters", globalSave);
}

function showSavePrompt(name, toSave)
{toSave="<table><tr><td>Save " + name + ". When saving this character, you can reorder the addRoll rows in the save pane. Just drag and drop. Then cut and paste the code below this line into the Characters.js file.<hr>" + toSave + "<hr><input type='button' onClick='savePane.hide()'value=Close></td></tr></table>";
savePane.setContents(toSave);
savePane.show();
}

function toggleMenu(x)
{if(characters[x].menuShown)
{characters[x].hideMenu();
}
else
{characters[x].showMenu();
}
}

function XdY(dice, sides)
{results=0;
for(i=0; i< dice; i++)
{results+=d(sides);
}
return results;
}

var row;
function start(){
 row= event.target;
}
function dragover(){
 var e= event;
 e.preventDefault();

 let children= Array.from(e.target.parentNode.parentNode.children);
 if(children.indexOf(e.target.parentNode)>children.indexOf(row))
 e.target.parentNode.after(row);
 else
 e.target.parentNode.before(row);
}
</script>
<script src="Characters.js"></script>
</head>

</html>
