<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Advanced Dungeons & Dragons</title>

<style>
 
@font-face
{
font-family: MyKidsHandwritten;
src: url("Decorations/MyKidsHandwritten.ttf");
}

body,
button,
.dropdown,
.dropdown-content,
.dropdown-content a,
.dropdown-content a:hover,
.dropdown:hover,
input,
option,
radio,
select,
table,
tr,
td,
textarea {
  background-image:url("Decorations/Panel.png");
  border: 1px solid #333b2f;
  border-radius: 4px;
  color: #22271f; /* Set the text color */
  font-family: 'MyKidsHandwritten';
  font-size: 15px;
  margin: 1px;
  overflow-wrap: anywhere;
  padding: 1px;
  text-align: right;
  text-decoration: none; /* Remove underlines from links */
  text-decoration-thickness: 2px;
  vertical-align: top;
  word-break: break-word;
}

select {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  background-image:url("Decorations/Panel.png");  
  background-repeat: no-repeat;
  background-position: right center;
  border: 1px solid #333b2f;
  border-radius: 4px;
  color: #22271f;
  font-family: 'MyKidsHandwritten';
  font-size: 15px;
  margin: 1px;
  padding: 1px;
  text-align: right;
  text-decoration: none;
  text-decoration-thickness: 2px;
  vertical-align: top;
  word-break: break-word;
}

select option {
  background-color: #808080;
  background-image:url("Decorations/Panel.png");  
  color: #333; /* Set the text color of dropdown options */
}

select:focus {
  background-color: #808080;
  background-image:url("Decorations/Panel.png");  
}

tr:nth-child(even){background:rgba(0,0,0, 0.1)}tr:nth-child(odd){background:rgba(0,0,0, 0.2)}
td:nth-child(even){background:rgba(0,0,0, 0.1)}td:nth-child(odd){background:rgba(0,0,0, 0.2)}
a:active{color:#610C04
}a:link{color:#4E0707
}a:hover{color:#c4141b
}a:selected{color:#5E1916
}a:visited{color:#680C07
}h1{color:#710C04
}h2{color:#900603
}h3{color:#7A1712
}

    .drag-handle {
    }

    .game-container {
      border: 1px solid #000;
      height: 600px;
      position: relative;
      width: 600px;
    }

    .grid-cell {
      border: 1px solid #ccc;
      box-sizing: border-box;
      height: 100px;
      position: relative;
      width: 100px;
    }

    .grid-row {
      display: flex;
      height: 100px;
    }

    .unit {
      border: 1px solid #000;
      cursor: move;
      height: 100px;
      position: absolute;
      width: 100px;
    }
	
    .unit .name {
      width: 20ch;
    }	

    .unit .armor-class {
      width: 2ch;
    }

    .unit .image-container {
      position: relative;
    }

    .unit img {
      max-height: 60%;
      max-width: 60%;
    }

    .unit input[type="file"] {
      display: none;
    }

    .attack-dice-container {
      display: inline-block;
    }

    .attack-dice-input {
      width: 10ch;
    }

    .unit .damage-dice {
      width: 10ch;
    }

    .unit .drag-handle {
      cursor: move;
      user-select: none;
      display: inline-block;
      font-size: 10px;
      line-height: 20px;
      width: 100%;
      text-align: center;
      touch-action: pan-x pan-y;
    }

    .unit .drag-handle span {
      pointer-events: none;
    }

.unit-menu 
{
background-color: #808080;
color: #ffffff;
display: none;
position: absolute;
top: 25ch;
}

 .unit-menu button {
 display: block;
 margin: 5px 0;
 }
 </style>
</head>

<body>

<a href="https://archive.org/details/tsr02011advanceddungeonsdragonsadd1steddungeonmastersguide/page/n75/mode/1up" target="_blank">DM Guide</a>
<p>
<a href="https://archive.org/details/tsr09045addthesecretofbonehill/page/n8/mode/1up" target="_blank">The Secret of Bone Hill</a>
<p>
<button onclick="useMapImage()">Use Map Image</button>
<p>
<button onclick="createUnit()">Create Unit</button><p>
 Attack Dice for all pieces.<span class="attack-dice-container">
<input type="text" class="attack-dice-input" placeholder="XdY+Z" onmouseout="calculateAttackResult(this)" value="1d20+0">
<span class="result">= 4</span>
</span>
<div id="game-container" class="game-container">
</div>

<button onclick="saveGame()">Save Game</button>

<script>

function useMapImage() {
 const fileInput = document.createElement('input');
 fileInput.type = 'file';
 fileInput.accept = 'image/*';
 fileInput.onchange = function (event) {
 const input = event.target;
 const file = input.files[0];
 if (file) {
 const reader = new FileReader();
 reader.onload = function () {
 const gameContainer = document.getElementById('game-container');
 gameContainer.style.backgroundImage = `url('${reader.result}')`;

 // Save the image source to localStorage
 localStorage.setItem('mapImage', reader.result);
 };
 reader.readAsDataURL(file);
 }
 };
 fileInput.click();
}

let currentDraggedUnit = null;

function onTouchStart(e) {
 const touch = e.touches[0];
 const target = document.elementFromPoint(touch.clientX, touch.clientY);

 if (target && target.classList.contains('drag-handle')) {
 currentDraggedUnit = target.closest('.unit');
 currentDraggedUnit.classList.add('dragging');
 }
}

function onTouchMove(e) {
 if (currentDraggedUnit) {
 const touch = e.touches[0];
 const rect = document.getElementById("game-container").getBoundingClientRect();
 const newX = touch.clientX - rect.left;
 const newY = touch.clientY - rect.top;
 currentDraggedUnit.style.left = `${newX}px`;
 currentDraggedUnit.style.top = `${newY}px`;
 }
}

function onTouchEnd() {
 if (currentDraggedUnit) {
 currentDraggedUnit.classList.remove('dragging');
 saveGame();
 currentDraggedUnit = null;
 }
}

document.addEventListener('touchstart', onTouchStart);
document.addEventListener('touchmove', onTouchMove);
document.addEventListener('touchend', onTouchEnd);

let units = [];

function calculateAttackResult(input) {
 let attackDiceValue = input.value;
 let resultElement = input.nextElementSibling;

 let regex = /^(\d+)d(4|6|8|10|12|20)\+(\d+)$/;
 let match = attackDiceValue.match(regex);

 if (match) {
 let numDice = parseInt(match[1]);
 let numSides = parseInt(match[2]);
 let constant = parseInt(match[3]);

 if (!isNaN(numDice) && !isNaN(numSides) && !isNaN(constant) && [4, 6, 8, 10, 12, 20].includes(numSides)) {
 let result = constant;
 for (let i = 0; i < numDice; i++) {
 result += Math.floor(Math.random() * numSides) + 1;
 }

 resultElement.textContent = `=: ${result}`;
 } else {
 resultElement.textContent = 'Invalid input format';
 }
 } else {
 resultElement.textContent = 'Invalid input format';
 }
}

function createUnit() {
 let unit = document.createElement("div");
 unit.className = "unit";
 unit.innerHTML = `
<div class="unit-menu">
<input type="text" class="unit-name" placeholder="Put the name of the character or monster here.">
:Name<br>	
<input type="text" class="armor-class" placeholder="AC HD curHP/maxHP">
:Armor Class(AC)<br>
<select class="unit-armor-type">
  <option value="Breastplate AC14+dex max 2">Breastplate AC14+dex max 2</option>
  <option value="Chain Mail AC16 Stealth @DisAdv str13">Chain Mail AC16 Stealth @DisAdv str13</option>
  <option value="Chain Shirt AC13+dex max 2">Chain Shirt AC13+dex max 2</option>
  <option value="Half Plate AC15+dex max 2 Stealth @DisAdv">Half Plate AC15+dex max 2 Stealth @DisAdv</option>
  <option value="Hide AC12+dex max 2">Hide AC12+dex max 2</option>
  <option value="Leather AC11+dex">Leather AC11+dex</option>
  <option value="Mage Armor AC13+dex">Mage Armor AC13+dex</option>
  <option value="Natural Armor">Natural Armor</option>
  <option value="No Armor AC10+dex">No Armor AC10+dex</option>
  <option value="Padded AC11+dex Stealth @DisAdv">Padded AC11+dex Stealth @DisAdv</option>
  <option value="Plate AC18 Stealth @DisAdv str15">Plate AC18 Stealth @DisAdv str15</option>
  <option value="Ring AC14 Stealth @DisAdv">Ring AC14 Stealth @DisAdv</option>
  <option value="Scale AC14+dex max 2 Stealth @DisAdv">Scale AC14+dex max 2 Stealth @DisAdv</option>
  <option value="Splint AC17 Stealth @DisAdv str15">Splint AC17 Stealth @DisAdv str15</option>
  <option value="Studded AC12+dex">Studded AC12+dex</option>
  <option value="Unarmored Defense AC10+dex+con">Unarmored Defense AC10+dex+con</option>
  <option value="Unarmored Defense AC10+dex+wis">Unarmored Defense AC10+dex+wis</option>
</select> 
:Armor Type<br>			 
<select class="unit-race">
  <option value="construct">construct</option>
  <option value="Aasimar, Fallen">Aasimar, Fallen</option>
  <option value="Aasimar, Protector">Aasimar, Protector</option>
  <option value="Aasimar, Scourge">Aasimar, Scourge</option>
  <option value="Bugbear">Bugbear</option>
  <option value="Dragonborn,Black">Dragonborn,Black</option>
  <option value="Dragonborn,Blue">Dragonborn,Blue</option>
  <option value="Dragonborn,Brass">Dragonborn,Brass</option>
  <option value="Dragonborn,Bronze">Dragonborn,Bronze</option>
  <option value="Dragonborn,Gold">Dragonborn,Gold</option>
  <option value="Dragonborn,Green">Dragonborn,Green</option>
  <option value="Dragonborn,Red">Dragonborn,Red</option>
  <option value="Dragonborn,Silver">Dragonborn,Silver</option>
  <option value="Dragonborn,White">Dragonborn,White</option>
  <option value="Dwarf, Gray">Dwarf, Gray</option>
  <option value="Dwarf, Hill">Dwarf, Hill</option>
  <option value="Dwarf, Mountain">Dwarf, Mountain</option>
  <option value="Elf, Dark">Elf, Dark</option>
  <option value="Elf, Half">Elf, Half</option>
  <option value="Elf, High">Elf, High</option>
  <option value="Elf, Moon">Elf, Moon</option>
  <option value="Elf, Wood">Elf, Wood</option>
  <option value="Elf, Shadow">Elf, Shadow</option>
  <option value="Firbolg">Firbolg</option>
  <option value="Gnome, Deep">Gnome, Deep</option>
  <option value="Gnome, Forest">Gnome, Forest</option>
  <option value="Gnome, Rock">Gnome, Rock</option>
  <option value="Goblin">Goblin</option>
  <option value="Halfling, Lightfoot">Halfling, Lightfoot</option>
  <option value="Halfling, Stout">Halfling, Stout</option>
  <option value="Hobgoblin">Hobgoblin</option>
  <option value="Human">Human</option>
  <option value="Kenku">Kenku</option>
  <option value="Kobold">Kobold</option>
  <option value="Orc">Orc</option>
  <option value="Orc, Half">Orc, Half</option>
  <option value="Satyr">Satyr</option>
  <option value="Tabaxi">Tabaxi</option>
  <option value="Tiefling, Asmodeus">Tiefling, Asmodeus</option>
  <option value="Tiefling, Baazebul">Tiefling, Baazebul</option>
  <option value="Tiefling, Dispater">Tiefling, Dispater</option>
  <option value="Tiefling, Fierna">Tiefling, Fierna</option>
  <option value="Tiefling, Glasya">Tiefling, Glasya</option>
  <option value="Tiefling, Levistus">Tiefling, Levistus</option>
  <option value="Tiefling, Mammon">Tiefling, Mammon</option>
  <option value="Tiefling, Mephistopheles">Tiefling, Mephistopheles</option>
  <option value="Tiefling, Zariel">Tiefling, Zariel</option>
  <option value="Yuan-Ti">Yuan-Ti</option>
</select>
:Race<br>
<select class="unit-class">
  <option value="Barbarian, Ancestral Guardian">Barbarian, Ancestral Guardian</option>
  <option value="Barbarian, Bear Totem Warrior">Barbarian, Bear Totem Warrior</option>
  <option value="Barbarian, Berserker">Barbarian, Berserker</option>
  <option value="Barbarian, Eagle Totem Warrior">Barbarian, Eagle Totem Warrior</option>
  <option value="Barbarian, Storm Herald">Barbarian, Storm Herald</option>
  <option value="Barbarian, Wolf Totem Warrior">Barbarian, Wolf Totem Warrior</option>
  <option value="Barbarian, Zealot">Barbarian, Zealot</option>
  <option value="Bard, Glamour">Bard, Glamour</option>
  <option value="Bard, Lore">Bard, Lore</option>
  <option value="Bard, Satire">Bard, Satire</option>
  <option value="Bard, Swords">Bard, Swords</option>
  <option value="Bard, Valor">Bard, Valor</option>
  <option value="Bard, Whispers">Bard, Whispers</option>
  <option value="Cleric, Arcana">Cleric, Arcana</option>
  <option value="Cleric, Death">Cleric, Death</option>
  <option value="Cleric, Forge">Cleric, Forge</option>
  <option value="Cleric, Grave">Cleric, Grave</option>
  <option value="Cleric, Knowledge">Cleric, Knowledge</option>
  <option value="Cleric, Life">Cleric, Life</option>
  <option value="Cleric, Light">Cleric, Light</option>
  <option value="Cleric, Nature">Cleric, Nature</option>
  <option value="Cleric, Tempest">Cleric, Tempest</option>
  <option value="Cleric, Trickery">Cleric, Trickery</option>
  <option value="Cleric, War">Cleric, War</option>
  <option value="Druid, Arctic">Druid, Arctic</option>
  <option value="Druid, Coast">Druid, Coast</option>
  <option value="Druid, Desert">Druid, Desert</option>
  <option value="Druid, Forest">Druid, Forest</option>
  <option value="Druid, Grassland">Druid, Grassland</option>
  <option value="Druid, Moon">Druid, Moon</option>
  <option value="Druid, Mountain">Druid, Mountain</option>
  <option value="Druid, Swamp">Druid, Swamp</option>
  <option value="Druid, Underdark">Druid, Underdark</option>
  <option value="Fighter, Arcane Archer">Fighter, Arcane Archer</option>
  <option value="Fighter, Battle Master">Fighter, Battle Master</option>
  <option value="Fighter, Cavalier">Fighter, Cavalier</option>
  <option value="Fighter, Champion">Fighter, Champion</option>
  <option value="Fighter, Eldritch Knight">Fighter, Eldritch Knight</option>
  <option value="Fighter, Samurai">Fighter, Samurai</option>
  <option value="Monk, Cobalt Soul">Monk, Cobalt Soul</option>
  <option value="Monk, Drunken Master">Monk, Drunken Master</option>
  <option value="Monk, Four Elements">Monk, Four Elements</option>
  <option value="Monk, Kensei">Monk, Kensei</option>
  <option value="Monk, Open Hand">Monk, Open Hand</option>
  <option value="Monk, Shadow">Monk, Shadow</option>
  <option value="Monk, Sun Soul">Monk, Sun Soul</option>
  <option value="Paladin, Ancients">Paladin, Ancients</option>
  <option value="Paladin, Crown">Paladin, Crown</option>
  <option value="Paladin, Devotion">Paladin, Devotion</option>
  <option value="Paladin, Oathbreaker">Paladin, Oathbreaker</option>
  <option value="Paladin, Vengeance">Paladin, Vengeance</option>
  <option value="Ranger, Beast Master">Ranger, Beast Master</option>
  <option value="Ranger, Fey Wanderer">Ranger, Fey Wanderer</option>
  <option value="Ranger, Hunter">Ranger, Hunter</option>
  <option value="Ranger, Monster Slayer">Ranger, Monster Slayer</option>
  <option value="Ranger, Swarmkeeper">Ranger, Swarmkeeper</option>
  <option value="Rogue, Arcane Trickster">Rogue, Arcane Trickster</option>
  <option value="Rogue, Assassin">Rogue, Assassin</option>
  <option value="Rogue, Mastermind">Rogue, Mastermind</option>
  <option value="Rogue, Phantom">Rogue, Phantom</option>
  <option value="Rogue, Scout">Rogue, Scout</option>
  <option value="Rogue, Soulknife">Rogue, Soulknife</option>
  <option value="Rogue, Swashbuckler">Rogue, Swashbuckler</option>
  <option value="Sorcerer, Draconic">Sorcerer, Draconic</option>
  <option value="Sorcerer, Fire">Sorcerer, Fire</option>
  <option value="Sorcerer, Shadow Magic">Sorcerer, Shadow Magic</option>
  <option value="Sorcerer, Storm">Sorcerer, Storm</option>
  <option value="Sorcerer, Wild">Sorcerer, Wild</option>
  <option value="Warlock, Archfey">Warlock, Archfey</option>
  <option value="Warlock, Fiend">Warlock, Fiend</option>
  <option value="Warlock, GenieOfAir">Warlock, GenieOfAir</option>
  <option value="Warlock, GenieOfEarth">Warlock, GenieOfEarth</option>
  <option value="Warlock, GenieOfFire">Warlock, GenieOfFire</option>
  <option value="Warlock, GenieOfWater">Warlock, GenieOfWater</option>
  <option value="Warlock, Great Old Ones">Warlock, Great Old Ones</option>
  <option value="Warlock, Hexblade">Warlock, Hexblade</option>
  <option value="Warlock, Undying">Warlock, Undying</option>
  <option value="Witch, Black Magic">Witch, Black Magic</option>
  <option value="Witch, White Magic">Witch, White Magic</option>
  <option value="Wizard, Abjurer">Wizard, Abjurer</option>
  <option value="Wizard, Bladesinger">Wizard, Bladesinger</option>
  <option value="Wizard, Conjurer">Wizard, Conjurer</option>
  <option value="Wizard, Diviner">Wizard, Diviner</option>
  <option value="Wizard, Enchanter">Wizard, Enchanter</option>
  <option value="Wizard, Evoker">Wizard, Evoker</option>
  <option value="Wizard, Illusionist">Wizard, Illusionist</option>
  <option value="Wizard, Necromancer">Wizard, Necromancer</option>
  <option value="Wizard, Theurgist">Wizard, Theurgist</option>
  <option value="Wizard, Transmuter">Wizard, Transmuter</option>
</select>
:Class<br>
<div class="dice-stats">
<span class="attack-dice-container">
<input type="text" class="attack-dice-input" placeholder="XdY+Z" onmouseout="calculateAttackResult(this)" value="1d20+0">
<span class="result">= 4</span>
</span>
:Dice<br>
<span class="damage-dice">
<input type="text" class="damage-dice-input" placeholder="XdY+Z" onmouseout="calculateDamageResult(this)">
<span class="damage-result">Result: 0</span>
</span>
:Dice<br>
</div>
</div>
 <button onclick="toggleMenu(this.parentElement)">Menu</button>
<span class="drag-handle">Drag</span>
<button onclick="rotateUnit(this)">Rotate</button>
<button onclick="toggleMenu(this.parentElement)">Stats</button>
<button onclick="selectImage(this)">Miniature</button>
        <span class="image-container">
          <button onclick="selectImage(this)">Mini</button>
          <img src="">
          <input type="file" accept="image/*" onchange="loadImage(event)">
        </span>
<button onclick="deleteUnit(this)">Delete</button>
 `;

 unit.style.left = "0px";
 unit.style.top = "0px";

 document.getElementById("game-container").appendChild(unit);
 units.push(unit);

 unit.draggable = true;
 unit.addEventListener('dragstart', (e) => {
 e.dataTransfer.setData('text/plain', null);
 e.target.classList.add('dragging');
 });
 unit.addEventListener('dragend', (e) => {
 e.target.classList.remove('dragging');
 saveGame();
 });
}

function toggleMenu(unit) {
 const menu = unit.querySelector('.unit-menu');
 menu.style.display = menu.style.display === 'none' ? 'block' : 'none';
}

function deleteUnit(button) {
 let unit = button.parentElement;
 unit.parentNode.removeChild(unit);
 units = units.filter(u => u !== unit);
 saveGame();
}

function rotateUnit(button) {
 let unit = button.parentElement;
 let rotation = (parseInt(unit.style.transform.replace("rotate(", "").replace("deg)", "")) || 0) + 45;
 unit.style.transform = `rotate(${rotation}deg)`;
 saveGame();
}

function calculateDamageResult(input) {
 let damageDiceValue = input.value;
 let unit = input.parentElement;
 let damageResultElement = unit.querySelector('.damage-result');

 let regex = /^(\d+)d(\d+)\+(\d+)$/;
 let match = damageDiceValue.match(regex);

 if (match) {
 let numDice = parseInt(match[1]);
 let numSides = parseInt(match[2]);
 let constant = parseInt(match[3]);

 if (!isNaN(numDice) && !isNaN(numSides) && !isNaN(constant)) {
 let result = constant;
 for (let i = 0; i < numDice; i++) {
 result += Math.floor(Math.random() * numSides) + 1;
 }

 damageResultElement.textContent = `=: ${result}`;
 } else {
 damageResultElement.textContent = 'Invalid input format';
 }
 } else {
 damageResultElement.textContent = 'Invalid input format';
 }
}

function selectImage(button) {
 let unit = button.parentElement.parentElement;
 let fileInput = unit.querySelector('input[type="file"]');
 fileInput.click();
}

function loadImage(event) {
 let input = event.target;
 let unit = input.parentElement.parentElement;

 let img = unit.querySelector('img');
 let file = input.files[0];
 let reader = new FileReader();

 reader.onload = function() {
 img.src = reader.result;
 }

 if (file) {
 reader.readAsDataURL(file);
 }
}

function saveGame() {
 let savedUnits = units.map(unit => {
 let imageSrc = unit.querySelector('.image-container img').src;
 return {
 left: unit.style.left,
 top: unit.style.top,
 transform: unit.style.transform,
name: unit.querySelector('.unit-name').value,	 
 ac: unit.querySelector('.armor-class').value,
 unitArmorType: unit.querySelector('.unit-armor-type').value,	 
 unitRace: unit.querySelector('.unit-race').value,	 
 unitClass: unit.querySelector('.unit-class').value,
 damageDice: unit.querySelector('.damage-dice-input').value,
 imageSrc: imageSrc
 };
 });
 localStorage.setItem("units", JSON.stringify(savedUnits));
}

function loadGame() {
 let savedUnits = JSON.parse(localStorage.getItem("units"));
 if (savedUnits) {
 savedUnits.forEach(savedUnit => {
 let unit = document.createElement("div");
 unit.className = "unit";
 unit.innerHTML = `
 <div class="unit-menu">
<input type="text" class="unit-name" placeholder="Put the name of the character or monster here.">
:Name<br>	
<input type="text" class="armor-class" placeholder="AC HD curHP/maxHP">
:Armor Class(AC)<br>
<select class="unit-armor-type">
  <option value="Breastplate AC14+dex max 2">Breastplate AC14+dex max 2</option>
  <option value="Chain Mail AC16 Stealth @DisAdv str13">Chain Mail AC16 Stealth @DisAdv str13</option>
  <option value="Chain Shirt AC13+dex max 2">Chain Shirt AC13+dex max 2</option>
  <option value="Half Plate AC15+dex max 2 Stealth @DisAdv">Half Plate AC15+dex max 2 Stealth @DisAdv</option>
  <option value="Hide AC12+dex max 2">Hide AC12+dex max 2</option>
  <option value="Leather AC11+dex">Leather AC11+dex</option>
  <option value="Mage Armor AC13+dex">Mage Armor AC13+dex</option>
  <option value="Natural Armor">Natural Armor</option>
  <option value="No Armor AC10+dex">No Armor AC10+dex</option>
  <option value="Padded AC11+dex Stealth @DisAdv">Padded AC11+dex Stealth @DisAdv</option>
  <option value="Plate AC18 Stealth @DisAdv str15">Plate AC18 Stealth @DisAdv str15</option>
  <option value="Ring AC14 Stealth @DisAdv">Ring AC14 Stealth @DisAdv</option>
  <option value="Scale AC14+dex max 2 Stealth @DisAdv">Scale AC14+dex max 2 Stealth @DisAdv</option>
  <option value="Splint AC17 Stealth @DisAdv str15">Splint AC17 Stealth @DisAdv str15</option>
  <option value="Studded AC12+dex">Studded AC12+dex</option>
  <option value="Unarmored Defense AC10+dex+con">Unarmored Defense AC10+dex+con</option>
  <option value="Unarmored Defense AC10+dex+wis">Unarmored Defense AC10+dex+wis</option>
</select>
:Armor Type<br>		 
<select class="unit-race">
  <option value="construct">construct</option>
  <option value="Aasimar, Fallen">Aasimar, Fallen</option>
  <option value="Aasimar, Protector">Aasimar, Protector</option>
  <option value="Aasimar, Scourge">Aasimar, Scourge</option>
  <option value="Bugbear">Bugbear</option>
  <option value="Dragonborn,Black">Dragonborn,Black</option>
  <option value="Dragonborn,Blue">Dragonborn,Blue</option>
  <option value="Dragonborn,Brass">Dragonborn,Brass</option>
  <option value="Dragonborn,Bronze">Dragonborn,Bronze</option>
  <option value="Dragonborn,Gold">Dragonborn,Gold</option>
  <option value="Dragonborn,Green">Dragonborn,Green</option>
  <option value="Dragonborn,Red">Dragonborn,Red</option>
  <option value="Dragonborn,Silver">Dragonborn,Silver</option>
  <option value="Dragonborn,White">Dragonborn,White</option>
  <option value="Dwarf, Gray">Dwarf, Gray</option>
  <option value="Dwarf, Hill">Dwarf, Hill</option>
  <option value="Dwarf, Mountain">Dwarf, Mountain</option>
  <option value="Elf, Dark">Elf, Dark</option>
  <option value="Elf, Half">Elf, Half</option>
  <option value="Elf, High">Elf, High</option>
  <option value="Elf, Moon">Elf, Moon</option>
  <option value="Elf, Wood">Elf, Wood</option>
  <option value="Elf, Shadow">Elf, Shadow</option>
  <option value="Firbolg">Firbolg</option>
  <option value="Gnome, Deep">Gnome, Deep</option>
  <option value="Gnome, Forest">Gnome, Forest</option>
  <option value="Gnome, Rock">Gnome, Rock</option>
  <option value="Goblin">Goblin</option>
  <option value="Halfling, Lightfoot">Halfling, Lightfoot</option>
  <option value="Halfling, Stout">Halfling, Stout</option>
  <option value="Hobgoblin">Hobgoblin</option>
  <option value="Human">Human</option>
  <option value="Kenku">Kenku</option>
  <option value="Kobold">Kobold</option>
  <option value="Orc">Orc</option>
  <option value="Orc, Half">Orc, Half</option>
  <option value="Satyr">Satyr</option>
  <option value="Tabaxi">Tabaxi</option>
  <option value="Tiefling, Asmodeus">Tiefling, Asmodeus</option>
  <option value="Tiefling, Baazebul">Tiefling, Baazebul</option>
  <option value="Tiefling, Dispater">Tiefling, Dispater</option>
  <option value="Tiefling, Fierna">Tiefling, Fierna</option>
  <option value="Tiefling, Glasya">Tiefling, Glasya</option>
  <option value="Tiefling, Levistus">Tiefling, Levistus</option>
  <option value="Tiefling, Mammon">Tiefling, Mammon</option>
  <option value="Tiefling, Mephistopheles">Tiefling, Mephistopheles</option>
  <option value="Tiefling, Zariel">Tiefling, Zariel</option>
  <option value="Yuan-Ti">Yuan-Ti</option>
</select>
:Race<br>
<select class="unit-class">
  <option value="Barbarian, Ancestral Guardian">Barbarian, Ancestral Guardian</option>
  <option value="Barbarian, Bear Totem Warrior">Barbarian, Bear Totem Warrior</option>
  <option value="Barbarian, Berserker">Barbarian, Berserker</option>
  <option value="Barbarian, Eagle Totem Warrior">Barbarian, Eagle Totem Warrior</option>
  <option value="Barbarian, Storm Herald">Barbarian, Storm Herald</option>
  <option value="Barbarian, Wolf Totem Warrior">Barbarian, Wolf Totem Warrior</option>
  <option value="Barbarian, Zealot">Barbarian, Zealot</option>
  <option value="Bard, Glamour">Bard, Glamour</option>
  <option value="Bard, Lore">Bard, Lore</option>
  <option value="Bard, Satire">Bard, Satire</option>
  <option value="Bard, Swords">Bard, Swords</option>
  <option value="Bard, Valor">Bard, Valor</option>
  <option value="Bard, Whispers">Bard, Whispers</option>
  <option value="Cleric, Arcana">Cleric, Arcana</option>
  <option value="Cleric, Death">Cleric, Death</option>
  <option value="Cleric, Forge">Cleric, Forge</option>
  <option value="Cleric, Grave">Cleric, Grave</option>
  <option value="Cleric, Knowledge">Cleric, Knowledge</option>
  <option value="Cleric, Life">Cleric, Life</option>
  <option value="Cleric, Light">Cleric, Light</option>
  <option value="Cleric, Nature">Cleric, Nature</option>
  <option value="Cleric, Tempest">Cleric, Tempest</option>
  <option value="Cleric, Trickery">Cleric, Trickery</option>
  <option value="Cleric, War">Cleric, War</option>
  <option value="Druid, Arctic">Druid, Arctic</option>
  <option value="Druid, Coast">Druid, Coast</option>
  <option value="Druid, Desert">Druid, Desert</option>
  <option value="Druid, Forest">Druid, Forest</option>
  <option value="Druid, Grassland">Druid, Grassland</option>
  <option value="Druid, Moon">Druid, Moon</option>
  <option value="Druid, Mountain">Druid, Mountain</option>
  <option value="Druid, Swamp">Druid, Swamp</option>
  <option value="Druid, Underdark">Druid, Underdark</option>
  <option value="Fighter, Arcane Archer">Fighter, Arcane Archer</option>
  <option value="Fighter, Battle Master">Fighter, Battle Master</option>
  <option value="Fighter, Cavalier">Fighter, Cavalier</option>
  <option value="Fighter, Champion">Fighter, Champion</option>
  <option value="Fighter, Eldritch Knight">Fighter, Eldritch Knight</option>
  <option value="Fighter, Samurai">Fighter, Samurai</option>
  <option value="Monk, Cobalt Soul">Monk, Cobalt Soul</option>
  <option value="Monk, Drunken Master">Monk, Drunken Master</option>
  <option value="Monk, Four Elements">Monk, Four Elements</option>
  <option value="Monk, Kensei">Monk, Kensei</option>
  <option value="Monk, Open Hand">Monk, Open Hand</option>
  <option value="Monk, Shadow">Monk, Shadow</option>
  <option value="Monk, Sun Soul">Monk, Sun Soul</option>
  <option value="Paladin, Ancients">Paladin, Ancients</option>
  <option value="Paladin, Crown">Paladin, Crown</option>
  <option value="Paladin, Devotion">Paladin, Devotion</option>
  <option value="Paladin, Oathbreaker">Paladin, Oathbreaker</option>
  <option value="Paladin, Vengeance">Paladin, Vengeance</option>
  <option value="Ranger, Beast Master">Ranger, Beast Master</option>
  <option value="Ranger, Fey Wanderer">Ranger, Fey Wanderer</option>
  <option value="Ranger, Hunter">Ranger, Hunter</option>
  <option value="Ranger, Monster Slayer">Ranger, Monster Slayer</option>
  <option value="Ranger, Swarmkeeper">Ranger, Swarmkeeper</option>
  <option value="Rogue, Arcane Trickster">Rogue, Arcane Trickster</option>
  <option value="Rogue, Assassin">Rogue, Assassin</option>
  <option value="Rogue, Mastermind">Rogue, Mastermind</option>
  <option value="Rogue, Phantom">Rogue, Phantom</option>
  <option value="Rogue, Scout">Rogue, Scout</option>
  <option value="Rogue, Soulknife">Rogue, Soulknife</option>
  <option value="Rogue, Swashbuckler">Rogue, Swashbuckler</option>
  <option value="Sorcerer, Draconic">Sorcerer, Draconic</option>
  <option value="Sorcerer, Fire">Sorcerer, Fire</option>
  <option value="Sorcerer, Shadow Magic">Sorcerer, Shadow Magic</option>
  <option value="Sorcerer, Storm">Sorcerer, Storm</option>
  <option value="Sorcerer, Wild">Sorcerer, Wild</option>
  <option value="Warlock, Archfey">Warlock, Archfey</option>
  <option value="Warlock, Fiend">Warlock, Fiend</option>
  <option value="Warlock, GenieOfAir">Warlock, GenieOfAir</option>
  <option value="Warlock, GenieOfEarth">Warlock, GenieOfEarth</option>
  <option value="Warlock, GenieOfFire">Warlock, GenieOfFire</option>
  <option value="Warlock, GenieOfWater">Warlock, GenieOfWater</option>
  <option value="Warlock, Great Old Ones">Warlock, Great Old Ones</option>
  <option value="Warlock, Hexblade">Warlock, Hexblade</option>
  <option value="Warlock, Undying">Warlock, Undying</option>
  <option value="Witch, Black Magic">Witch, Black Magic</option>
  <option value="Witch, White Magic">Witch, White Magic</option>
  <option value="Wizard, Abjurer">Wizard, Abjurer</option>
  <option value="Wizard, Bladesinger">Wizard, Bladesinger</option>
  <option value="Wizard, Conjurer">Wizard, Conjurer</option>
  <option value="Wizard, Diviner">Wizard, Diviner</option>
  <option value="Wizard, Enchanter">Wizard, Enchanter</option>
  <option value="Wizard, Evoker">Wizard, Evoker</option>
  <option value="Wizard, Illusionist">Wizard, Illusionist</option>
  <option value="Wizard, Necromancer">Wizard, Necromancer</option>
  <option value="Wizard, Theurgist">Wizard, Theurgist</option>
  <option value="Wizard, Transmuter">Wizard, Transmuter</option>
</select>
:Class<br>
<div class="dice-stats">
<span class="attack-dice-container">
<input type="text" class="attack-dice-input" placeholder="XdY+Z" onmouseout="calculateAttackResult(this)" value="1d20+0">
<span class="result">Result: 4</span>
</span>
:Dice<br>
<span class="damage-dice">
<input type="text" class="damage-dice-input" placeholder="XdY+Z" onmouseout="calculateDamageResult(this)">
<span class="damage-result">Result: 0</span>
</span>
:Dice<br>
</div>
</div>
        <span class="image-container">
          <button onclick="selectImage(this)">Mini</button>
          <img src="">
          <input type="file" accept="image/*" onchange="loadImage(event)">
        </span>
<span class="drag-handle">Drag</span>
<button onclick="rotateUnit(this)">Rotate</button>
<button onclick="toggleMenu(this.parentElement)">Stats</button>
<button onclick="selectImage(this)">Miniature</button>
<button onclick="deleteUnit(this)">Delete</button>
`;

unit.style.left = savedUnit.left;
unit.style.top = savedUnit.top;
unit.style.transform = savedUnit.transform;
unit.querySelector('.unit-name').value = savedUnit.name; 
unit.querySelector('.armor-class').value = savedUnit.ac;
unit.querySelector('.unit-armor-type').value = savedUnit.unitArmorType;
unit.querySelector('.unit-race').value = savedUnit.unitRace;
unit.querySelector('.unit-class').value = savedUnit.unitClass;
unit.querySelector('.damage-dice-input').value = savedUnit.damageDice;

let img = unit.querySelector('img');
img.src = savedUnit.imageSrc;

document.getElementById("game-container").appendChild(unit);
units.push(unit);

unit.draggable = true;
unit.addEventListener('dragstart', (e) => {
e.dataTransfer.setData('text/plain', null);
e.target.classList.add('dragging');
});
unit.addEventListener('dragend', (e) => {
e.target.classList.remove('dragging');
saveGame();
});
});
}

// Load map image from localStorage
const mapImageSrc = localStorage.getItem('mapImage');
if (mapImageSrc) {
const gameContainer = document.getElementById('game-container');
gameContainer.style.backgroundImage = `url('${mapImageSrc}')`;
}
}

document.addEventListener("DOMContentLoaded", () => {
loadGame();
});

document.addEventListener('dragover', function (e) {
e.preventDefault();
});

document.addEventListener('drop', function (e) {
e.preventDefault();
});

document.addEventListener('drag', function (e) {
let unit = document.querySelector('.unit.dragging');
if (unit) {
let rect = document.getElementById("game-container").getBoundingClientRect();
let newX = e.clientX - rect.left;
let newY = e.clientY - rect.top;
unit.style.left = `${newX}px`;
unit.style.top = `${newY}px`;
}
});
</script>

</body>

</html>